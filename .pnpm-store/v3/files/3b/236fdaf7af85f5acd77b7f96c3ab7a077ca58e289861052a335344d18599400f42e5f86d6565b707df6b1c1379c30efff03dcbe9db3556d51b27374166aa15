{"version":3,"file":"validTypes.js","names":["asExpression","suppressTypes","Set","tryParsePathIgnoreError","path","tryParse","iterateJsdoc","jsdoc","report","utils","context","settings","allowEmptyNamepaths","options","mode","tag","tags","validNamepathParsing","namepath","tagName","handled","startsWith","endChar","slice","includes","startChar","charAt","validTypeParsing","type","parse","thisNamepath","getTagDescription","replace","trim","test","thatNamepath","name","parsedTypes","traverse","node","value","undefined","has","otherModeMaps","filter","mde","map","getTagStructureForMode","tagMightHaveNamePosition","modeInfo","mightHaveTypePosition","tagMightHaveTypePosition","tagMustHaveNamePosition","mustHaveTypePosition","tagMustHaveTypePosition","tagMissingRequiredTypeOrNamepath","hasTypePosition","Boolean","hasNameOrNamepathPosition","tagMightHaveNamepath","parseClosureTemplateTag","iterateAllJsdocs","meta","docs","description","url","schema","additionalProperies","properties","default"],"sources":["../../src/rules/validTypes.js"],"sourcesContent":["import {\n  tryParse,\n  parse,\n  traverse,\n} from '@es-joy/jsdoccomment';\nimport iterateJsdoc from '../iterateJsdoc';\n\nconst asExpression = /as\\s+/u;\n\nconst suppressTypes = new Set([\n  // https://github.com/google/closure-compiler/wiki/@suppress-annotations\n  // https://github.com/google/closure-compiler/blob/master/src/com/google/javascript/jscomp/parsing/ParserConfig.properties#L154\n  'accessControls',\n  'checkDebuggerStatement',\n  'checkPrototypalTypes',\n  'checkRegExp',\n  'checkTypes',\n  'checkVars',\n  'closureDepMethodUsageChecks',\n  'const',\n  'constantProperty',\n  'deprecated',\n  'duplicate',\n  'es5Strict',\n  'externsValidation',\n  'extraProvide',\n  'extraRequire',\n  'globalThis',\n  'invalidCasts',\n  'lateProvide',\n  'legacyGoogScopeRequire',\n  'lintChecks',\n  'messageConventions',\n  'misplacedTypeAnnotation',\n  'missingOverride',\n  'missingPolyfill',\n  'missingProperties',\n  'missingProvide',\n  'missingRequire',\n  'missingSourcesWarnings',\n  'moduleLoad',\n  'nonStandardJsDocs',\n  'partialAlias',\n  'polymer',\n  'reportUnknownTypes',\n  'strictMissingProperties',\n  'strictModuleDepCheck',\n  'strictPrimitiveOperators',\n  'suspiciousCode',\n\n  // Not documented in enum\n  'switch',\n  'transitionalSuspiciousCodeWarnings',\n  'undefinedNames',\n  'undefinedVars',\n  'underscore',\n  'unknownDefines',\n  'untranspilableFeatures',\n  'unusedLocalVariables',\n  'unusedPrivateMembers',\n  'useOfGoogProvide',\n  'uselessCode',\n  'visibility',\n  'with',\n]);\n\nconst tryParsePathIgnoreError = (path) => {\n  try {\n    tryParse(path);\n\n    return true;\n  } catch {\n    // Keep the original error for including the whole type\n  }\n\n  return false;\n};\n\n// eslint-disable-next-line complexity\nexport default iterateJsdoc(({\n  jsdoc,\n  report,\n  utils,\n  context,\n  settings,\n}) => {\n  const {\n    allowEmptyNamepaths = false,\n  } = context.options[0] || {};\n  const {\n    mode,\n  } = settings;\n\n  for (const tag of jsdoc.tags) {\n    const validNamepathParsing = function (namepath, tagName) {\n      if (tryParsePathIgnoreError(namepath)) {\n        return true;\n      }\n\n      let handled = false;\n\n      if (tagName) {\n        // eslint-disable-next-line default-case\n        switch (tagName) {\n        case 'requires':\n        case 'module': {\n          if (!namepath.startsWith('module:')) {\n            handled = tryParsePathIgnoreError(`module:${namepath}`);\n          }\n\n          break;\n        }\n\n        case 'memberof': case 'memberof!': {\n          const endChar = namepath.slice(-1);\n          if ([\n            '#', '.', '~',\n          ].includes(endChar)) {\n            handled = tryParsePathIgnoreError(namepath.slice(0, -1));\n          }\n\n          break;\n        }\n\n        case 'borrows': {\n          const startChar = namepath.charAt();\n          if ([\n            '#', '.', '~',\n          ].includes(startChar)) {\n            handled = tryParsePathIgnoreError(namepath.slice(1));\n          }\n        }\n        }\n      }\n\n      if (!handled) {\n        report(`Syntax error in namepath: ${namepath}`, null, tag);\n\n        return false;\n      }\n\n      return true;\n    };\n\n    const validTypeParsing = function (type) {\n      try {\n        if (mode === 'permissive') {\n          tryParse(type);\n        } else {\n          parse(type, mode);\n        }\n      } catch {\n        report(`Syntax error in type: ${type}`, null, tag);\n\n        return false;\n      }\n\n      return true;\n    };\n\n    if (tag.tag === 'borrows') {\n      const thisNamepath = utils.getTagDescription(tag).replace(asExpression, '')\n        .trim();\n\n      if (!asExpression.test(utils.getTagDescription(tag)) || !thisNamepath) {\n        report(`@borrows must have an \"as\" expression. Found \"${utils.getTagDescription(tag)}\"`, null, tag);\n\n        continue;\n      }\n\n      if (validNamepathParsing(thisNamepath, 'borrows')) {\n        const thatNamepath = tag.name;\n\n        validNamepathParsing(thatNamepath);\n      }\n\n      continue;\n    }\n\n    if (tag.tag === 'suppress' && mode === 'closure') {\n      let parsedTypes;\n\n      try {\n        parsedTypes = tryParse(tag.type);\n      } catch {\n        // Ignore\n      }\n\n      if (parsedTypes) {\n        traverse(parsedTypes, (node) => {\n          const {\n            value: type,\n          } = node;\n          if (type !== undefined && !suppressTypes.has(type)) {\n            report(`Syntax error in supresss type: ${type}`, null, tag);\n          }\n        });\n      }\n    }\n\n    const otherModeMaps = [\n      'jsdoc', 'typescript', 'closure', 'permissive',\n    ].filter(\n      (mde) => {\n        return mde !== mode;\n      },\n    ).map((mde) => {\n      return utils.getTagStructureForMode(mde);\n    });\n\n    const tagMightHaveNamePosition = utils.tagMightHaveNamePosition(tag.tag, otherModeMaps);\n    if (tagMightHaveNamePosition !== true && tag.name) {\n      const modeInfo = tagMightHaveNamePosition === false ? '' : ` in \"${mode}\" mode`;\n      report(`@${tag.tag} should not have a name${modeInfo}.`, null, tag);\n\n      continue;\n    }\n\n    const mightHaveTypePosition = utils.tagMightHaveTypePosition(tag.tag, otherModeMaps);\n    if (mightHaveTypePosition !== true && tag.type) {\n      const modeInfo = mightHaveTypePosition === false ? '' : ` in \"${mode}\" mode`;\n      report(`@${tag.tag} should not have a bracketed type${modeInfo}.`, null, tag);\n\n      continue;\n    }\n\n    // REQUIRED NAME\n    const tagMustHaveNamePosition = utils.tagMustHaveNamePosition(tag.tag, otherModeMaps);\n\n    // Don't handle `@param` here though it does require name as handled by\n    //  `require-param-name` (`@property` would similarly seem to require one,\n    //  but is handled by `require-property-name`)\n    if (tagMustHaveNamePosition !== false && !tag.name && !allowEmptyNamepaths && ![\n      'param', 'arg', 'argument',\n      'property', 'prop',\n    ].includes(tag.tag) &&\n      (tag.tag !== 'see' || !utils.getTagDescription(tag).includes('{@link'))\n    ) {\n      const modeInfo = tagMustHaveNamePosition === true ? '' : ` in \"${mode}\" mode`;\n      report(`Tag @${tag.tag} must have a name/namepath${modeInfo}.`, null, tag);\n\n      continue;\n    }\n\n    // REQUIRED TYPE\n    const mustHaveTypePosition = utils.tagMustHaveTypePosition(tag.tag, otherModeMaps);\n    if (mustHaveTypePosition !== false && !tag.type) {\n      const modeInfo = mustHaveTypePosition === true ? '' : ` in \"${mode}\" mode`;\n      report(`Tag @${tag.tag} must have a type${modeInfo}.`, null, tag);\n\n      continue;\n    }\n\n    // REQUIRED TYPE OR NAME/NAMEPATH\n    const tagMissingRequiredTypeOrNamepath = utils.tagMissingRequiredTypeOrNamepath(tag, otherModeMaps);\n    if (tagMissingRequiredTypeOrNamepath !== false && !allowEmptyNamepaths) {\n      const modeInfo = tagMissingRequiredTypeOrNamepath === true ? '' : ` in \"${mode}\" mode`;\n      report(`Tag @${tag.tag} must have either a type or namepath${modeInfo}.`, null, tag);\n\n      continue;\n    }\n\n    // VALID TYPE\n    const hasTypePosition = mightHaveTypePosition === true && Boolean(tag.type);\n    if (hasTypePosition) {\n      validTypeParsing(tag.type);\n    }\n\n    // VALID NAME/NAMEPATH\n    const hasNameOrNamepathPosition = (\n      tagMustHaveNamePosition !== false ||\n      utils.tagMightHaveNamepath(tag.tag)\n    ) && Boolean(tag.name);\n\n    if (hasNameOrNamepathPosition) {\n      if (mode !== 'jsdoc' && tag.tag === 'template') {\n        for (const namepath of utils.parseClosureTemplateTag(tag)) {\n          validNamepathParsing(namepath);\n        }\n      } else {\n        validNamepathParsing(tag.name, tag.tag);\n      }\n    }\n  }\n}, {\n  iterateAllJsdocs: true,\n  meta: {\n    docs: {\n      description: 'Requires all types to be valid JSDoc or Closure compiler types without syntax errors.',\n      url: 'https://github.com/gajus/eslint-plugin-jsdoc#eslint-plugin-jsdoc-rules-valid-types',\n    },\n    schema: [\n      {\n        additionalProperies: false,\n        properties: {\n          allowEmptyNamepaths: {\n            default: false,\n            type: 'boolean',\n          },\n        },\n        type: 'object',\n      },\n    ],\n    type: 'suggestion',\n  },\n});\n"],"mappings":"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"}