{"version":3,"file":"requireParam.js","names":["rootNamer","desiredRoots","currentIndex","name","idx","incremented","length","base","suffix","shift","iterateJsdoc","jsdoc","utils","context","preferredTagName","getPreferredTagName","tagName","jsdocParameterNames","getJsdocTagsDeep","shallowJsdocParameterNames","filter","tag","includes","map","avoidDocs","hasTag","autoIncrementBase","checkRestProperty","checkDestructured","checkDestructuredRoots","checkTypesPattern","enableFixer","enableRootFixer","enableRestElementFixer","unnamedRootBase","useDefaultObjectProperties","options","checkTypesRegex","getRegexFromString","missingTags","functionParameterNames","getFunctionParameterNames","flattenedRoots","flattenRoots","names","paramIndex","hasParamIndex","cur","dropPathSegmentQuotes","String","getParamIndex","setParamIndex","entries","findExpectedIndex","jsdocTags","indexAtFunctionParams","remainingRoots","slice","foundIndex","findIndex","newAdd","some","remainingRoot","Array","isArray","tags","tagLineCount","source","tokens","end","nextRootName","namer","functionParameterIdx","functionParameterName","inc","matchedJsdoc","rootName","type","search","hasRestElement","hasPropertyRest","rests","notCheckingNames","paramName","find","fpn","emptyParamIdx","push","remove","fullParamName","notCheckingName","paramType","comparePaths","undefined","startsWith","funcParamName","restElement","fix","createTokens","tagIndex","sourceIndex","spliceCount","number","delimiter","description","lineEnd","postDelimiter","postName","postTag","postType","start","splice","firstNumber","src","offset","expectedIdx","fixer","missingTag","makeMultiline","reportJSDoc","contextDefaults","meta","docs","url","fixable","schema","additionalProperties","properties","default","checkConstructors","checkGetters","checkSetters","contexts","items","anyOf","comment","exemptedBy"],"sources":["../../src/rules/requireParam.js"],"sourcesContent":["import iterateJsdoc from '../iterateJsdoc';\n\n/**\n * @template T\n * @param {string[]} desiredRoots\n * @param {number} currentIndex\n * @returns {[string, boolean, () => T]}\n */\nconst rootNamer = (desiredRoots, currentIndex) => {\n  let name;\n  let idx = currentIndex;\n  const incremented = desiredRoots.length <= 1;\n  if (incremented) {\n    const base = desiredRoots[0];\n    const suffix = idx++;\n    name = `${base}${suffix}`;\n  } else {\n    name = desiredRoots.shift();\n  }\n\n  return [\n    name, incremented, () => {\n      return rootNamer(desiredRoots, idx);\n    },\n  ];\n};\n\n// eslint-disable-next-line complexity\nexport default iterateJsdoc(({\n  jsdoc,\n  utils,\n  context,\n}) => {\n  const preferredTagName = utils.getPreferredTagName({\n    tagName: 'param',\n  });\n  if (!preferredTagName) {\n    return;\n  }\n\n  const jsdocParameterNames = utils.getJsdocTagsDeep(preferredTagName);\n\n  const shallowJsdocParameterNames = jsdocParameterNames.filter((tag) => {\n    return !tag.name.includes('.');\n  }).map((tag, idx) => {\n    return {\n      ...tag,\n      idx,\n    };\n  });\n\n  if (utils.avoidDocs()) {\n    return;\n  }\n\n  // Param type is specified by type in @type\n  if (utils.hasTag('type')) {\n    return;\n  }\n\n  const {\n    autoIncrementBase = 0,\n    checkRestProperty = false,\n    checkDestructured = true,\n    checkDestructuredRoots = true,\n    checkTypesPattern = '/^(?:[oO]bject|[aA]rray|PlainObject|Generic(?:Object|Array))$/',\n    enableFixer = true,\n    enableRootFixer = true,\n    enableRestElementFixer = true,\n    unnamedRootBase = [\n      'root',\n    ],\n    useDefaultObjectProperties = false,\n  } = context.options[0] || {};\n\n  const checkTypesRegex = utils.getRegexFromString(checkTypesPattern);\n\n  const missingTags = [];\n  const functionParameterNames = utils.getFunctionParameterNames(useDefaultObjectProperties);\n  const flattenedRoots = utils.flattenRoots(functionParameterNames).names;\n\n  const paramIndex = {};\n  const hasParamIndex = (cur) => {\n    return utils.dropPathSegmentQuotes(String(cur)) in paramIndex;\n  };\n\n  const getParamIndex = (cur) => {\n    return paramIndex[utils.dropPathSegmentQuotes(String(cur))];\n  };\n\n  const setParamIndex = (cur, idx) => {\n    paramIndex[utils.dropPathSegmentQuotes(String(cur))] = idx;\n  };\n\n  for (const [\n    idx,\n    cur,\n  ] of flattenedRoots.entries()) {\n    setParamIndex(cur, idx);\n  }\n\n  const findExpectedIndex = (jsdocTags, indexAtFunctionParams) => {\n    const remainingRoots = functionParameterNames.slice(indexAtFunctionParams || 0);\n    const foundIndex = jsdocTags.findIndex(({\n      name,\n      newAdd,\n    }) => {\n      return !newAdd && remainingRoots.some((remainingRoot) => {\n        if (Array.isArray(remainingRoot)) {\n          return remainingRoot[1].names.includes(name);\n        }\n\n        if (typeof remainingRoot === 'object') {\n          return name === remainingRoot.name;\n        }\n\n        return name === remainingRoot;\n      });\n    });\n\n    const tags = foundIndex > -1 ?\n      jsdocTags.slice(0, foundIndex) :\n      jsdocTags.filter(({\n        tag,\n      }) => {\n        return tag === preferredTagName;\n      });\n\n    let tagLineCount = 0;\n    for (const {\n      source,\n    } of tags) {\n      for (const {\n        tokens: {\n          end,\n        },\n      } of source) {\n        if (!end) {\n          tagLineCount++;\n        }\n      }\n    }\n\n    return tagLineCount;\n  };\n\n  let [\n    nextRootName,\n    incremented,\n    namer,\n  ] = rootNamer([\n    ...unnamedRootBase,\n  ], autoIncrementBase);\n\n  for (const [\n    functionParameterIdx,\n    functionParameterName,\n  ] of functionParameterNames.entries()) {\n    let inc;\n    if (Array.isArray(functionParameterName)) {\n      const matchedJsdoc = shallowJsdocParameterNames[functionParameterIdx] ||\n        jsdocParameterNames[functionParameterIdx];\n\n      let rootName;\n      if (functionParameterName[0]) {\n        rootName = functionParameterName[0];\n      } else if (matchedJsdoc && matchedJsdoc.name) {\n        rootName = matchedJsdoc.name;\n        if (matchedJsdoc.type && matchedJsdoc.type.search(checkTypesRegex) === -1) {\n          continue;\n        }\n      } else {\n        rootName = nextRootName;\n        inc = incremented;\n        [\n          nextRootName,\n          incremented,\n          namer,\n        ] = namer();\n      }\n\n      const {\n        hasRestElement,\n        hasPropertyRest,\n        rests,\n        names,\n      } = functionParameterName[1];\n      const notCheckingNames = [];\n      if (!enableRestElementFixer && hasRestElement) {\n        continue;\n      }\n\n      if (!checkDestructuredRoots) {\n        continue;\n      }\n\n      for (const [\n        idx,\n        paramName,\n      ] of names.entries()) {\n        // Add root if the root name is not in the docs (and is not already\n        //  in the tags to be fixed)\n        if (!jsdocParameterNames.find(({\n          name,\n        }) => {\n          return name === rootName;\n        }) && !missingTags.find(({\n          functionParameterName: fpn,\n        }) => {\n          return fpn === rootName;\n        })) {\n          const emptyParamIdx = jsdocParameterNames.findIndex(({\n            name,\n          }) => {\n            return !name;\n          });\n\n          if (emptyParamIdx > -1) {\n            missingTags.push({\n              functionParameterIdx: emptyParamIdx,\n              functionParameterName: rootName,\n              inc,\n              remove: true,\n            });\n          } else {\n            missingTags.push({\n              functionParameterIdx: hasParamIndex(rootName) ?\n                getParamIndex(rootName) :\n                getParamIndex(paramName),\n              functionParameterName: rootName,\n              inc,\n            });\n          }\n        }\n\n        if (!checkDestructured) {\n          continue;\n        }\n\n        if (!checkRestProperty && rests[idx]) {\n          continue;\n        }\n\n        const fullParamName = `${rootName}.${paramName}`;\n\n        const notCheckingName = jsdocParameterNames.find(({\n          name,\n          type: paramType,\n        }) => {\n          return utils.comparePaths(name)(fullParamName) && paramType.search(checkTypesRegex) === -1 && paramType !== '';\n        });\n\n        if (notCheckingName !== undefined) {\n          notCheckingNames.push(notCheckingName.name);\n        }\n\n        if (notCheckingNames.find((name) => {\n          return fullParamName.startsWith(name);\n        })) {\n          continue;\n        }\n\n        if (jsdocParameterNames && !jsdocParameterNames.find(({\n          name,\n        }) => {\n          return utils.comparePaths(name)(fullParamName);\n        })) {\n          missingTags.push({\n            functionParameterIdx: getParamIndex(\n              functionParameterName[0] ? fullParamName : paramName,\n            ),\n            functionParameterName: fullParamName,\n            inc,\n            type: hasRestElement && !hasPropertyRest ? '{...any}' : undefined,\n          });\n        }\n      }\n\n      continue;\n    }\n\n    let funcParamName;\n    let type;\n    if (typeof functionParameterName === 'object') {\n      if (!enableRestElementFixer && functionParameterName.restElement) {\n        continue;\n      }\n\n      funcParamName = functionParameterName.name;\n      type = '{...any}';\n    } else {\n      funcParamName = functionParameterName;\n    }\n\n    if (jsdocParameterNames && !jsdocParameterNames.find(({\n      name,\n    }) => {\n      return name === funcParamName;\n    })) {\n      missingTags.push({\n        functionParameterIdx: getParamIndex(funcParamName),\n        functionParameterName: funcParamName,\n        inc,\n        type,\n      });\n    }\n  }\n\n  const fix = ({\n    functionParameterIdx,\n    functionParameterName,\n    remove,\n    inc,\n    type,\n  }) => {\n    if (inc && !enableRootFixer) {\n      return;\n    }\n\n    const createTokens = (tagIndex, sourceIndex, spliceCount) => {\n      // console.log(sourceIndex, tagIndex, jsdoc.tags, jsdoc.source);\n      const tokens = {\n        number: sourceIndex + 1,\n        tokens: {\n          delimiter: '*',\n          description: '',\n          end: '',\n          lineEnd: '',\n          name: functionParameterName,\n          newAdd: true,\n          postDelimiter: ' ',\n          postName: '',\n          postTag: ' ',\n          postType: type ? ' ' : '',\n          start: jsdoc.source[sourceIndex].tokens.start,\n          tag: `@${preferredTagName}`,\n          type: type ?? '',\n        },\n      };\n      jsdoc.tags.splice(tagIndex, spliceCount, {\n        name: functionParameterName,\n        newAdd: true,\n        source: [\n          tokens,\n        ],\n        tag: preferredTagName,\n        type: type ?? '',\n      });\n      const firstNumber = jsdoc.source[0].number;\n      jsdoc.source.splice(sourceIndex, spliceCount, tokens);\n      for (const [\n        idx,\n        src,\n      ] of jsdoc.source.slice(sourceIndex).entries()) {\n        src.number = firstNumber + sourceIndex + idx;\n      }\n    };\n\n    const offset = jsdoc.source.findIndex(({\n      tokens: {\n        tag,\n        end,\n      },\n    }) => {\n      return tag || end;\n    });\n    if (remove) {\n      createTokens(functionParameterIdx, offset + functionParameterIdx, 1);\n    } else {\n      const expectedIdx = findExpectedIndex(jsdoc.tags, functionParameterIdx);\n      createTokens(expectedIdx, offset + expectedIdx, 0);\n    }\n  };\n\n  const fixer = () => {\n    for (const missingTag of missingTags) {\n      fix(missingTag);\n    }\n  };\n\n  if (missingTags.length && jsdoc.source.length === 1) {\n    utils.makeMultiline();\n  }\n\n  for (const {\n    functionParameterName,\n  } of missingTags) {\n    utils.reportJSDoc(\n      `Missing JSDoc @${preferredTagName} \"${functionParameterName}\" declaration.`,\n      null,\n      enableFixer ? fixer : null,\n    );\n  }\n}, {\n  contextDefaults: true,\n  meta: {\n    docs: {\n      description: 'Requires that all function parameters are documented.',\n      url: 'https://github.com/gajus/eslint-plugin-jsdoc#eslint-plugin-jsdoc-rules-require-param',\n    },\n    fixable: 'code',\n    schema: [\n      {\n        additionalProperties: false,\n        properties: {\n          autoIncrementBase: {\n            default: 0,\n            type: 'integer',\n          },\n          checkConstructors: {\n            default: true,\n            type: 'boolean',\n          },\n          checkDestructured: {\n            default: true,\n            type: 'boolean',\n          },\n          checkDestructuredRoots: {\n            default: true,\n            type: 'boolean',\n          },\n          checkGetters: {\n            default: false,\n            type: 'boolean',\n          },\n          checkRestProperty: {\n            default: false,\n            type: 'boolean',\n          },\n          checkSetters: {\n            default: false,\n            type: 'boolean',\n          },\n          checkTypesPattern: {\n            type: 'string',\n          },\n          contexts: {\n            items: {\n              anyOf: [\n                {\n                  type: 'string',\n                },\n                {\n                  additionalProperties: false,\n                  properties: {\n                    comment: {\n                      type: 'string',\n                    },\n                    context: {\n                      type: 'string',\n                    },\n                  },\n                  type: 'object',\n                },\n              ],\n            },\n            type: 'array',\n          },\n          enableFixer: {\n            type: 'boolean',\n          },\n          enableRestElementFixer: {\n            type: 'boolean',\n          },\n          enableRootFixer: {\n            type: 'boolean',\n          },\n          exemptedBy: {\n            items: {\n              type: 'string',\n            },\n            type: 'array',\n          },\n          unnamedRootBase: {\n            items: {\n              type: 'string',\n            },\n            type: 'array',\n          },\n          useDefaultObjectProperties: {\n            type: 'boolean',\n          },\n        },\n        type: 'object',\n      },\n    ],\n    type: 'suggestion',\n  },\n});\n"],"mappings":"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"}