{"version":3,"file":"getDefaultTagStructureForMode.js","names":["getDefaultTagStructureForMode","mode","isJsdoc","isClosure","isTypescript","isPermissive","isJsdocOrPermissive","isJsdocOrTypescript","isTypescriptOrClosure","isClosureOrPermissive","isJsdocTypescriptOrPermissive","Map"],"sources":["../src/getDefaultTagStructureForMode.js"],"sourcesContent":["const getDefaultTagStructureForMode = (mode) => {\n  const isJsdoc = mode === 'jsdoc';\n  const isClosure = mode === 'closure';\n  const isTypescript = mode === 'typescript';\n  const isPermissive = mode === 'permissive';\n\n  const isJsdocOrPermissive = isJsdoc || isPermissive;\n  const isJsdocOrTypescript = isJsdoc || isTypescript;\n  const isTypescriptOrClosure = isTypescript || isClosure;\n  const isClosureOrPermissive = isClosure || isPermissive;\n  const isJsdocTypescriptOrPermissive = isJsdocOrTypescript || isPermissive;\n\n  // Properties:\n  // `nameContents` - 'namepath-referencing'|'namepath-defining'|'text'|false\n  // `typeAllowed` - boolean\n  // `nameRequired` - boolean\n  // `typeRequired` - boolean\n  // `typeOrNameRequired` - boolean\n\n  // All of `typeAllowed` have a signature with \"type\" except for\n  //  `augments`/`extends` (\"namepath\")\n  //  `param`/`arg`/`argument` (no signature)\n  //  `property`/`prop` (no signature)\n  //  `modifies` (undocumented)\n\n  // None of the `nameContents: 'namepath-defining'` show as having curly\n  //  brackets for their name/namepath\n\n  // Among `namepath-defining` and `namepath-referencing`, these do not seem\n  //  to allow curly brackets in their doc signature or examples (`modifies`\n  //  references namepaths within its type brackets and `param` is\n  //  name-defining but not namepath-defining, so not part of these groups)\n\n  // Todo: Should support special processing for \"name\" as distinct from\n  //   \"namepath\" (e.g., param can't define a namepath)\n\n  // Once checking inline tags:\n  // Todo: Re: `typeOrNameRequired`, `@link` (or @linkcode/@linkplain) seems\n  //  to require a namepath OR URL and might be checked as such.\n  // Todo: Should support a `tutorialID` type (for `@tutorial` block and\n  //  inline)\n\n  return new Map([\n    [\n      'alias', new Map([\n        // Signature seems to require a \"namepath\" (and no counter-examples)\n        [\n          'nameContents', 'namepath-referencing',\n        ],\n\n        // \"namepath\"\n        [\n          'typeOrNameRequired', true,\n        ],\n      ]),\n    ],\n\n    [\n      'arg', new Map([\n        [\n          'nameContents', 'namepath-defining',\n        ],\n\n        // See `param`\n        [\n          'nameRequired', true,\n        ],\n\n        // Has no formal signature in the docs but shows curly brackets\n        //   in the examples\n        [\n          'typeAllowed', true,\n        ],\n      ]),\n    ],\n\n    [\n      'argument', new Map([\n        [\n          'nameContents', 'namepath-defining',\n        ],\n\n        // See `param`\n        [\n          'nameRequired', true,\n        ],\n\n        // Has no formal signature in the docs but shows curly brackets\n        //   in the examples\n        [\n          'typeAllowed', true,\n        ],\n      ]),\n    ],\n\n    [\n      'augments', new Map([\n        // Signature seems to require a \"namepath\" (and no counter-examples)\n        [\n          'nameContents', 'namepath-referencing',\n        ],\n\n        // Does not show curly brackets in either the signature or examples\n        [\n          'typeAllowed', true,\n        ],\n\n        // \"namepath\"\n        [\n          'typeOrNameRequired', true,\n        ],\n      ]),\n    ],\n\n    [\n      'borrows', new Map([\n        // `borrows` has a different format, however, so needs special parsing;\n        //   seems to require both, and as \"namepath\"'s\n        [\n          'nameContents', 'namepath-referencing',\n        ],\n\n        // \"namepath\"\n        [\n          'typeOrNameRequired', true,\n        ],\n      ]),\n    ],\n\n    [\n      'callback', new Map([\n        // Seems to require a \"namepath\" in the signature (with no\n        //   counter-examples); TypeScript does not enforce but seems\n        //   problematic as not attached so presumably not useable without it\n        [\n          'nameContents', 'namepath-defining',\n        ],\n\n        // \"namepath\"\n        [\n          'nameRequired', true,\n        ],\n      ]),\n    ],\n\n    [\n      'class', new Map([\n        // Allows for \"name\"'s in signature, but indicated as optional\n        [\n          'nameContents', 'namepath-defining',\n        ],\n\n        // Not in use, but should be this value if using to power `empty-tags`\n        [\n          'nameAllowed', true,\n        ],\n\n        [\n          'typeAllowed', true,\n        ],\n      ]),\n    ],\n\n    [\n      'const', new Map([\n        // Allows for \"name\"'s in signature, but indicated as optional\n        [\n          'nameContents', 'namepath-defining',\n        ],\n\n        [\n          'typeAllowed', true,\n        ],\n      ]),\n    ],\n    [\n      'constant', new Map([\n        // Allows for \"name\"'s in signature, but indicated as optional\n        [\n          'nameContents', 'namepath-defining',\n        ],\n\n        [\n          'typeAllowed', true,\n        ],\n      ]),\n    ],\n    [\n      'constructor', new Map([\n        // Allows for \"name\"'s in signature, but indicated as optional\n        [\n          'nameContents', 'namepath-defining',\n        ],\n\n        [\n          'typeAllowed', true,\n        ],\n      ]),\n    ],\n\n    [\n      'constructs', new Map([\n        // Allows for \"name\"'s in signature, but indicated as optional\n        [\n          'nameContents', 'namepath-defining',\n        ],\n\n        [\n          'nameRequired', false,\n        ],\n\n        [\n          'typeAllowed', false,\n        ],\n      ]),\n    ],\n\n    [\n      'define', new Map([\n        [\n          'typeRequired', isClosure,\n        ],\n      ]),\n    ],\n\n    [\n      'emits', new Map([\n        // Signature seems to require a \"name\" (of an event) and no counter-examples\n        [\n          'nameContents', 'namepath-referencing',\n        ],\n\n        [\n          'nameRequired', true,\n        ],\n\n        [\n          'typeAllowed', false,\n        ],\n      ]),\n    ],\n\n    [\n      'enum', new Map([\n        // Has example showing curly brackets but not in doc signature\n        [\n          'typeAllowed', true,\n        ],\n      ]),\n    ],\n\n    [\n      'event', new Map([\n        // The doc signature of `event` seems to require a \"name\"\n        [\n          'nameRequired', true,\n        ],\n\n        // Appears to require a \"name\" in its signature, albeit somewhat\n        //  different from other \"name\"'s (including as described\n        //  at https://jsdoc.app/about-namepaths.html )\n        [\n          'nameContents', 'namepath-defining',\n        ],\n      ]),\n    ],\n\n    [\n      'exception', new Map([\n        // Shows curly brackets in the signature and in the examples\n        [\n          'typeAllowed', true,\n        ],\n      ]),\n    ],\n\n    // Closure\n    [\n      'export', new Map([\n        [\n          'typeAllowed', isClosureOrPermissive,\n        ],\n      ]),\n    ],\n\n    [\n      'exports', new Map([\n        [\n          'nameContents', 'namepath-defining',\n        ],\n\n        [\n          'nameRequired', isJsdoc,\n        ],\n\n        [\n          'typeAllowed', isClosureOrPermissive,\n        ],\n      ]),\n    ],\n\n    [\n      'extends', new Map([\n        // Signature seems to require a \"namepath\" (and no counter-examples)\n        [\n          'nameContents', 'namepath-referencing',\n        ],\n\n        // Does not show curly brackets in either the signature or examples\n        [\n          'typeAllowed', isTypescriptOrClosure || isPermissive,\n        ],\n\n        [\n          'nameRequired', isJsdoc,\n        ],\n\n        // \"namepath\"\n        [\n          'typeOrNameRequired', isTypescriptOrClosure || isPermissive,\n        ],\n      ]),\n    ],\n\n    [\n      'external', new Map([\n        // Appears to require a \"name\" in its signature, albeit somewhat\n        //  different from other \"name\"'s (including as described\n        //  at https://jsdoc.app/about-namepaths.html )\n        [\n          'nameContents', 'namepath-defining',\n        ],\n\n        // \"name\" (and a special syntax for the `external` name)\n        [\n          'nameRequired', true,\n        ],\n\n        [\n          'typeAllowed', false,\n        ],\n      ]),\n    ],\n\n    [\n      'fires', new Map([\n        // Signature seems to require a \"name\" (of an event) and no\n        //  counter-examples\n        [\n          'nameContents', 'namepath-referencing',\n        ],\n\n        [\n          'nameRequired', true,\n        ],\n\n        [\n          'typeAllowed', false,\n        ],\n      ]),\n    ],\n\n    [\n      'function', new Map([\n        // Allows for \"name\"'s in signature, but indicated as optional\n        [\n          'nameContents', 'namepath-defining',\n        ],\n\n        [\n          'nameRequired', false,\n        ],\n\n        [\n          'typeAllowed', false,\n        ],\n      ]),\n    ],\n    [\n      'func', new Map([\n        // Allows for \"name\"'s in signature, but indicated as optional\n        [\n          'nameContents', 'namepath-defining',\n        ],\n      ]),\n    ],\n\n    [\n      'host', new Map([\n        // Appears to require a \"name\" in its signature, albeit somewhat\n        //  different from other \"name\"'s (including as described\n        //  at https://jsdoc.app/about-namepaths.html )\n        [\n          'nameContents', 'namepath-defining',\n        ],\n\n        // See `external`\n        [\n          'nameRequired', true,\n        ],\n\n        [\n          'typeAllowed', false,\n        ],\n      ]),\n    ],\n\n    [\n      'interface', new Map([\n        // Allows for \"name\" in signature, but indicates as optional\n        [\n          'nameContents',\n          isJsdocTypescriptOrPermissive ? 'namepath-defining' : false,\n        ],\n\n        // Not in use, but should be this value if using to power `empty-tags`\n        [\n          'nameAllowed', isClosure,\n        ],\n\n        [\n          'typeAllowed', false,\n        ],\n      ]),\n    ],\n\n    [\n      'internal', new Map([\n        // https://www.typescriptlang.org/tsconfig/#stripInternal\n        [\n          'nameContents', false,\n        ],\n        // Not in use, but should be this value if using to power `empty-tags`\n        [\n          'nameAllowed', false,\n        ],\n      ]),\n    ],\n\n    [\n      'implements', new Map([\n        // Shows curly brackets in the doc signature and examples\n        // \"typeExpression\"\n        [\n          'typeRequired', true,\n        ],\n      ]),\n    ],\n\n    [\n      'lends', new Map([\n        // Signature seems to require a \"namepath\" (and no counter-examples)\n        [\n          'nameContents', 'namepath-referencing',\n        ],\n\n        // \"namepath\"\n        [\n          'typeOrNameRequired', true,\n        ],\n      ]),\n    ],\n\n    [\n      'listens', new Map([\n        // Signature seems to require a \"name\" (of an event) and no\n        //  counter-examples\n        [\n          'nameContents', 'namepath-referencing',\n        ],\n\n        [\n          'nameRequired', true,\n        ],\n\n        [\n          'typeAllowed', false,\n        ],\n      ]),\n    ],\n\n    [\n      'member', new Map([\n        // Allows for \"name\"'s in signature, but indicated as optional\n        [\n          'nameContents', 'namepath-defining',\n        ],\n\n        // Has example showing curly brackets but not in doc signature\n        [\n          'typeAllowed', true,\n        ],\n      ]),\n    ],\n\n    [\n      'memberof', new Map([\n        // Signature seems to require a \"namepath\" (and no counter-examples),\n        //  though it allows an incomplete namepath ending with connecting symbol\n        [\n          'nameContents', 'namepath-referencing',\n        ],\n\n        // \"namepath\"\n        [\n          'typeOrNameRequired', true,\n        ],\n      ]),\n    ],\n    [\n      'memberof!', new Map([\n        // Signature seems to require a \"namepath\" (and no counter-examples),\n        //  though it allows an incomplete namepath ending with connecting symbol\n        [\n          'nameContents', 'namepath-referencing',\n        ],\n\n        // \"namepath\"\n        [\n          'typeOrNameRequired', true,\n        ],\n      ]),\n    ],\n\n    [\n      'method', new Map([\n        // Allows for \"name\"'s in signature, but indicated as optional\n        [\n          'nameContents', 'namepath-defining',\n        ],\n      ]),\n    ],\n    [\n      'mixes', new Map([\n        // Signature seems to require a \"OtherObjectPath\" with no\n        //   counter-examples\n        [\n          'nameContents', 'namepath-referencing',\n        ],\n\n        // \"OtherObjectPath\"\n        [\n          'typeOrNameRequired', true,\n        ],\n      ]),\n    ],\n\n    [\n      'mixin', new Map([\n        // Allows for \"name\"'s in signature, but indicated as optional\n        [\n          'nameContents', 'namepath-defining',\n        ],\n\n        [\n          'nameRequired', false,\n        ],\n\n        [\n          'typeAllowed', false,\n        ],\n      ]),\n    ],\n\n    [\n      'modifies', new Map([\n        // Has no documentation, but test example has curly brackets, and\n        //  \"name\" would be suggested rather than \"namepath\" based on example;\n        //  not sure if name is required\n        [\n          'typeAllowed', true,\n        ],\n      ]),\n    ],\n\n    [\n      'module', new Map([\n        // Optional \"name\" and no curly brackets\n        //  this block impacts `no-undefined-types` and `valid-types` (search for\n        //  \"isNamepathDefiningTag|tagMightHaveNamepath|tagMightHaveEitherTypeOrNamePosition\")\n        [\n          'nameContents', isJsdoc ? 'namepath-defining' : 'text',\n        ],\n\n        // Shows the signature with curly brackets but not in the example\n        [\n          'typeAllowed', true,\n        ],\n      ]),\n    ],\n\n    [\n      'name', new Map([\n        // Seems to require a \"namepath\" in the signature (with no\n        //   counter-examples)\n        [\n          'nameContents', 'namepath-defining',\n        ],\n\n        // \"namepath\"\n        [\n          'nameRequired', true,\n        ],\n\n        // \"namepath\"\n        [\n          'typeOrNameRequired', true,\n        ],\n      ]),\n    ],\n\n    [\n      'namespace', new Map([\n        // Allows for \"name\"'s in signature, but indicated as optional\n        [\n          'nameContents', 'namepath-defining',\n        ],\n\n        // Shows the signature with curly brackets but not in the example\n        [\n          'typeAllowed', true,\n        ],\n      ]),\n    ],\n    [\n      'package', new Map([\n        // Shows the signature with curly brackets but not in the example\n        // \"typeExpression\"\n        [\n          'typeAllowed', isClosureOrPermissive,\n        ],\n      ]),\n    ],\n\n    [\n      'param', new Map([\n        [\n          'nameContents', 'namepath-defining',\n        ],\n\n        // Though no signature provided requiring, per\n        //  https://jsdoc.app/tags-param.html:\n        // \"The @param tag requires you to specify the name of the parameter you\n        //  are documenting.\"\n        [\n          'nameRequired', true,\n        ],\n\n        // Has no formal signature in the docs but shows curly brackets\n        //   in the examples\n        [\n          'typeAllowed', true,\n        ],\n      ]),\n    ],\n\n    [\n      'private', new Map([\n        // Shows the signature with curly brackets but not in the example\n        // \"typeExpression\"\n        [\n          'typeAllowed', isClosureOrPermissive,\n        ],\n      ]),\n    ],\n\n    [\n      'prop', new Map([\n        [\n          'nameContents', 'namepath-defining',\n        ],\n\n        // See `property`\n        [\n          'nameRequired', true,\n        ],\n\n        // Has no formal signature in the docs but shows curly brackets\n        //   in the examples\n        [\n          'typeAllowed', true,\n        ],\n      ]),\n    ],\n\n    [\n      'property', new Map([\n        [\n          'nameContents', 'namepath-defining',\n        ],\n\n        // No docs indicate required, but since parallel to `param`, we treat as\n        //   such:\n        [\n          'nameRequired', true,\n        ],\n\n        // Has no formal signature in the docs but shows curly brackets\n        //   in the examples\n        [\n          'typeAllowed', true,\n        ],\n      ]),\n    ],\n\n    [\n      'protected', new Map([\n        // Shows the signature with curly brackets but not in the example\n        // \"typeExpression\"\n        [\n          'typeAllowed', isClosureOrPermissive,\n        ],\n      ]),\n    ],\n\n    [\n      'public', new Map([\n        // Does not show a signature nor show curly brackets in the example\n        [\n          'typeAllowed', isClosureOrPermissive,\n        ],\n      ]),\n    ],\n\n    [\n      'requires', new Map([\n        // <someModuleName>\n        [\n          'nameContents', 'namepath-referencing',\n        ],\n\n        [\n          'nameRequired', true,\n        ],\n\n        [\n          'typeAllowed', false,\n        ],\n      ]),\n    ],\n\n    [\n      'returns', new Map([\n        // Shows curly brackets in the signature and in the examples\n        [\n          'typeAllowed', true,\n        ],\n      ]),\n    ],\n    [\n      'return', new Map([\n        // Shows curly brackets in the signature and in the examples\n        [\n          'typeAllowed', true,\n        ],\n      ]),\n    ],\n\n    [\n      'see', new Map([\n        // Signature allows for \"namepath\" or text, so user must configure to\n        //  'namepath-referencing' to enforce checks\n        [\n          'nameContents', 'text',\n        ],\n      ]),\n    ],\n\n    [\n      'static', new Map([\n        // Does not show a signature nor show curly brackets in the example\n        [\n          'typeAllowed', isClosureOrPermissive,\n        ],\n      ]),\n    ],\n\n    [\n      'suppress', new Map([\n        [\n          'nameContents', !isClosure,\n        ],\n        [\n          'typeRequired', isClosure,\n        ],\n      ]),\n    ],\n\n    [\n      'template', new Map([\n        [\n          'nameContents', isJsdoc ? 'text' : 'namepath-referencing',\n        ],\n\n        // Though defines `nameContents: 'namepath-defining'` in a sense, it is\n        //   not parseable in the same way for template (e.g., allowing commas),\n        //   so not adding\n        [\n          'typeAllowed', isTypescriptOrClosure || isPermissive,\n        ],\n      ]),\n    ],\n\n    [\n      'this', new Map([\n        // Signature seems to require a \"namepath\" (and no counter-examples)\n        // Not used with namepath in Closure/TypeScript, however\n        [\n          'nameContents', isJsdoc ? 'namepath-referencing' : false,\n        ],\n\n        [\n          'typeRequired', isTypescriptOrClosure,\n        ],\n\n        // namepath\n        [\n          'typeOrNameRequired', isJsdoc,\n        ],\n      ]),\n    ],\n\n    [\n      'throws', new Map([\n        // Shows curly brackets in the signature and in the examples\n        [\n          'typeAllowed', true,\n        ],\n      ]),\n    ],\n\n    [\n      'tutorial', new Map([\n        // (a tutorial ID)\n        [\n          'nameRequired', true,\n        ],\n\n        [\n          'typeAllowed', false,\n        ],\n      ]),\n    ],\n\n    [\n      'type', new Map([\n        // Shows curly brackets in the doc signature and examples\n        // \"typeName\"\n        [\n          'typeRequired', true,\n        ],\n      ]),\n    ],\n\n    [\n      'typedef', new Map([\n        // Seems to require a \"namepath\" in the signature (with no\n        //  counter-examples)\n        [\n          'nameContents', 'namepath-defining',\n        ],\n\n        // TypeScript may allow it to be dropped if followed by @property or @member;\n        //   also shown as missing in Closure\n        // \"namepath\"\n        [\n          'nameRequired', isJsdocOrPermissive,\n        ],\n\n        // Is not `typeRequired` for TypeScript because it gives an error:\n        // JSDoc '@typedef' tag should either have a type annotation or be followed by '@property' or '@member' tags.\n\n        // Has example showing curly brackets but not in doc signature\n        [\n          'typeAllowed', true,\n        ],\n\n        // TypeScript may allow it to be dropped if followed by @property or @member\n        // \"namepath\"\n        [\n          'typeOrNameRequired', !isTypescript,\n        ],\n      ]),\n    ],\n\n    [\n      'var', new Map([\n        // Allows for \"name\"'s in signature, but indicated as optional\n        [\n          'nameContents', 'namepath-defining',\n        ],\n\n        // Has example showing curly brackets but not in doc signature\n        [\n          'typeAllowed', true,\n        ],\n      ]),\n    ],\n\n    [\n      'yields', new Map([\n        // Shows curly brackets in the signature and in the examples\n        [\n          'typeAllowed', true,\n        ],\n      ]),\n    ],\n    [\n      'yield', new Map([\n        // Shows curly brackets in the signature and in the examples\n        [\n          'typeAllowed', true,\n        ],\n      ]),\n    ],\n  ]);\n};\n\nexport default getDefaultTagStructureForMode;\n"],"mappings":";;;;;;AAAA,MAAMA,6BAA6B,GAAIC,IAAI,IAAK;EAC9C,MAAMC,OAAO,GAAGD,IAAI,KAAK,OAAO;EAChC,MAAME,SAAS,GAAGF,IAAI,KAAK,SAAS;EACpC,MAAMG,YAAY,GAAGH,IAAI,KAAK,YAAY;EAC1C,MAAMI,YAAY,GAAGJ,IAAI,KAAK,YAAY;EAE1C,MAAMK,mBAAmB,GAAGJ,OAAO,IAAIG,YAAY;EACnD,MAAME,mBAAmB,GAAGL,OAAO,IAAIE,YAAY;EACnD,MAAMI,qBAAqB,GAAGJ,YAAY,IAAID,SAAS;EACvD,MAAMM,qBAAqB,GAAGN,SAAS,IAAIE,YAAY;EACvD,MAAMK,6BAA6B,GAAGH,mBAAmB,IAAIF,YAAY;;EAEzE;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA,OAAO,IAAIM,GAAG,CAAC,CACb,CACE,OAAO,EAAE,IAAIA,GAAG,CAAC;EACf;EACA,CACE,cAAc,EAAE,sBAAsB,CACvC;EAED;EACA,CACE,oBAAoB,EAAE,IAAI,CAC3B,CACF,CAAC,CACH,EAED,CACE,KAAK,EAAE,IAAIA,GAAG,CAAC,CACb,CACE,cAAc,EAAE,mBAAmB,CACpC;EAED;EACA,CACE,cAAc,EAAE,IAAI,CACrB;EAED;EACA;EACA,CACE,aAAa,EAAE,IAAI,CACpB,CACF,CAAC,CACH,EAED,CACE,UAAU,EAAE,IAAIA,GAAG,CAAC,CAClB,CACE,cAAc,EAAE,mBAAmB,CACpC;EAED;EACA,CACE,cAAc,EAAE,IAAI,CACrB;EAED;EACA;EACA,CACE,aAAa,EAAE,IAAI,CACpB,CACF,CAAC,CACH,EAED,CACE,UAAU,EAAE,IAAIA,GAAG,CAAC;EAClB;EACA,CACE,cAAc,EAAE,sBAAsB,CACvC;EAED;EACA,CACE,aAAa,EAAE,IAAI,CACpB;EAED;EACA,CACE,oBAAoB,EAAE,IAAI,CAC3B,CACF,CAAC,CACH,EAED,CACE,SAAS,EAAE,IAAIA,GAAG,CAAC;EACjB;EACA;EACA,CACE,cAAc,EAAE,sBAAsB,CACvC;EAED;EACA,CACE,oBAAoB,EAAE,IAAI,CAC3B,CACF,CAAC,CACH,EAED,CACE,UAAU,EAAE,IAAIA,GAAG,CAAC;EAClB;EACA;EACA;EACA,CACE,cAAc,EAAE,mBAAmB,CACpC;EAED;EACA,CACE,cAAc,EAAE,IAAI,CACrB,CACF,CAAC,CACH,EAED,CACE,OAAO,EAAE,IAAIA,GAAG,CAAC;EACf;EACA,CACE,cAAc,EAAE,mBAAmB,CACpC;EAED;EACA,CACE,aAAa,EAAE,IAAI,CACpB,EAED,CACE,aAAa,EAAE,IAAI,CACpB,CACF,CAAC,CACH,EAED,CACE,OAAO,EAAE,IAAIA,GAAG,CAAC;EACf;EACA,CACE,cAAc,EAAE,mBAAmB,CACpC,EAED,CACE,aAAa,EAAE,IAAI,CACpB,CACF,CAAC,CACH,EACD,CACE,UAAU,EAAE,IAAIA,GAAG,CAAC;EAClB;EACA,CACE,cAAc,EAAE,mBAAmB,CACpC,EAED,CACE,aAAa,EAAE,IAAI,CACpB,CACF,CAAC,CACH,EACD,CACE,aAAa,EAAE,IAAIA,GAAG,CAAC;EACrB;EACA,CACE,cAAc,EAAE,mBAAmB,CACpC,EAED,CACE,aAAa,EAAE,IAAI,CACpB,CACF,CAAC,CACH,EAED,CACE,YAAY,EAAE,IAAIA,GAAG,CAAC;EACpB;EACA,CACE,cAAc,EAAE,mBAAmB,CACpC,EAED,CACE,cAAc,EAAE,KAAK,CACtB,EAED,CACE,aAAa,EAAE,KAAK,CACrB,CACF,CAAC,CACH,EAED,CACE,QAAQ,EAAE,IAAIA,GAAG,CAAC,CAChB,CACE,cAAc,EAAER,SAAS,CAC1B,CACF,CAAC,CACH,EAED,CACE,OAAO,EAAE,IAAIQ,GAAG,CAAC;EACf;EACA,CACE,cAAc,EAAE,sBAAsB,CACvC,EAED,CACE,cAAc,EAAE,IAAI,CACrB,EAED,CACE,aAAa,EAAE,KAAK,CACrB,CACF,CAAC,CACH,EAED,CACE,MAAM,EAAE,IAAIA,GAAG,CAAC;EACd;EACA,CACE,aAAa,EAAE,IAAI,CACpB,CACF,CAAC,CACH,EAED,CACE,OAAO,EAAE,IAAIA,GAAG,CAAC;EACf;EACA,CACE,cAAc,EAAE,IAAI,CACrB;EAED;EACA;EACA;EACA,CACE,cAAc,EAAE,mBAAmB,CACpC,CACF,CAAC,CACH,EAED,CACE,WAAW,EAAE,IAAIA,GAAG,CAAC;EACnB;EACA,CACE,aAAa,EAAE,IAAI,CACpB,CACF,CAAC,CACH;EAED;EACA,CACE,QAAQ,EAAE,IAAIA,GAAG,CAAC,CAChB,CACE,aAAa,EAAEF,qBAAqB,CACrC,CACF,CAAC,CACH,EAED,CACE,SAAS,EAAE,IAAIE,GAAG,CAAC,CACjB,CACE,cAAc,EAAE,mBAAmB,CACpC,EAED,CACE,cAAc,EAAET,OAAO,CACxB,EAED,CACE,aAAa,EAAEO,qBAAqB,CACrC,CACF,CAAC,CACH,EAED,CACE,SAAS,EAAE,IAAIE,GAAG,CAAC;EACjB;EACA,CACE,cAAc,EAAE,sBAAsB,CACvC;EAED;EACA,CACE,aAAa,EAAEH,qBAAqB,IAAIH,YAAY,CACrD,EAED,CACE,cAAc,EAAEH,OAAO,CACxB;EAED;EACA,CACE,oBAAoB,EAAEM,qBAAqB,IAAIH,YAAY,CAC5D,CACF,CAAC,CACH,EAED,CACE,UAAU,EAAE,IAAIM,GAAG,CAAC;EAClB;EACA;EACA;EACA,CACE,cAAc,EAAE,mBAAmB,CACpC;EAED;EACA,CACE,cAAc,EAAE,IAAI,CACrB,EAED,CACE,aAAa,EAAE,KAAK,CACrB,CACF,CAAC,CACH,EAED,CACE,OAAO,EAAE,IAAIA,GAAG,CAAC;EACf;EACA;EACA,CACE,cAAc,EAAE,sBAAsB,CACvC,EAED,CACE,cAAc,EAAE,IAAI,CACrB,EAED,CACE,aAAa,EAAE,KAAK,CACrB,CACF,CAAC,CACH,EAED,CACE,UAAU,EAAE,IAAIA,GAAG,CAAC;EAClB;EACA,CACE,cAAc,EAAE,mBAAmB,CACpC,EAED,CACE,cAAc,EAAE,KAAK,CACtB,EAED,CACE,aAAa,EAAE,KAAK,CACrB,CACF,CAAC,CACH,EACD,CAC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B,CACpC;EAED;EACA;EACA;EACA;EACA,CACE,cAAc,EAAE,IAAI,CACrB;EAED;EACA;EACA,CACE,aAAa,EAAE,IAAI,CACpB,CACF,CAAC,CACH,EAED,CACE,SAAS,EAAE,IAAIA,GAAG,CAAC;EACjB;EACA;EACA,CACE,aAAa,EAAEF,qBAAqB,CACrC,CACF,CAAC,CACH,EAED,CACE,MAAM,EAAE,IAAIE,GAAG,CAAC,CACd,CACE,cAAc,EAAE,mBAAmB,CACpC;EAED;EACA,CACE,cAAc,EAAE,IAAI,CACrB;EAED;EACA;EACA,CACE,aAAa,EAAE,IAAI,CACpB,CACF,CAAC,CACH,EAED,CACE,UAAU,EAAE,IAAIA,GAAG,CAAC,CAClB,CACE,cAAc,EAAE,mBAAmB,CACpC;EAED;EACA;EACA,CACE,cAAc,EAAE,IAAI,CACrB;EAED;EACA;EACA,CACE,aAAa,EAAE,IAAI,CACpB,CACF,CAAC,CACH,EAED,CACE,WAAW,EAAE,IAAIA,GAAG,CAAC;EACnB;EACA;EACA,CACE,aAAa,EAAEF,qBAAqB,CACrC,CACF,CAAC,CACH,EAED,CACE,QAAQ,EAAE,IAAIE,GAAG,CAAC;EAChB;EACA,CACE,aAAa,EAAEF,qBAAqB,CACrC,CACF,CAAC,CACH,EAED,CACE,UAAU,EAAE,IAAIE,GAAG,CAAC;EAClB;EACA,CACE,cAAc,EAAE,sBAAsB,CACvC,EAED,CACE,cAAc,EAAE,IAAI,CACrB,EAED,CACE,aAAa,EAAE,KAAK,CACrB,CACF,CAAC,CACH,EAED,CACE,SAAS,EAAE,IAAIA,GAAG,CAAC;EACjB;EACA,CACE,aAAa,EAAE,IAAI,CACpB,CACF,CAAC,CACH,EACD,CACE,QAAQ,EAAE,IAAIA,GAAG,CAAC;EAChB;EACA,CACE,aAAa,EAAE,IAAI,CACpB,CACF,CAAC,CACH,EAED,CACE,KAAK,EAAE,IAAIA,GAAG,CAAC;EACb;EACA;EACA,CACE,cAAc,EAAE,MAAM,CACvB,CACF,CAAC,CACH,EAED,CACE,QAAQ,EAAE,IAAIA,GAAG,CAAC;EAChB;EACA,CACE,aAAa,EAAEF,qBAAqB,CACrC,CACF,CAAC,CACH,EAED,CACE,UAAU,EAAE,IAAIE,GAAG,CAAC,CAClB,CACE,cAAc,EAAE,CAACR,SAAS,CAC3B,EACD,CACE,cAAc,EAAEA,SAAS,CAC1B,CACF,CAAC,CACH,EAED,CACE,UAAU,EAAE,IAAIQ,GAAG,CAAC,CAClB,CACE,cAAc,EAAET,OAAO,GAAG,MAAM,GAAG,sBAAsB,CAC1D;EAED;EACA;EACA;EACA,CACE,aAAa,EAAEM,qBAAqB,IAAIH,YAAY,CACrD,CACF,CAAC,CACH,EAED,CACE,MAAM,EAAE,IAAIM,GAAG,CAAC;EACd;EACA;EACA,CACE,cAAc,EAAET,OAAO,GAAG,sBAAsB,GAAG,KAAK,CACzD,EAED,CACE,cAAc,EAAEM,qBAAqB,CACtC;EAED;EACA,CACE,oBAAoB,EAAEN,OAAO,CAC9B,CACF,CAAC,CACH,EAED,CACE,QAAQ,EAAE,IAAIS,GAAG,CAAC;EAChB;EACA,CACE,aAAa,EAAE,IAAI,CACpB,CACF,CAAC,CACH,EAED,CACE,UAAU,EAAE,IAAIA,GAAG,CAAC;EAClB;EACA,CACE,cAAc,EAAE,IAAI,CACrB,EAED,CACE,aAAa,EAAE,KAAK,CACrB,CACF,CAAC,CACH,EAED,CACE,MAAM,EAAE,IAAIA,GAAG,CAAC;EACd;EACA;EACA,CACE,cAAc,EAAE,IAAI,CACrB,CACF,CAAC,CACH,EAED,CACE,SAAS,EAAE,IAAIA,GAAG,CAAC;EACjB;EACA;EACA,CACE,cAAc,EAAE,mBAAmB,CACpC;EAED;EACA;EACA;EACA,CACE,cAAc,EAAEL,mBAAmB,CACpC;EAED;EACA;;EAEA;EACA,CACE,aAAa,EAAE,IAAI,CACpB;EAED;EACA;EACA,CACE,oBAAoB,EAAE,CAACF,YAAY,CACpC,CACF,CAAC,CACH,EAED,CACE,KAAK,EAAE,IAAIO,GAAG,CAAC;EACb;EACA,CACE,cAAc,EAAE,mBAAmB,CACpC;EAED;EACA,CACE,aAAa,EAAE,IAAI,CACpB,CACF,CAAC,CACH,EAED,CACE,QAAQ,EAAE,IAAIA,GAAG,CAAC;EAChB;EACA,CACE,aAAa,EAAE,IAAI,CACpB,CACF,CAAC,CACH,EACD,CACE,OAAO,EAAE,IAAIA,GAAG,CAAC;EACf;EACA,CACE,aAAa,EAAE,IAAI,CACpB,CACF,CAAC,CACH,CACF,CAAC;AACJ,CAAC;AAAC,eAEaX,6BAA6B;AAAA;AAAA"}