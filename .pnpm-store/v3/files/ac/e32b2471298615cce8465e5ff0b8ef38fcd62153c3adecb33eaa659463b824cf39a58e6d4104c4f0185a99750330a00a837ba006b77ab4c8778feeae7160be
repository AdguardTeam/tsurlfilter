{"version":3,"file":"noBadBlocks.js","names":["commentRegexp","extraAsteriskCommentRegexp","iterateJsdoc","context","sourceCode","allComments","makeReport","ignore","preventAllMultiAsteriskBlocks","options","extraAsterisks","nonJsdocNodes","filter","comment","commentText","getText","sliceIndex","test","multiline","exec","length","tags","commentParser","slice","some","tag","includes","node","report","fix","fixer","text","replaceText","replace","checkFile","meta","docs","description","url","fixable","schema","additionalProperties","properties","items","type"],"sources":["../../src/rules/noBadBlocks.js"],"sourcesContent":["import {\n  parse as commentParser,\n} from 'comment-parser';\nimport iterateJsdoc from '../iterateJsdoc';\n\n// Neither a single nor 3+ asterisks are valid jsdoc per\n//  https://jsdoc.app/about-getting-started.html#adding-documentation-comments-to-your-code\nconst commentRegexp = /^\\/\\*(?!\\*)/u;\nconst extraAsteriskCommentRegexp = /^\\/\\*{3,}/u;\n\nexport default iterateJsdoc(({\n  context,\n  sourceCode,\n  allComments,\n  makeReport,\n}) => {\n  const [\n    {\n      ignore = [\n        'ts-check',\n        'ts-expect-error',\n        'ts-ignore',\n        'ts-nocheck',\n      ],\n      preventAllMultiAsteriskBlocks = false,\n    } = {},\n  ] = context.options;\n\n  let extraAsterisks = false;\n  const nonJsdocNodes = allComments.filter((comment) => {\n    const commentText = sourceCode.getText(comment);\n    let sliceIndex = 2;\n    if (!commentRegexp.test(commentText)) {\n      const multiline = extraAsteriskCommentRegexp.exec(commentText)?.[0];\n      if (!multiline) {\n        return false;\n      }\n\n      sliceIndex = multiline.length;\n      extraAsterisks = true;\n      if (preventAllMultiAsteriskBlocks) {\n        return true;\n      }\n    }\n\n    const [\n      {\n        tags = {},\n      } = {},\n    ] = commentParser(\n      `${commentText.slice(0, 2)}*${commentText.slice(sliceIndex)}`,\n    );\n\n    return tags.length && !tags.some(({\n      tag,\n    }) => {\n      return ignore.includes(tag);\n    });\n  });\n\n  if (!nonJsdocNodes.length) {\n    return;\n  }\n\n  for (const node of nonJsdocNodes) {\n    const report = makeReport(context, node);\n\n    // eslint-disable-next-line no-loop-func\n    const fix = (fixer) => {\n      const text = sourceCode.getText(node);\n\n      return fixer.replaceText(\n        node,\n        extraAsterisks ?\n          text.replace(extraAsteriskCommentRegexp, '/**') :\n          text.replace('/*', '/**'),\n      );\n    };\n\n    report('Expected JSDoc-like comment to begin with two asterisks.', fix);\n  }\n}, {\n  checkFile: true,\n  meta: {\n    docs: {\n      description: 'This rule checks for multi-line-style comments which fail to meet the criteria of a jsdoc block.',\n      url: 'https://github.com/gajus/eslint-plugin-jsdoc#eslint-plugin-jsdoc-rules-no-bad-blocks',\n    },\n    fixable: 'code',\n    schema: [\n      {\n        additionalProperties: false,\n        properties: {\n          ignore: {\n            items: {\n              type: 'string',\n            },\n            type: 'array',\n          },\n          preventAllMultiAsteriskBlocks: {\n            type: 'boolean',\n          },\n        },\n        type: 'object',\n      },\n    ],\n    type: 'layout',\n  },\n});\n"],"mappings":"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"}