{"version":3,"file":"checkAlignment.js","names":["trimStart","string","replace","iterateJsdoc","sourceCode","jsdocNode","report","indent","indentLevel","length","sourceLines","getText","split","slice","map","line","filter","fix","fixer","replacement","index","ignored","join","replaceText","some","lineNum","iterateAllJsdocs","meta","docs","description","url","fixable","type"],"sources":["../../src/rules/checkAlignment.js"],"sourcesContent":["import iterateJsdoc from '../iterateJsdoc';\n\nconst trimStart = (string) => {\n  return string.replace(/^\\s+/u, '');\n};\n\nexport default iterateJsdoc(({\n  sourceCode,\n  jsdocNode,\n  report,\n  indent,\n}) => {\n  // `indent` is whitespace from line 1 (`/**`), so slice and account for \"/\".\n  const indentLevel = indent.length + 1;\n  const sourceLines = sourceCode.getText(jsdocNode).split('\\n')\n    .slice(1)\n    .map((line) => {\n      return line.split('*')[0];\n    })\n    .filter((line) => {\n      return !trimStart(line).length;\n    });\n\n  const fix = (fixer) => {\n    const replacement = sourceCode.getText(jsdocNode).split('\\n')\n      .map((line, index) => {\n        // Ignore the first line and all lines not starting with `*`\n        const ignored = !index || trimStart(line.split('*')[0]).length;\n\n        return ignored ? line : `${indent} ${trimStart(line)}`;\n      })\n      .join('\\n');\n\n    return fixer.replaceText(jsdocNode, replacement);\n  };\n\n  sourceLines.some((line, lineNum) => {\n    if (line.length !== indentLevel) {\n      report('Expected JSDoc block to be aligned.', fix, {\n        line: lineNum + 1,\n      });\n\n      return true;\n    }\n\n    return false;\n  });\n}, {\n  iterateAllJsdocs: true,\n  meta: {\n    docs: {\n      description: 'Reports invalid alignment of JSDoc block asterisks.',\n      url: 'https://github.com/gajus/eslint-plugin-jsdoc#eslint-plugin-jsdoc-rules-check-alignment',\n    },\n    fixable: 'code',\n    type: 'layout',\n  },\n});\n"],"mappings":";;;;;;;AAAA;;;;AAEA,MAAMA,SAAS,GAAIC,MAAD,IAAY;EAC5B,OAAOA,MAAM,CAACC,OAAP,CAAe,OAAf,EAAwB,EAAxB,CAAP;AACD,CAFD;;eAIe,IAAAC,qBAAA,EAAa,CAAC;EAC3BC,UAD2B;EAE3BC,SAF2B;EAG3BC,MAH2B;EAI3BC;AAJ2B,CAAD,KAKtB;EACJ;EACA,MAAMC,WAAW,GAAGD,MAAM,CAACE,MAAP,GAAgB,CAApC;EACA,MAAMC,WAAW,GAAGN,UAAU,CAACO,OAAX,CAAmBN,SAAnB,EAA8BO,KAA9B,CAAoC,IAApC,EACjBC,KADiB,CACX,CADW,EAEjBC,GAFiB,CAEZC,IAAD,IAAU;IACb,OAAOA,IAAI,CAACH,KAAL,CAAW,GAAX,EAAgB,CAAhB,CAAP;EACD,CAJiB,EAKjBI,MALiB,CAKTD,IAAD,IAAU;IAChB,OAAO,CAACf,SAAS,CAACe,IAAD,CAAT,CAAgBN,MAAxB;EACD,CAPiB,CAApB;;EASA,MAAMQ,GAAG,GAAIC,KAAD,IAAW;IACrB,MAAMC,WAAW,GAAGf,UAAU,CAACO,OAAX,CAAmBN,SAAnB,EAA8BO,KAA9B,CAAoC,IAApC,EACjBE,GADiB,CACb,CAACC,IAAD,EAAOK,KAAP,KAAiB;MACpB;MACA,MAAMC,OAAO,GAAG,CAACD,KAAD,IAAUpB,SAAS,CAACe,IAAI,CAACH,KAAL,CAAW,GAAX,EAAgB,CAAhB,CAAD,CAAT,CAA8BH,MAAxD;MAEA,OAAOY,OAAO,GAAGN,IAAH,GAAW,GAAER,MAAO,IAAGP,SAAS,CAACe,IAAD,CAAO,EAArD;IACD,CANiB,EAOjBO,IAPiB,CAOZ,IAPY,CAApB;IASA,OAAOJ,KAAK,CAACK,WAAN,CAAkBlB,SAAlB,EAA6Bc,WAA7B,CAAP;EACD,CAXD;;EAaAT,WAAW,CAACc,IAAZ,CAAiB,CAACT,IAAD,EAAOU,OAAP,KAAmB;IAClC,IAAIV,IAAI,CAACN,MAAL,KAAgBD,WAApB,EAAiC;MAC/BF,MAAM,CAAC,qCAAD,EAAwCW,GAAxC,EAA6C;QACjDF,IAAI,EAAEU,OAAO,GAAG;MADiC,CAA7C,CAAN;MAIA,OAAO,IAAP;IACD;;IAED,OAAO,KAAP;EACD,CAVD;AAWD,CAzCc,EAyCZ;EACDC,gBAAgB,EAAE,IADjB;EAEDC,IAAI,EAAE;IACJC,IAAI,EAAE;MACJC,WAAW,EAAE,qDADT;MAEJC,GAAG,EAAE;IAFD,CADF;IAKJC,OAAO,EAAE,MALL;IAMJC,IAAI,EAAE;EANF;AAFL,CAzCY,C"}