import { IAdvancedModifier } from './advanced-modifier';
/**
 * Headers filtering modifier class.
 * Rules with $removeheader modifier are intended to remove headers from HTTP requests and responses.
 */
export declare class RemoveHeaderModifier implements IAdvancedModifier {
    /**
     * List of forbidden headers
     */
    private static FORBIDDEN_HEADERS;
    /**
     * Request prefix
     */
    private static REQUEST_PREFIX;
    /**
     * Prefixed headers are applied to request headers
     */
    private readonly isRequestModifier;
    /**
     * Effective header name to be removed
     */
    private readonly applicableHeaderName;
    /**
     * Value
     */
    private readonly value;
    /**
     * Is rule valid or not.
     */
    private readonly valid;
    /**
     * Constructor
     *
     * @param value
     * @param isAllowlist
     */
    constructor(value: string, isAllowlist: boolean);
    /**
     * Modifier value
     */
    getValue(): string;
    /**
     * Modifier validity
     */
    get isValid(): boolean;
    /**
     * Returns effective header name to be removed
     *
     * @param isRequestHeaders
     */
    getApplicableHeaderName(isRequestHeaders: boolean): string | null;
    /**
     * Some headers are forbidden to remove
     *
     * @param headerName
     */
    private static isAllowedHeader;
}
