{"version":3,"file":"newlineAfterDescription.js","names":["iterateJsdoc","jsdoc","report","context","jsdocNode","sourceCode","indent","utils","always","description","trim","tags","length","options","lastDescriptionLine","getDescription","descriptionEndsWithANewline","test","sourceLines","getText","split","fixer","injectedLine","endsWith","splice","replaceText","join","line","iterateAllJsdocs","meta","docs","url","fixable","schema","enum","type"],"sources":["../../src/rules/newlineAfterDescription.js"],"sourcesContent":["import iterateJsdoc from '../iterateJsdoc';\n\nexport default iterateJsdoc(({\n  jsdoc,\n  report,\n  context,\n  jsdocNode,\n  sourceCode,\n  indent,\n  utils,\n}) => {\n  let always;\n\n  if (!jsdoc.description.trim() || !jsdoc.tags.length) {\n    return;\n  }\n\n  if (0 in context.options) {\n    always = context.options[0] === 'always';\n  } else {\n    always = true;\n  }\n\n  const {\n    description,\n    lastDescriptionLine,\n  } = utils.getDescription();\n  const descriptionEndsWithANewline = (/\\n\\r?$/u).test(description);\n\n  if (always) {\n    if (!descriptionEndsWithANewline) {\n      const sourceLines = sourceCode.getText(jsdocNode).split('\\n');\n\n      report('There must be a newline after the description of the JSDoc block.', (fixer) => {\n        // Add the new line\n        const injectedLine = `${indent} *` +\n          (sourceLines[lastDescriptionLine].endsWith('\\r') ? '\\r' : '');\n        sourceLines.splice(lastDescriptionLine + 1, 0, injectedLine);\n\n        return fixer.replaceText(jsdocNode, sourceLines.join('\\n'));\n      }, {\n        line: lastDescriptionLine,\n      });\n    }\n  } else if (descriptionEndsWithANewline) {\n    const sourceLines = sourceCode.getText(jsdocNode).split('\\n');\n    report('There must be no newline after the description of the JSDoc block.', (fixer) => {\n      // Remove the extra line\n      sourceLines.splice(lastDescriptionLine, 1);\n\n      return fixer.replaceText(jsdocNode, sourceLines.join('\\n'));\n    }, {\n      line: lastDescriptionLine,\n    });\n  }\n}, {\n  iterateAllJsdocs: true,\n  meta: {\n    docs: {\n      description: 'Enforces a consistent padding of the block description.',\n      url: 'https://github.com/gajus/eslint-plugin-jsdoc#eslint-plugin-jsdoc-rules-newline-after-description',\n    },\n    fixable: 'whitespace',\n    schema: [\n      {\n        enum: [\n          'always', 'never',\n        ],\n        type: 'string',\n      },\n    ],\n    type: 'layout',\n  },\n});\n"],"mappings":";;;;;;;AAAA;;;;eAEe,IAAAA,qBAAA,EAAa,CAAC;EAC3BC,KAD2B;EAE3BC,MAF2B;EAG3BC,OAH2B;EAI3BC,SAJ2B;EAK3BC,UAL2B;EAM3BC,MAN2B;EAO3BC;AAP2B,CAAD,KAQtB;EACJ,IAAIC,MAAJ;;EAEA,IAAI,CAACP,KAAK,CAACQ,WAAN,CAAkBC,IAAlB,EAAD,IAA6B,CAACT,KAAK,CAACU,IAAN,CAAWC,MAA7C,EAAqD;IACnD;EACD;;EAED,IAAI,KAAKT,OAAO,CAACU,OAAjB,EAA0B;IACxBL,MAAM,GAAGL,OAAO,CAACU,OAAR,CAAgB,CAAhB,MAAuB,QAAhC;EACD,CAFD,MAEO;IACLL,MAAM,GAAG,IAAT;EACD;;EAED,MAAM;IACJC,WADI;IAEJK;EAFI,IAGFP,KAAK,CAACQ,cAAN,EAHJ;EAIA,MAAMC,2BAA2B,GAAI,SAAD,CAAYC,IAAZ,CAAiBR,WAAjB,CAApC;;EAEA,IAAID,MAAJ,EAAY;IACV,IAAI,CAACQ,2BAAL,EAAkC;MAChC,MAAME,WAAW,GAAGb,UAAU,CAACc,OAAX,CAAmBf,SAAnB,EAA8BgB,KAA9B,CAAoC,IAApC,CAApB;MAEAlB,MAAM,CAAC,mEAAD,EAAuEmB,KAAD,IAAW;QACrF;QACA,MAAMC,YAAY,GAAI,GAAEhB,MAAO,IAAV,IAClBY,WAAW,CAACJ,mBAAD,CAAX,CAAiCS,QAAjC,CAA0C,IAA1C,IAAkD,IAAlD,GAAyD,EADvC,CAArB;QAEAL,WAAW,CAACM,MAAZ,CAAmBV,mBAAmB,GAAG,CAAzC,EAA4C,CAA5C,EAA+CQ,YAA/C;QAEA,OAAOD,KAAK,CAACI,WAAN,CAAkBrB,SAAlB,EAA6Bc,WAAW,CAACQ,IAAZ,CAAiB,IAAjB,CAA7B,CAAP;MACD,CAPK,EAOH;QACDC,IAAI,EAAEb;MADL,CAPG,CAAN;IAUD;EACF,CAfD,MAeO,IAAIE,2BAAJ,EAAiC;IACtC,MAAME,WAAW,GAAGb,UAAU,CAACc,OAAX,CAAmBf,SAAnB,EAA8BgB,KAA9B,CAAoC,IAApC,CAApB;IACAlB,MAAM,CAAC,oEAAD,EAAwEmB,KAAD,IAAW;MACtF;MACAH,WAAW,CAACM,MAAZ,CAAmBV,mBAAnB,EAAwC,CAAxC;MAEA,OAAOO,KAAK,CAACI,WAAN,CAAkBrB,SAAlB,EAA6Bc,WAAW,CAACQ,IAAZ,CAAiB,IAAjB,CAA7B,CAAP;IACD,CALK,EAKH;MACDC,IAAI,EAAEb;IADL,CALG,CAAN;EAQD;AACF,CArDc,EAqDZ;EACDc,gBAAgB,EAAE,IADjB;EAEDC,IAAI,EAAE;IACJC,IAAI,EAAE;MACJrB,WAAW,EAAE,yDADT;MAEJsB,GAAG,EAAE;IAFD,CADF;IAKJC,OAAO,EAAE,YALL;IAMJC,MAAM,EAAE,CACN;MACEC,IAAI,EAAE,CACJ,QADI,EACM,OADN,CADR;MAIEC,IAAI,EAAE;IAJR,CADM,CANJ;IAcJA,IAAI,EAAE;EAdF;AAFL,CArDY,C"}