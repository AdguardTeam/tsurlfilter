{"version":3,"file":"multilineBlocks.js","names":["iterateJsdoc","context","jsdoc","utils","allowMultipleTags","noFinalLineText","noZeroLineText","noSingleLineBlocks","singleLineTags","noMultilineBlocks","minimumLengthForMultiline","Number","POSITIVE_INFINITY","multilineTags","options","source","tokens","description","tag","sourceLength","length","isInvalidSingleLine","tagName","includes","slice","fixer","makeMultiline","reportJSDoc","lineChecks","line","emptyTokens","delimiter","start","addLine","finalLine","finalLineTokens","trim","trimEnd","prop","end","tags","hasATag","filterTags","tg","number","reduce","obj","desc","type","typ","name","nme","lineEnd","postType","postName","postTag","nameOrDescription","seedTokens","postDelimiter","iterateAllJsdocs","meta","docs","url","fixable","schema","additionalProperies","properties","anyOf","enum","items"],"sources":["../../src/rules/multilineBlocks.js"],"sourcesContent":["import iterateJsdoc from '../iterateJsdoc';\n\nexport default iterateJsdoc(({\n  context,\n  jsdoc,\n  utils,\n}) => {\n  const {\n    allowMultipleTags = true,\n    noFinalLineText = true,\n    noZeroLineText = true,\n    noSingleLineBlocks = false,\n    singleLineTags = [\n      'lends', 'type',\n    ],\n    noMultilineBlocks = false,\n    minimumLengthForMultiline = Number.POSITIVE_INFINITY,\n    multilineTags = [\n      '*',\n    ],\n  } = context.options[0] || {};\n\n  const {\n    source: [\n      {\n        tokens,\n      },\n    ],\n  } = jsdoc;\n  const {\n    description,\n    tag,\n  } = tokens;\n  const sourceLength = jsdoc.source.length;\n\n  const isInvalidSingleLine = (tagName) => {\n    return noSingleLineBlocks &&\n      (!tagName ||\n      !singleLineTags.includes(tagName) && !singleLineTags.includes('*'));\n  };\n\n  if (sourceLength === 1) {\n    if (!isInvalidSingleLine(tag.slice(1))) {\n      return;\n    }\n\n    const fixer = () => {\n      utils.makeMultiline();\n    };\n\n    utils.reportJSDoc(\n      'Single line blocks are not permitted by your configuration.',\n      null,\n      fixer,\n      true,\n    );\n\n    return;\n  }\n\n  const lineChecks = () => {\n    if (\n      noZeroLineText &&\n      (tag || description)\n    ) {\n      const fixer = () => {\n        const line = {\n          ...tokens,\n        };\n        utils.emptyTokens(tokens);\n        const {\n          tokens: {\n            delimiter,\n            start,\n          },\n        } = jsdoc.source[1];\n        utils.addLine(1, {\n          ...line,\n          delimiter,\n          start,\n        });\n      };\n\n      utils.reportJSDoc(\n        'Should have no text on the \"0th\" line (after the `/**`).',\n        null,\n        fixer,\n      );\n\n      return;\n    }\n\n    const finalLine = jsdoc.source[jsdoc.source.length - 1];\n    const finalLineTokens = finalLine.tokens;\n    if (\n      noFinalLineText &&\n      finalLineTokens.description.trim()\n    ) {\n      const fixer = () => {\n        const line = {\n          ...finalLineTokens,\n        };\n        line.description = line.description.trimEnd();\n\n        const {\n          delimiter,\n        } = line;\n\n        for (const prop of [\n          'delimiter',\n          'postDelimiter',\n          'tag',\n          'type',\n          'lineEnd',\n          'postType',\n          'postTag',\n          'name',\n          'postName',\n          'description',\n        ]) {\n          finalLineTokens[prop] = '';\n        }\n\n        utils.addLine(jsdoc.source.length - 1, {\n          ...line,\n          delimiter,\n          end: '',\n        });\n      };\n\n      utils.reportJSDoc(\n        'Should have no text on the final line (before the `*/`).',\n        null,\n        fixer,\n      );\n    }\n  };\n\n  if (noMultilineBlocks) {\n    if (\n      jsdoc.tags.length &&\n      (multilineTags.includes('*') || utils.hasATag(multilineTags))\n    ) {\n      lineChecks();\n\n      return;\n    }\n\n    if (jsdoc.description.length >= minimumLengthForMultiline) {\n      lineChecks();\n\n      return;\n    }\n\n    if (\n      noSingleLineBlocks &&\n      (!jsdoc.tags.length ||\n      !utils.filterTags(({\n        tag: tg,\n      }) => {\n        return !isInvalidSingleLine(tg);\n      }).length)\n    ) {\n      utils.reportJSDoc(\n        'Multiline jsdoc blocks are prohibited by ' +\n          'your configuration but fixing would result in a single ' +\n          'line block which you have prohibited with `noSingleLineBlocks`.',\n      );\n\n      return;\n    }\n\n    if (jsdoc.tags.length > 1) {\n      if (!allowMultipleTags) {\n        utils.reportJSDoc(\n          'Multiline jsdoc blocks are prohibited by ' +\n            'your configuration but the block has multiple tags.',\n        );\n\n        return;\n      }\n    } else if (jsdoc.tags.length === 1 && jsdoc.description.trim()) {\n      if (!allowMultipleTags) {\n        utils.reportJSDoc(\n          'Multiline jsdoc blocks are prohibited by ' +\n            'your configuration but the block has a description with a tag.',\n        );\n\n        return;\n      }\n    } else {\n      const fixer = () => {\n        jsdoc.source = [\n          {\n            number: 1,\n            source: '',\n            tokens: jsdoc.source.reduce((obj, {\n              tokens: {\n                description: desc,\n                tag: tg,\n                type: typ,\n                name: nme,\n                lineEnd,\n                postType,\n                postName,\n                postTag,\n              },\n            }) => {\n              if (typ) {\n                obj.type = typ;\n              }\n\n              if (tg && typ && nme) {\n                obj.postType = postType;\n              }\n\n              if (nme) {\n                obj.name += nme;\n              }\n\n              if (nme && desc) {\n                obj.postName = postName;\n              }\n\n              obj.description += desc;\n\n              const nameOrDescription = obj.description || obj.name;\n              if (\n                nameOrDescription && nameOrDescription.slice(-1) !== ' '\n              ) {\n                obj.description += ' ';\n              }\n\n              obj.lineEnd = lineEnd;\n\n              // Already filtered for multiple tags\n              obj.tag += tg;\n              if (tg) {\n                obj.postTag = postTag || ' ';\n              }\n\n              return obj;\n            }, utils.seedTokens({\n              delimiter: '/**',\n              end: '*/',\n              postDelimiter: ' ',\n            })),\n          },\n        ];\n      };\n\n      utils.reportJSDoc(\n        'Multiline jsdoc blocks are prohibited by ' +\n          'your configuration.',\n        null,\n        fixer,\n      );\n\n      return;\n    }\n  }\n\n  lineChecks();\n}, {\n  iterateAllJsdocs: true,\n  meta: {\n    docs: {\n      description: 'Controls how and whether jsdoc blocks can be expressed as single or multiple line blocks.',\n      url: 'https://github.com/gajus/eslint-plugin-jsdoc#eslint-plugin-jsdoc-rules-multiline-blocks',\n    },\n    fixable: 'code',\n    schema: [\n      {\n        additionalProperies: false,\n        properties: {\n          allowMultipleTags: {\n            type: 'boolean',\n          },\n          minimumLengthForMultiline: {\n            type: 'integer',\n          },\n          multilineTags: {\n            anyOf: [\n              {\n                enum: [\n                  '*',\n                ],\n                type: 'string',\n              }, {\n                items: {\n                  type: 'string',\n                },\n                type: 'array',\n              },\n            ],\n          },\n          noFinalLineText: {\n            type: 'boolean',\n          },\n          noMultilineBlocks: {\n            type: 'boolean',\n          },\n          noSingleLineBlocks: {\n            type: 'boolean',\n          },\n          noZeroLineText: {\n            type: 'boolean',\n          },\n          singleLineTags: {\n            items: {\n              type: 'string',\n            },\n            type: 'array',\n          },\n        },\n        type: 'object',\n      },\n    ],\n    type: 'suggestion',\n  },\n});\n"],"mappings":"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"}