{"version":3,"file":"checkExamples.js","names":["zeroBasedLineIndexAdjust","likelyNestedJSDocIndentSpace","preTagSpaceLength","firstLinePrefixLength","hasCaptionRegex","escapeStringRegexp","str","replace","countChars","ch","match","RegExp","length","defaultMdRules","defaultExpressionRules","quotes","semi","strict","getLinesCols","text","matchLines","colDelta","slice","lastIndexOf","iterateJsdoc","report","utils","context","globalState","semver","gte","ESLint","version","column","line","has","set","Map","matchingFileNameMap","get","options","exampleCodeRegex","rejectExampleCodeRegex","checkDefaults","checkParams","checkProperties","noDefaultExampleRules","checkEslintrc","matchingFileName","matchingFileNameDefaults","matchingFileNameParams","matchingFileNameProperties","paddedIndent","baseConfig","configFile","allowInlineConfig","reportUnusedDisableDirectives","captionRequired","rulePaths","mdRules","undefined","expressionRules","getRegexFromString","checkSource","filename","defaultFileName","rules","lines","cols","skipInit","source","targetTagName","sources","tag","push","nonJSPrefacingCols","nonJSPrefacingLines","string","checkRules","cliConfig","useEslintrc","cliConfigStr","JSON","stringify","src","fileNameMapKey","file","cliFile","cli","CLIEngine","config","getConfigForFile","results","messages","executeOnText","number","codeStartLine","codeStartCol","message","severity","ruleId","startLine","startCol","targetSource","getFilenameInfo","ext","jsFileName","getFilename","includes","filenameInfo","forEachPreferredTag","description","trim","getTagDescription","default","tagName","getPreferredTagName","hasTag","matchingFilenameInfo","test","startingIndex","lastStringCount","exampleCode","lastIndex","exec","index","n0","n1","preMatch","preMatchLines","nonJSPreface","nonJSPrefaceLineCount","idx","indexOf","charsInLastLine","global","iterateAllJsdocs","meta","docs","url","schema","additionalProperties","properties","type"],"sources":["../../src/rules/checkExamples.js"],"sourcesContent":["// Todo: When replace `CLIEngine` with `ESLint` when feature set complete per https://github.com/eslint/eslint/issues/14745\n// https://github.com/eslint/eslint/blob/master/docs/user-guide/migrating-to-7.0.0.md#-the-cliengine-class-has-been-deprecated\nimport {\n  CLIEngine,\n  ESLint,\n} from 'eslint';\nimport semver from 'semver';\nimport iterateJsdoc from '../iterateJsdoc';\n\nconst zeroBasedLineIndexAdjust = -1;\nconst likelyNestedJSDocIndentSpace = 1;\nconst preTagSpaceLength = 1;\n\n// If a space is present, we should ignore it\nconst firstLinePrefixLength = preTagSpaceLength;\n\nconst hasCaptionRegex = /^\\s*<caption>([\\s\\S]*?)<\\/caption>/u;\n\nconst escapeStringRegexp = (str) => {\n  return str.replace(/[.*+?^${}()|[\\]\\\\]/gu, '\\\\$&');\n};\n\nconst countChars = (str, ch) => {\n  return (str.match(new RegExp(escapeStringRegexp(ch), 'gu')) || []).length;\n};\n\nconst defaultMdRules = {\n  // \"always\" newline rule at end unlikely in sample code\n  'eol-last': 0,\n\n  // Wouldn't generally expect example paths to resolve relative to JS file\n  'import/no-unresolved': 0,\n\n  // Snippets likely too short to always include import/export info\n  'import/unambiguous': 0,\n\n  'jsdoc/require-file-overview': 0,\n\n  // The end of a multiline comment would end the comment the example is in.\n  'jsdoc/require-jsdoc': 0,\n\n  // Unlikely to have inadvertent debugging within examples\n  'no-console': 0,\n\n  // Often wish to start `@example` code after newline; also may use\n  //   empty lines for spacing\n  'no-multiple-empty-lines': 0,\n\n  // Many variables in examples will be `undefined`\n  'no-undef': 0,\n\n  // Common to define variables for clarity without always using them\n  'no-unused-vars': 0,\n\n  // See import/no-unresolved\n  'node/no-missing-import': 0,\n  'node/no-missing-require': 0,\n\n  // Can generally look nicer to pad a little even if code imposes more stringency\n  'padded-blocks': 0,\n};\n\nconst defaultExpressionRules = {\n  ...defaultMdRules,\n  'chai-friendly/no-unused-expressions': 'off',\n  'no-empty-function': 'off',\n  'no-new': 'off',\n  'no-unused-expressions': 'off',\n  quotes: [\n    'error', 'double',\n  ],\n  semi: [\n    'error', 'never',\n  ],\n  strict: 'off',\n};\n\nconst getLinesCols = (text) => {\n  const matchLines = countChars(text, '\\n');\n\n  const colDelta = matchLines ?\n    text.slice(text.lastIndexOf('\\n') + 1).length :\n    text.length;\n\n  return [\n    matchLines, colDelta,\n  ];\n};\n\nexport default iterateJsdoc(({\n  report,\n  utils,\n  context,\n  globalState,\n}) => {\n  if (semver.gte(ESLint.version, '8.0.0')) {\n    report(\n      'This rule cannot yet be supported for ESLint 8; you ' +\n        'should either downgrade to ESLint 7 or disable this rule. The ' +\n        'possibility for ESLint 8 support is being tracked at https://github.com/eslint/eslint/issues/14745',\n      {\n        column: 1,\n        line: 1,\n      },\n    );\n\n    return;\n  }\n\n  if (!globalState.has('checkExamples-matchingFileName')) {\n    globalState.set('checkExamples-matchingFileName', new Map());\n  }\n\n  const matchingFileNameMap = globalState.get('checkExamples-matchingFileName');\n\n  const options = context.options[0] || {};\n  let {\n    exampleCodeRegex = null,\n    rejectExampleCodeRegex = null,\n  } = options;\n  const {\n    checkDefaults = false,\n    checkParams = false,\n    checkProperties = false,\n    noDefaultExampleRules = false,\n    checkEslintrc = true,\n    matchingFileName = null,\n    matchingFileNameDefaults = null,\n    matchingFileNameParams = null,\n    matchingFileNameProperties = null,\n    paddedIndent = 0,\n    baseConfig = {},\n    configFile,\n    allowInlineConfig = true,\n    reportUnusedDisableDirectives = true,\n    captionRequired = false,\n  } = options;\n\n  // Make this configurable?\n  const rulePaths = [];\n\n  const mdRules = noDefaultExampleRules ? undefined : defaultMdRules;\n\n  const expressionRules = noDefaultExampleRules ? undefined : defaultExpressionRules;\n\n  if (exampleCodeRegex) {\n    exampleCodeRegex = utils.getRegexFromString(exampleCodeRegex);\n  }\n\n  if (rejectExampleCodeRegex) {\n    rejectExampleCodeRegex = utils.getRegexFromString(rejectExampleCodeRegex);\n  }\n\n  const checkSource = ({\n    filename,\n    defaultFileName,\n    rules = expressionRules,\n    lines = 0,\n    cols = 0,\n    skipInit,\n    source,\n    targetTagName,\n    sources = [],\n    tag = {\n      line: 0,\n    },\n  }) => {\n    if (!skipInit) {\n      sources.push({\n        nonJSPrefacingCols: cols,\n        nonJSPrefacingLines: lines,\n        string: source,\n      });\n    }\n\n    // Todo: Make fixable\n    const checkRules = function ({\n      nonJSPrefacingCols,\n      nonJSPrefacingLines,\n      string,\n    }) {\n      const cliConfig = {\n        allowInlineConfig,\n        baseConfig,\n        configFile,\n        reportUnusedDisableDirectives,\n        rulePaths,\n        rules,\n        useEslintrc: checkEslintrc,\n      };\n      const cliConfigStr = JSON.stringify(cliConfig);\n\n      const src = paddedIndent ?\n        string.replace(new RegExp(`(^|\\n) {${paddedIndent}}(?!$)`, 'gu'), '\\n') :\n        string;\n\n      // Programmatic ESLint API: https://eslint.org/docs/developer-guide/nodejs-api\n      const fileNameMapKey = filename ?\n        'a' + cliConfigStr + filename :\n        'b' + cliConfigStr + defaultFileName;\n      const file = filename || defaultFileName;\n      let cliFile;\n      if (matchingFileNameMap.has(fileNameMapKey)) {\n        cliFile = matchingFileNameMap.get(fileNameMapKey);\n      } else {\n        const cli = new CLIEngine(cliConfig);\n        let config;\n        if (filename || checkEslintrc) {\n          config = cli.getConfigForFile(file);\n        }\n\n        // We need a new instance to ensure that the rules that may only\n        //  be available to `file` (if it has its own `.eslintrc`),\n        //  will be defined.\n        cliFile = new CLIEngine({\n          allowInlineConfig,\n          baseConfig: {\n            ...baseConfig,\n            ...config,\n          },\n          configFile,\n          reportUnusedDisableDirectives,\n          rulePaths,\n          rules,\n          useEslintrc: false,\n        });\n        matchingFileNameMap.set(fileNameMapKey, cliFile);\n      }\n\n      const {\n        results: [\n          {\n            messages,\n          },\n        ],\n      } = cliFile.executeOnText(src);\n\n      if (!('line' in tag)) {\n        tag.line = tag.source[0].number;\n      }\n\n      // NOTE: `tag.line` can be 0 if of form `/** @tag ... */`\n      const codeStartLine = tag.line + nonJSPrefacingLines;\n      const codeStartCol = likelyNestedJSDocIndentSpace;\n\n      for (const {\n        message,\n        line,\n        column,\n        severity,\n        ruleId,\n      } of messages) {\n        const startLine = codeStartLine + line + zeroBasedLineIndexAdjust;\n        const startCol = codeStartCol + (\n\n          // This might not work for line 0, but line 0 is unlikely for examples\n          line <= 1 ? nonJSPrefacingCols + firstLinePrefixLength : preTagSpaceLength\n        ) + column;\n\n        report(\n          '@' + targetTagName + ' ' + (severity === 2 ? 'error' : 'warning') +\n            (ruleId ? ' (' + ruleId + ')' : '') + ': ' +\n            message,\n          null,\n          {\n            column: startCol,\n            line: startLine,\n          },\n        );\n      }\n    };\n\n    for (const targetSource of sources) {\n      checkRules(targetSource);\n    }\n  };\n\n  /**\n   *\n   * @param {string} filename\n   * @param {string} [ext] Since `eslint-plugin-markdown` v2, and\n   *   ESLint 7, this is the default which other JS-fenced rules will used.\n   *   Formerly \"md\" was the default.\n   * @returns {{defaultFileName: string, fileName: string}}\n   */\n  const getFilenameInfo = (filename, ext = 'md/*.js') => {\n    let defaultFileName;\n    if (!filename) {\n      const jsFileName = context.getFilename();\n      if (typeof jsFileName === 'string' && jsFileName.includes('.')) {\n        defaultFileName = jsFileName.replace(/\\..*?$/u, `.${ext}`);\n      } else {\n        defaultFileName = `dummy.${ext}`;\n      }\n    }\n\n    return {\n      defaultFileName,\n      filename,\n    };\n  };\n\n  if (checkDefaults) {\n    const filenameInfo = getFilenameInfo(matchingFileNameDefaults, 'jsdoc-defaults');\n    utils.forEachPreferredTag('default', (tag, targetTagName) => {\n      if (!tag.description.trim()) {\n        return;\n      }\n\n      checkSource({\n        source: `(${utils.getTagDescription(tag)})`,\n        targetTagName,\n        ...filenameInfo,\n      });\n    });\n  }\n\n  if (checkParams) {\n    const filenameInfo = getFilenameInfo(matchingFileNameParams, 'jsdoc-params');\n    utils.forEachPreferredTag('param', (tag, targetTagName) => {\n      if (!tag.default || !tag.default.trim()) {\n        return;\n      }\n\n      checkSource({\n        source: `(${tag.default})`,\n        targetTagName,\n        ...filenameInfo,\n      });\n    });\n  }\n\n  if (checkProperties) {\n    const filenameInfo = getFilenameInfo(matchingFileNameProperties, 'jsdoc-properties');\n    utils.forEachPreferredTag('property', (tag, targetTagName) => {\n      if (!tag.default || !tag.default.trim()) {\n        return;\n      }\n\n      checkSource({\n        source: `(${tag.default})`,\n        targetTagName,\n        ...filenameInfo,\n      });\n    });\n  }\n\n  const tagName = utils.getPreferredTagName({\n    tagName: 'example',\n  });\n  if (!utils.hasTag(tagName)) {\n    return;\n  }\n\n  const matchingFilenameInfo = getFilenameInfo(matchingFileName);\n\n  utils.forEachPreferredTag('example', (tag, targetTagName) => {\n    let source = utils.getTagDescription(tag);\n    const match = source.match(hasCaptionRegex);\n\n    if (captionRequired && (!match || !match[1].trim())) {\n      report('Caption is expected for examples.', null, tag);\n    }\n\n    source = source.replace(hasCaptionRegex, '');\n    const [\n      lines,\n      cols,\n    ] = match ? getLinesCols(match[0]) : [\n      0, 0,\n    ];\n\n    if (exampleCodeRegex && !exampleCodeRegex.test(source) ||\n      rejectExampleCodeRegex && rejectExampleCodeRegex.test(source)\n    ) {\n      return;\n    }\n\n    const sources = [];\n    let skipInit = false;\n    if (exampleCodeRegex) {\n      let nonJSPrefacingCols = 0;\n      let nonJSPrefacingLines = 0;\n\n      let startingIndex = 0;\n      let lastStringCount = 0;\n\n      let exampleCode;\n      exampleCodeRegex.lastIndex = 0;\n      while ((exampleCode = exampleCodeRegex.exec(source)) !== null) {\n        const {\n          index,\n          '0': n0,\n          '1': n1,\n        } = exampleCode;\n\n        // Count anything preceding user regex match (can affect line numbering)\n        const preMatch = source.slice(startingIndex, index);\n\n        const [\n          preMatchLines,\n          colDelta,\n        ] = getLinesCols(preMatch);\n\n        let nonJSPreface;\n        let nonJSPrefaceLineCount;\n        if (n1) {\n          const idx = n0.indexOf(n1);\n          nonJSPreface = n0.slice(0, idx);\n          nonJSPrefaceLineCount = countChars(nonJSPreface, '\\n');\n        } else {\n          nonJSPreface = '';\n          nonJSPrefaceLineCount = 0;\n        }\n\n        nonJSPrefacingLines += lastStringCount + preMatchLines + nonJSPrefaceLineCount;\n\n        // Ignore `preMatch` delta if newlines here\n        if (nonJSPrefaceLineCount) {\n          const charsInLastLine = nonJSPreface.slice(nonJSPreface.lastIndexOf('\\n') + 1).length;\n\n          nonJSPrefacingCols += charsInLastLine;\n        } else {\n          nonJSPrefacingCols += colDelta + nonJSPreface.length;\n        }\n\n        const string = n1 || n0;\n        sources.push({\n          nonJSPrefacingCols,\n          nonJSPrefacingLines,\n          string,\n        });\n        startingIndex = exampleCodeRegex.lastIndex;\n        lastStringCount = countChars(string, '\\n');\n        if (!exampleCodeRegex.global) {\n          break;\n        }\n      }\n\n      skipInit = true;\n    }\n\n    checkSource({\n      cols,\n      lines,\n      rules: mdRules,\n      skipInit,\n      source,\n      sources,\n      tag,\n      targetTagName,\n      ...matchingFilenameInfo,\n    });\n  });\n}, {\n  iterateAllJsdocs: true,\n  meta: {\n    docs: {\n      description: 'Ensures that (JavaScript) examples within JSDoc adhere to ESLint rules.',\n      url: 'https://github.com/gajus/eslint-plugin-jsdoc#eslint-plugin-jsdoc-rules-check-examples',\n    },\n    schema: [\n      {\n        additionalProperties: false,\n        properties: {\n          allowInlineConfig: {\n            default: true,\n            type: 'boolean',\n          },\n          baseConfig: {\n            type: 'object',\n          },\n          captionRequired: {\n            default: false,\n            type: 'boolean',\n          },\n          checkDefaults: {\n            default: false,\n            type: 'boolean',\n          },\n          checkEslintrc: {\n            default: true,\n            type: 'boolean',\n          },\n          checkParams: {\n            default: false,\n            type: 'boolean',\n          },\n          checkProperties: {\n            default: false,\n            type: 'boolean',\n          },\n          configFile: {\n            type: 'string',\n          },\n          exampleCodeRegex: {\n            type: 'string',\n          },\n          matchingFileName: {\n            type: 'string',\n          },\n          matchingFileNameDefaults: {\n            type: 'string',\n          },\n          matchingFileNameParams: {\n            type: 'string',\n          },\n          matchingFileNameProperties: {\n            type: 'string',\n          },\n          noDefaultExampleRules: {\n            default: false,\n            type: 'boolean',\n          },\n          paddedIndent: {\n            default: 0,\n            type: 'integer',\n          },\n          rejectExampleCodeRegex: {\n            type: 'string',\n          },\n          reportUnusedDisableDirectives: {\n            default: true,\n            type: 'boolean',\n          },\n        },\n        type: 'object',\n      },\n    ],\n    type: 'suggestion',\n  },\n});\n"],"mappings":"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"}