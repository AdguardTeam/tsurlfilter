{"version":3,"file":"requireAsteriskPrefix.js","names":["iterateJsdoc","context","jsdoc","utils","indent","defaultRequireValue","tags","tagMap","options","source","always","never","currentTag","some","number","tokens","delimiter","tag","end","description","neverFix","postDelimiter","checkNever","checkValue","includes","reportJSDoc","column","line","alwaysFix","start","checkAlways","slice","any","iterateAllJsdocs","meta","fixable","schema","enum","type","additionalProperties","properties","items"],"sources":["../../src/rules/requireAsteriskPrefix.js"],"sourcesContent":["import iterateJsdoc from '../iterateJsdoc';\n\nexport default iterateJsdoc(({\n  context,\n  jsdoc,\n  utils,\n  indent,\n}) => {\n  const [\n    defaultRequireValue = 'always',\n    {\n      tags: tagMap = {},\n    } = {},\n  ] = context.options;\n\n  const {\n    source,\n  } = jsdoc;\n\n  const always = defaultRequireValue === 'always';\n  const never = defaultRequireValue === 'never';\n\n  let currentTag;\n  source.some(({\n    number,\n    tokens,\n  }) => {\n    const {\n      delimiter,\n      tag,\n      end,\n      description,\n    } = tokens;\n\n    const neverFix = () => {\n      tokens.delimiter = '';\n      tokens.postDelimiter = '';\n    };\n\n    const checkNever = (checkValue) => {\n      if (delimiter && delimiter !== '/**' && (\n        never && !tagMap.always?.includes(checkValue) ||\n        tagMap.never?.includes(checkValue)\n      )) {\n        utils.reportJSDoc('Expected JSDoc line to have no prefix.', {\n          column: 0,\n          line: number,\n        }, neverFix);\n\n        return true;\n      }\n\n      return false;\n    };\n\n    const alwaysFix = () => {\n      if (!tokens.start) {\n        tokens.start = indent + ' ';\n      }\n\n      tokens.delimiter = '*';\n      tokens.postDelimiter = tag || description ? ' ' : '';\n    };\n\n    const checkAlways = (checkValue) => {\n      if (\n        !delimiter && (\n          always && !tagMap.never?.includes(checkValue) ||\n          tagMap.always?.includes(checkValue)\n        )\n      ) {\n        utils.reportJSDoc('Expected JSDoc line to have the prefix.', {\n          column: 0,\n          line: number,\n        }, alwaysFix);\n\n        return true;\n      }\n\n      return false;\n    };\n\n    if (tag) {\n      // Remove at sign\n      currentTag = tag.slice(1);\n    }\n\n    if (\n      // If this is the end but has a tag, the delimiter will also be\n      //  populated and will be safely ignored later\n      end && !tag\n    ) {\n      return false;\n    }\n\n    if (!currentTag) {\n      if (tagMap.any?.includes('*description')) {\n        return false;\n      }\n\n      if (checkNever('*description')) {\n        return true;\n      }\n\n      if (checkAlways('*description')) {\n        return true;\n      }\n\n      return false;\n    }\n\n    if (tagMap.any?.includes(currentTag)) {\n      return false;\n    }\n\n    if (checkNever(currentTag)) {\n      return true;\n    }\n\n    if (checkAlways(currentTag)) {\n      return true;\n    }\n\n    return false;\n  });\n}, {\n  iterateAllJsdocs: true,\n  meta: {\n    fixable: 'code',\n    schema: [\n      {\n        enum: [\n          'always', 'never', 'any',\n        ],\n        type: 'string',\n      },\n      {\n        additionalProperties: false,\n        properties: {\n          tags: {\n            properties: {\n              always: {\n                items: {\n                  type: 'string',\n                },\n                type: 'array',\n              },\n              any: {\n                items: {\n                  type: 'string',\n                },\n                type: 'array',\n              },\n              never: {\n                items: {\n                  type: 'string',\n                },\n                type: 'array',\n              },\n            },\n            type: 'object',\n          },\n        },\n        type: 'object',\n      },\n    ],\n    type: 'layout',\n  },\n});\n"],"mappings":"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"}