{"version":3,"file":"requireReturnsCheck.js","names":["canSkip","utils","settings","voidingTags","mode","push","hasATag","isConstructor","classHasTag","iterateJsdoc","context","node","report","exemptAsync","exemptGenerators","reportMissingReturnForUndefinedTypes","options","isAsync","tagName","getPreferredTagName","tags","getTags","length","tag","returnNever","type","trim","hasValueOrExecutorHasNonEmptyResolveValue","hasDefinedTypeTag","generator","meta","docs","description","url","schema","additionalProperties","properties","default"],"sources":["../../src/rules/requireReturnsCheck.js"],"sourcesContent":["import iterateJsdoc from '../iterateJsdoc';\n\nconst canSkip = (utils, settings) => {\n  const voidingTags = [\n    // An abstract function is by definition incomplete\n    // so it is perfectly fine if a return is documented but\n    // not present within the function.\n    // A subclass may inherit the doc and implement the\n    // missing return.\n    'abstract',\n    'virtual',\n\n    // A constructor function returns `this` by default, so may be `@returns`\n    //   tag indicating this but no explicit return\n    'class',\n    'constructor',\n    'interface',\n  ];\n\n  if (settings.mode === 'closure') {\n    // Structural Interface in GCC terms, equivalent to @interface tag as far as this rule is concerned\n    voidingTags.push('record');\n  }\n\n  return utils.hasATag(voidingTags) ||\n    utils.isConstructor() ||\n    utils.classHasTag('interface') ||\n    settings.mode === 'closure' && utils.classHasTag('record');\n};\n\nexport default iterateJsdoc(({\n  context,\n  node,\n  report,\n  settings,\n  utils,\n}) => {\n  const {\n    exemptAsync = true,\n    exemptGenerators = settings.mode === 'typescript',\n    reportMissingReturnForUndefinedTypes = false,\n  } = context.options[0] || {};\n\n  if (canSkip(utils, settings)) {\n    return;\n  }\n\n  if (exemptAsync && utils.isAsync()) {\n    return;\n  }\n\n  const tagName = utils.getPreferredTagName({\n    tagName: 'returns',\n  });\n  if (!tagName) {\n    return;\n  }\n\n  const tags = utils.getTags(tagName);\n\n  if (tags.length === 0) {\n    return;\n  }\n\n  if (tags.length > 1) {\n    report(`Found more than one @${tagName} declaration.`);\n\n    return;\n  }\n\n  const [\n    tag,\n  ] = tags;\n\n  const returnNever = tag.type.trim() === 'never';\n\n  if (returnNever && utils.hasValueOrExecutorHasNonEmptyResolveValue(false)) {\n    report(`JSDoc @${tagName} declaration set with \"never\" but return expression is present in function.`);\n\n    return;\n  }\n\n  // In case a return value is declared in JSDoc, we also expect one in the code.\n  if (\n    !returnNever &&\n    (\n      reportMissingReturnForUndefinedTypes ||\n      utils.hasDefinedTypeTag(tag)\n    ) &&\n    !utils.hasValueOrExecutorHasNonEmptyResolveValue(\n      exemptAsync,\n    ) && (!exemptGenerators || !node.generator)\n  ) {\n    report(`JSDoc @${tagName} declaration present but return expression not available in function.`);\n  }\n}, {\n  meta: {\n    docs: {\n      description: 'Requires a return statement in function body if a `@returns` tag is specified in jsdoc comment.',\n      url: 'https://github.com/gajus/eslint-plugin-jsdoc#eslint-plugin-jsdoc-rules-require-returns-check',\n    },\n    schema: [\n      {\n        additionalProperties: false,\n        properties: {\n          exemptAsync: {\n            default: true,\n            type: 'boolean',\n          },\n          exemptGenerators: {\n            type: 'boolean',\n          },\n          reportMissingReturnForUndefinedTypes: {\n            default: false,\n            type: 'boolean',\n          },\n        },\n        type: 'object',\n      },\n    ],\n    type: 'suggestion',\n  },\n});\n"],"mappings":"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"}