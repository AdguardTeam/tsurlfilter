{"version":3,"file":"checkTagNames.js","names":["jsxTagNames","Set","iterateJsdoc","sourceCode","jsdoc","report","utils","context","settings","jsdocNode","definedTags","jsxTags","options","definedPreferredTags","tagNamePreference","structuredTags","definedStructuredTags","Object","keys","definedNonPreferredTags","length","values","map","preferredTag","undefined","reportSettings","replacement","filter","preferredType","jsdocTag","tags","tagName","tag","has","isValidTag","preferredTagName","getPreferredTagName","allowObjectReturn","defaultMessage","message","fixer","getText","replace","RegExp","escapeStringRegexp","replaceText","iterateAllJsdocs","meta","docs","description","url","fixable","schema","additionalProperties","properties","items","type"],"sources":["../../src/rules/checkTagNames.js"],"sourcesContent":["import escapeStringRegexp from 'escape-string-regexp';\nimport iterateJsdoc from '../iterateJsdoc';\n\n// https://babeljs.io/docs/en/babel-plugin-transform-react-jsx/\nconst jsxTagNames = new Set([\n  'jsx',\n  'jsxFrag',\n  'jsxImportSource',\n  'jsxRuntime',\n]);\n\nexport default iterateJsdoc(({\n  sourceCode,\n  jsdoc,\n  report,\n  utils,\n  context,\n  settings,\n  jsdocNode,\n}) => {\n  const {\n    definedTags = [],\n    jsxTags,\n  } = context.options[0] || {};\n\n  let definedPreferredTags = [];\n  const {\n    tagNamePreference,\n    structuredTags,\n  } = settings;\n  const definedStructuredTags = Object.keys(structuredTags);\n  const definedNonPreferredTags = Object.keys(tagNamePreference);\n  if (definedNonPreferredTags.length) {\n    definedPreferredTags = Object.values(tagNamePreference).map((preferredTag) => {\n      if (typeof preferredTag === 'string') {\n        // May become an empty string but will be filtered out below\n        return preferredTag;\n      }\n\n      if (!preferredTag) {\n        return undefined;\n      }\n\n      if (typeof preferredTag !== 'object') {\n        utils.reportSettings(\n          'Invalid `settings.jsdoc.tagNamePreference`. Values must be falsy, a string, or an object.',\n        );\n      }\n\n      return preferredTag.replacement;\n    })\n      .filter((preferredType) => {\n        return preferredType;\n      });\n  }\n\n  for (const jsdocTag of jsdoc.tags) {\n    const tagName = jsdocTag.tag;\n    if (jsxTags && jsxTagNames.has(tagName)) {\n      continue;\n    }\n\n    if (utils.isValidTag(tagName, [\n      ...definedTags, ...definedPreferredTags, ...definedNonPreferredTags,\n      ...definedStructuredTags,\n    ])) {\n      let preferredTagName = utils.getPreferredTagName({\n        allowObjectReturn: true,\n        defaultMessage: `Blacklisted tag found (\\`@${tagName}\\`)`,\n        tagName,\n      });\n      if (!preferredTagName) {\n        continue;\n      }\n\n      let message;\n      if (typeof preferredTagName === 'object') {\n        ({\n          message,\n          replacement: preferredTagName,\n        } = preferredTagName);\n      }\n\n      if (!message) {\n        message = `Invalid JSDoc tag (preference). Replace \"${tagName}\" JSDoc tag with \"${preferredTagName}\".`;\n      }\n\n      if (preferredTagName !== tagName) {\n        report(message, (fixer) => {\n          const replacement = sourceCode.getText(jsdocNode).replace(\n            new RegExp(`@${escapeStringRegexp(tagName)}\\\\b`, 'u'),\n            `@${preferredTagName}`,\n          );\n\n          return fixer.replaceText(jsdocNode, replacement);\n        }, jsdocTag);\n      }\n    } else {\n      report(`Invalid JSDoc tag name \"${tagName}\".`, null, jsdocTag);\n    }\n  }\n}, {\n  iterateAllJsdocs: true,\n  meta: {\n    docs: {\n      description: 'Reports invalid block tag names.',\n      url: 'https://github.com/gajus/eslint-plugin-jsdoc#eslint-plugin-jsdoc-rules-check-tag-names',\n    },\n    fixable: 'code',\n    schema: [\n      {\n        additionalProperties: false,\n        properties: {\n          definedTags: {\n            items: {\n              type: 'string',\n            },\n            type: 'array',\n          },\n          jsxTags: {\n            type: 'boolean',\n          },\n        },\n        type: 'object',\n      },\n    ],\n    type: 'suggestion',\n  },\n});\n"],"mappings":"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"}