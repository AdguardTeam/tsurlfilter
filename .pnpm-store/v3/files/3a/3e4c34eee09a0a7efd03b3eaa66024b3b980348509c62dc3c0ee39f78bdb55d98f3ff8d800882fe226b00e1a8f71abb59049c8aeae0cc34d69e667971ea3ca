{"version":3,"file":"exportParser.js","names":["debug","debugModule","createNode","props","getSymbolValue","symbol","type","value","getIdentifier","node","globals","scope","opts","simpleIdentifier","identifierLiteral","name","block","createSymbol","getSymbol","opt","obj","object","propertySymbol","property","computed","propertyValue","body","val","prototype","left","right","method","key","parent","prop","properties","includes","propVal","createBlockSymbol","isGlobal","window","special","id","valueSymbol","initVariables","childNode","expression","declaration","declarations","initWindow","kind","mapVariables","isExport","ancestorsOnly","init","exported","ANONYMOUS_DEFAULT","specifier","specifiers","local","findNode","cache","blockCache","slice","push","propval","Object","values","Array","isArray","some","exportTypes","Set","ignorableNestedTypes","getExportAncestor","nde","idx","ignorableIfDeep","has","canBeExportedByAncestorType","canExportChildrenType","isExportByAncestor","findExportedNode","isNodeExported","moduleExports","module","exports","initModuleExports","esm","parseRecursive","globalVars","parse","ast","isUncommentedExport","sourceCode","settings","exportNode","findJSDocComment","parseResult"],"sources":["../src/exportParser.js"],"sourcesContent":["import {\n  findJSDocComment,\n} from '@es-joy/jsdoccomment';\nimport debugModule from 'debug';\n\nconst debug = debugModule('requireExportJsdoc');\n\nconst createNode = function () {\n  return {\n    props: {},\n  };\n};\n\nconst getSymbolValue = function (symbol) {\n  /* istanbul ignore next */\n  if (!symbol) {\n    /* istanbul ignore next */\n    return null;\n  }\n\n  /* istanbul ignore next */\n  if (symbol.type === 'literal') {\n    return symbol.value.value;\n  }\n\n  /* istanbul ignore next */\n  return null;\n};\n\nconst getIdentifier = function (node, globals, scope, opts) {\n  if (opts.simpleIdentifier) {\n    // Type is Identier for noncomputed properties\n    const identifierLiteral = createNode();\n    identifierLiteral.type = 'literal';\n    identifierLiteral.value = {\n      value: node.name,\n    };\n\n    return identifierLiteral;\n  }\n\n  /* istanbul ignore next */\n  const block = scope || globals;\n\n  // As scopes are not currently supported, they are not traversed upwards recursively\n  if (block.props[node.name]) {\n    return block.props[node.name];\n  }\n\n  // Seems this will only be entered once scopes added and entered\n  /* istanbul ignore next */\n  if (globals.props[node.name]) {\n    return globals.props[node.name];\n  }\n\n  return null;\n};\n\nlet createSymbol = null;\n\n// eslint-disable-next-line complexity\nconst getSymbol = function (node, globals, scope, opt) {\n  const opts = opt || {};\n  /* istanbul ignore next */\n  // eslint-disable-next-line default-case\n  switch (node.type) {\n  case 'Identifier': {\n    return getIdentifier(node, globals, scope, opts);\n  }\n\n  case 'MemberExpression': {\n    const obj = getSymbol(node.object, globals, scope, opts);\n    const propertySymbol = getSymbol(node.property, globals, scope, {\n      simpleIdentifier: !node.computed,\n    });\n    const propertyValue = getSymbolValue(propertySymbol);\n\n    /* istanbul ignore next */\n    if (obj && propertyValue && obj.props[propertyValue]) {\n      const block = obj.props[propertyValue];\n\n      return block;\n    }\n\n    /*\n    if (opts.createMissingProps && propertyValue) {\n      obj.props[propertyValue] = createNode();\n\n      return obj.props[propertyValue];\n    }\n    */\n    /* istanbul ignore next */\n    debug(`MemberExpression: Missing property ${node.property.name}`);\n\n    /* istanbul ignore next */\n    return null;\n  }\n\n  case 'ClassExpression': {\n    return getSymbol(node.body, globals, scope, opts);\n  }\n\n  case 'TSTypeAliasDeclaration':\n  case 'TSEnumDeclaration': case 'TSInterfaceDeclaration':\n  case 'ClassDeclaration':\n  case 'FunctionExpression': case 'FunctionDeclaration':\n  case 'ArrowFunctionExpression': {\n    const val = createNode();\n    val.props.prototype = createNode();\n    val.props.prototype.type = 'object';\n    val.type = 'object';\n    val.value = node;\n\n    return val;\n  }\n\n  case 'AssignmentExpression': {\n    return createSymbol(node.left, globals, node.right, scope, opts);\n  }\n\n  case 'ClassBody': {\n    const val = createNode();\n    for (const method of node.body) {\n      val.props[method.key.name] = createNode();\n      val.props[method.key.name].type = 'object';\n      val.props[method.key.name].value = method.value;\n    }\n\n    val.type = 'object';\n    val.value = node.parent;\n\n    return val;\n  }\n\n  case 'ObjectExpression': {\n    const val = createNode();\n    val.type = 'object';\n    for (const prop of node.properties) {\n      if ([\n        // @typescript-eslint/parser, espree, acorn, etc.\n        'SpreadElement',\n\n        // @babel/eslint-parser\n        'ExperimentalSpreadProperty',\n      ].includes(prop.type)) {\n        continue;\n      }\n\n      const propVal = getSymbol(prop.value, globals, scope, opts);\n      /* istanbul ignore next */\n      if (propVal) {\n        val.props[prop.key.name] = propVal;\n      }\n    }\n\n    return val;\n  }\n\n  case 'Literal': {\n    const val = createNode();\n    val.type = 'literal';\n    val.value = node;\n\n    return val;\n  }\n  }\n\n  /* istanbul ignore next */\n  return null;\n};\n\nconst createBlockSymbol = function (block, name, value, globals, isGlobal) {\n  block.props[name] = value;\n  if (isGlobal && globals.props.window && globals.props.window.special) {\n    globals.props.window.props[name] = value;\n  }\n};\n\ncreateSymbol = function (node, globals, value, scope, isGlobal) {\n  const block = scope || globals;\n  let symbol;\n  // eslint-disable-next-line default-case\n  switch (node.type) {\n  case 'FunctionDeclaration':\n  /* istanbul ignore next */\n  // Fall through\n  case 'TSEnumDeclaration': case 'TSInterfaceDeclaration':\n  /* istanbul ignore next */\n  // Fall through\n  case 'TSTypeAliasDeclaration': case 'ClassDeclaration': {\n    /* istanbul ignore next */\n    if (node.id && node.id.type === 'Identifier') {\n      return createSymbol(node.id, globals, node, globals);\n    }\n\n    /* istanbul ignore next */\n    break;\n  }\n\n  case 'Identifier': {\n    if (value) {\n      const valueSymbol = getSymbol(value, globals, block);\n      /* istanbul ignore next */\n      if (valueSymbol) {\n        createBlockSymbol(block, node.name, valueSymbol, globals, isGlobal);\n\n        return block.props[node.name];\n      }\n\n      /* istanbul ignore next */\n      debug('Identifier: Missing value symbol for %s', node.name);\n    } else {\n      createBlockSymbol(block, node.name, createNode(), globals, isGlobal);\n\n      return block.props[node.name];\n    }\n\n    /* istanbul ignore next */\n    break;\n  }\n\n  case 'MemberExpression': {\n    symbol = getSymbol(node.object, globals, block);\n\n    const propertySymbol = getSymbol(node.property, globals, block, {\n      simpleIdentifier: !node.computed,\n    });\n    const propertyValue = getSymbolValue(propertySymbol);\n    if (symbol && propertyValue) {\n      createBlockSymbol(symbol, propertyValue, getSymbol(value, globals, block), globals, isGlobal);\n\n      return symbol.props[propertyValue];\n    }\n\n    /* istanbul ignore next */\n    debug('MemberExpression: Missing symbol: %s', node.property.name);\n    break;\n  }\n  }\n\n  return null;\n};\n\n// Creates variables from variable definitions\nconst initVariables = function (node, globals, opts) {\n  // eslint-disable-next-line default-case\n  switch (node.type) {\n  case 'Program': {\n    for (const childNode of node.body) {\n      initVariables(childNode, globals, opts);\n    }\n\n    break;\n  }\n\n  case 'ExpressionStatement': {\n    initVariables(node.expression, globals, opts);\n    break;\n  }\n\n  case 'VariableDeclaration': {\n    for (const declaration of node.declarations) {\n      // let and const\n      const symbol = createSymbol(declaration.id, globals, null, globals);\n      if (opts.initWindow && node.kind === 'var' && globals.props.window) {\n        // If var, also add to window\n        globals.props.window.props[declaration.id.name] = symbol;\n      }\n    }\n\n    break;\n  }\n\n  case 'ExportNamedDeclaration': {\n    if (node.declaration) {\n      initVariables(node.declaration, globals, opts);\n    }\n\n    break;\n  }\n  }\n};\n\n// Populates variable maps using AST\n// eslint-disable-next-line complexity\nconst mapVariables = function (node, globals, opt, isExport) {\n  /* istanbul ignore next */\n  const opts = opt || {};\n  /* istanbul ignore next */\n  switch (node.type) {\n  case 'Program': {\n    if (opts.ancestorsOnly) {\n      return false;\n    }\n\n    for (const childNode of node.body) {\n      mapVariables(childNode, globals, opts);\n    }\n\n    break;\n  }\n\n  case 'ExpressionStatement': {\n    mapVariables(node.expression, globals, opts);\n    break;\n  }\n\n  case 'AssignmentExpression': {\n    createSymbol(node.left, globals, node.right);\n    break;\n  }\n\n  case 'VariableDeclaration': {\n    for (const declaration of node.declarations) {\n      const isGlobal = opts.initWindow && node.kind === 'var' && globals.props.window;\n      const symbol = createSymbol(declaration.id, globals, declaration.init, globals, isGlobal);\n      if (symbol && isExport) {\n        symbol.exported = true;\n      }\n    }\n\n    break;\n  }\n\n  case 'FunctionDeclaration': {\n    /* istanbul ignore next */\n    if (node.id.type === 'Identifier') {\n      createSymbol(node.id, globals, node, globals, true);\n    }\n\n    break;\n  }\n\n  case 'ExportDefaultDeclaration': {\n    const symbol = createSymbol(node.declaration, globals, node.declaration);\n    if (symbol) {\n      symbol.exported = true;\n    } else if (!node.id) {\n      globals.ANONYMOUS_DEFAULT = node.declaration;\n    }\n\n    break;\n  }\n\n  case 'ExportNamedDeclaration': {\n    if (node.declaration) {\n      if (node.declaration.type === 'VariableDeclaration') {\n        mapVariables(node.declaration, globals, opts, true);\n      } else {\n        const symbol = createSymbol(node.declaration, globals, node.declaration);\n        /* istanbul ignore next */\n        if (symbol) {\n          symbol.exported = true;\n        }\n      }\n    }\n\n    for (const specifier of node.specifiers) {\n      mapVariables(specifier, globals, opts);\n    }\n\n    break;\n  }\n\n  case 'ExportSpecifier': {\n    const symbol = getSymbol(node.local, globals, globals);\n    /* istanbul ignore next */\n    if (symbol) {\n      symbol.exported = true;\n    }\n\n    break;\n  }\n\n  case 'ClassDeclaration': {\n    createSymbol(node.id, globals, node.body, globals);\n    break;\n  }\n\n  default: {\n    /* istanbul ignore next */\n    return false;\n  }\n  }\n\n  return true;\n};\n\nconst findNode = function (node, block, cache) {\n  let blockCache = cache || [];\n  /* istanbul ignore next */\n  if (!block || blockCache.includes(block)) {\n    return false;\n  }\n\n  blockCache = blockCache.slice();\n  blockCache.push(block);\n\n  if (\n    (block.type === 'object' || block.type === 'MethodDefinition') &&\n    block.value === node\n  ) {\n    return true;\n  }\n\n  const {\n    props = block.body,\n  } = block;\n  for (const propval of Object.values(props || {})) {\n    if (Array.isArray(propval)) {\n      /* istanbul ignore if */\n      if (propval.some((val) => {\n        return findNode(node, val, blockCache);\n      })) {\n        return true;\n      }\n    } else if (findNode(node, propval, blockCache)) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nconst exportTypes = new Set([\n  'ExportNamedDeclaration', 'ExportDefaultDeclaration',\n]);\nconst ignorableNestedTypes = new Set([\n  'FunctionDeclaration', 'ArrowFunctionExpression', 'FunctionExpression',\n]);\nconst getExportAncestor = function (nde) {\n  let node = nde;\n  let idx = 0;\n  const ignorableIfDeep = ignorableNestedTypes.has(nde?.type);\n  while (node) {\n    // Ignore functions nested more deeply than say `export default function () {}`\n    if (idx >= 2 && ignorableIfDeep) {\n      break;\n    }\n\n    if (exportTypes.has(node.type)) {\n      return node;\n    }\n\n    node = node.parent;\n    idx++;\n  }\n\n  return false;\n};\n\nconst canBeExportedByAncestorType = new Set([\n  'TSPropertySignature',\n  'TSMethodSignature',\n  'ClassProperty',\n  'PropertyDefinition',\n  'Method',\n]);\n\nconst canExportChildrenType = new Set([\n  'TSInterfaceBody',\n  'TSInterfaceDeclaration',\n  'TSTypeLiteral',\n  'TSTypeAliasDeclaration',\n  'ClassDeclaration',\n  'ClassBody',\n  'ClassDefinition',\n  'ClassExpression',\n  'Program',\n]);\n\nconst isExportByAncestor = function (nde) {\n  if (!canBeExportedByAncestorType.has(nde.type)) {\n    return false;\n  }\n\n  let node = nde.parent;\n  while (node) {\n    if (exportTypes.has(node.type)) {\n      return node;\n    }\n\n    if (!canExportChildrenType.has(node.type)) {\n      return false;\n    }\n\n    node = node.parent;\n  }\n\n  return false;\n};\n\nconst findExportedNode = function (block, node, cache) {\n  /* istanbul ignore next */\n  if (block === null) {\n    return false;\n  }\n\n  const blockCache = cache || [];\n  const {\n    props,\n  } = block;\n  for (const propval of Object.values(props)) {\n    blockCache.push(propval);\n    if (propval.exported && (node === propval.value || findNode(node, propval.value))) {\n      return true;\n    }\n\n    // No need to check `propval` for exported nodes as ESM\n    //  exports are only global\n  }\n\n  return false;\n};\n\nconst isNodeExported = function (node, globals, opt) {\n  const moduleExports = globals.props.module?.props?.exports;\n  if (\n    opt.initModuleExports && moduleExports && findNode(node, moduleExports)\n  ) {\n    return true;\n  }\n\n  if (opt.initWindow && globals.props.window && findNode(node, globals.props.window)) {\n    return true;\n  }\n\n  if (opt.esm && findExportedNode(globals, node)) {\n    return true;\n  }\n\n  return false;\n};\n\nconst parseRecursive = function (node, globalVars, opts) {\n  // Iterate from top using recursion - stop at first processed node from top\n  if (node.parent && parseRecursive(node.parent, globalVars, opts)) {\n    return true;\n  }\n\n  return mapVariables(node, globalVars, opts);\n};\n\nconst parse = function (ast, node, opt) {\n  /* istanbul ignore next */\n  const opts = opt || {\n    ancestorsOnly: false,\n    esm: true,\n    initModuleExports: true,\n    initWindow: true,\n  };\n\n  const globalVars = createNode();\n  if (opts.initModuleExports) {\n    globalVars.props.module = createNode();\n    globalVars.props.module.props.exports = createNode();\n    globalVars.props.exports = globalVars.props.module.props.exports;\n  }\n\n  if (opts.initWindow) {\n    globalVars.props.window = createNode();\n    globalVars.props.window.special = true;\n  }\n\n  if (opts.ancestorsOnly) {\n    parseRecursive(node, globalVars, opts);\n  } else {\n    initVariables(ast, globalVars, opts);\n    mapVariables(ast, globalVars, opts);\n  }\n\n  return {\n    globalVars,\n  };\n};\n\nconst isUncommentedExport = function (node, sourceCode, opt, settings) {\n  // console.log({node});\n  // Optimize with ancestor check for esm\n  if (opt.esm) {\n    const exportNode = getExportAncestor(node);\n\n    // Is export node comment\n    if (exportNode && !findJSDocComment(exportNode, sourceCode, settings)) {\n      return true;\n    }\n\n    /**\n     * Some typescript types are not in variable map, but inherit exported (interface property and method)\n     */\n    if (\n      isExportByAncestor(node) &&\n      !findJSDocComment(node, sourceCode, settings)\n    ) {\n      return true;\n    }\n  }\n\n  const parseResult = parse(sourceCode.ast, node, opt);\n\n  return isNodeExported(node, parseResult.globalVars, opt);\n};\n\nexport default {\n  isUncommentedExport,\n  parse,\n};\n"],"mappings":"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"}