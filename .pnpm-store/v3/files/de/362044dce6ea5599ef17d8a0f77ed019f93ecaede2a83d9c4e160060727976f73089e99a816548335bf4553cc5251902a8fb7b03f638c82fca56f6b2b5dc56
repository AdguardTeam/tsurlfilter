{"version":3,"file":"checkTagNames.js","names":["jsxTagNames","Set","iterateJsdoc","sourceCode","jsdoc","report","utils","context","settings","jsdocNode","definedTags","jsxTags","options","definedPreferredTags","tagNamePreference","structuredTags","definedStructuredTags","Object","keys","definedNonPreferredTags","length","values","map","preferredTag","undefined","reportSettings","replacement","filter","preferredType","jsdocTag","tags","tagName","tag","has","isValidTag","preferredTagName","getPreferredTagName","allowObjectReturn","defaultMessage","message","fixer","getText","replace","RegExp","escapeStringRegexp","replaceText","iterateAllJsdocs","meta","docs","description","url","fixable","schema","additionalProperties","properties","items","type"],"sources":["../../src/rules/checkTagNames.js"],"sourcesContent":["import escapeStringRegexp from 'escape-string-regexp';\nimport iterateJsdoc from '../iterateJsdoc';\n\n// https://babeljs.io/docs/en/babel-plugin-transform-react-jsx/\nconst jsxTagNames = new Set([\n  'jsx',\n  'jsxFrag',\n  'jsxImportSource',\n  'jsxRuntime',\n]);\n\nexport default iterateJsdoc(({\n  sourceCode,\n  jsdoc,\n  report,\n  utils,\n  context,\n  settings,\n  jsdocNode,\n}) => {\n  const {\n    definedTags = [],\n    jsxTags,\n  } = context.options[0] || {};\n\n  let definedPreferredTags = [];\n  const {\n    tagNamePreference,\n    structuredTags,\n  } = settings;\n  const definedStructuredTags = Object.keys(structuredTags);\n  const definedNonPreferredTags = Object.keys(tagNamePreference);\n  if (definedNonPreferredTags.length) {\n    definedPreferredTags = Object.values(tagNamePreference).map((preferredTag) => {\n      if (typeof preferredTag === 'string') {\n        // May become an empty string but will be filtered out below\n        return preferredTag;\n      }\n\n      if (!preferredTag) {\n        return undefined;\n      }\n\n      if (typeof preferredTag !== 'object') {\n        utils.reportSettings(\n          'Invalid `settings.jsdoc.tagNamePreference`. Values must be falsy, a string, or an object.',\n        );\n      }\n\n      return preferredTag.replacement;\n    })\n      .filter((preferredType) => {\n        return preferredType;\n      });\n  }\n\n  for (const jsdocTag of jsdoc.tags) {\n    const tagName = jsdocTag.tag;\n    if (jsxTags && jsxTagNames.has(tagName)) {\n      continue;\n    }\n\n    if (utils.isValidTag(tagName, [\n      ...definedTags, ...definedPreferredTags, ...definedNonPreferredTags,\n      ...definedStructuredTags,\n    ])) {\n      let preferredTagName = utils.getPreferredTagName({\n        allowObjectReturn: true,\n        defaultMessage: `Blacklisted tag found (\\`@${tagName}\\`)`,\n        tagName,\n      });\n      if (!preferredTagName) {\n        continue;\n      }\n\n      let message;\n      if (typeof preferredTagName === 'object') {\n        ({\n          message,\n          replacement: preferredTagName,\n        } = preferredTagName);\n      }\n\n      if (!message) {\n        message = `Invalid JSDoc tag (preference). Replace \"${tagName}\" JSDoc tag with \"${preferredTagName}\".`;\n      }\n\n      if (preferredTagName !== tagName) {\n        report(message, (fixer) => {\n          const replacement = sourceCode.getText(jsdocNode).replace(\n            new RegExp(`@${escapeStringRegexp(tagName)}\\\\b`, 'u'),\n            `@${preferredTagName}`,\n          );\n\n          return fixer.replaceText(jsdocNode, replacement);\n        }, jsdocTag);\n      }\n    } else {\n      report(`Invalid JSDoc tag name \"${tagName}\".`, null, jsdocTag);\n    }\n  }\n}, {\n  iterateAllJsdocs: true,\n  meta: {\n    docs: {\n      description: 'Reports invalid block tag names.',\n      url: 'https://github.com/gajus/eslint-plugin-jsdoc#eslint-plugin-jsdoc-rules-check-tag-names',\n    },\n    fixable: 'code',\n    schema: [\n      {\n        additionalProperties: false,\n        properties: {\n          definedTags: {\n            items: {\n              type: 'string',\n            },\n            type: 'array',\n          },\n          jsxTags: {\n            type: 'boolean',\n          },\n        },\n        type: 'object',\n      },\n    ],\n    type: 'suggestion',\n  },\n});\n"],"mappings":"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"}