{"version":3,"sources":["../src/copier.mjs"],"names":["noop","copy","value","type","customizer","arguments","length","valueType","copyFunction","copyMap","get","result","undefined"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEA;;;AAGA,SAASA,IAAT,GAAgB,CAAE;AAElB;;;;;;;;;;AAQO,SAASC,IAAT,CAAcC,KAAd,EAAqBC,IAAI,GAAG,IAA5B,EAAkCC,UAAU,GAAGJ,IAA/C,EAAqD;AAC1D,MAAIK,SAAS,CAACC,MAAV,KAAqB,CAArB,IAA0B,OAAOH,IAAP,KAAgB,UAA9C,EAA0D;AACxDC,IAAAA,UAAU,GAAGD,IAAb;AACAA,IAAAA,IAAI,GAAG,IAAP;AACD;;AAED,QAAMI,SAAS,GAAGJ,IAAI,IAAI,0BAAWD,KAAX,CAA1B;;AACA,QAAMM,YAAY,GAAGC,kBAAQC,GAAR,CAAYH,SAAZ,CAArB;;AAEA,MAAIA,SAAS,KAAK,QAAlB,EAA4B;AAC1B,UAAMI,MAAM,GAAGP,UAAU,CAACF,KAAD,EAAQK,SAAR,CAAzB;;AAEA,QAAII,MAAM,KAAKC,SAAf,EAA0B;AACxB,aAAOD,MAAP;AACD;AACF,GAfyD,CAiB1D;;;AACA,SAAOH,YAAY,GAAGA,YAAY,CAACN,KAAD,EAAQK,SAAR,CAAf,GAAoCL,KAAvD;AACD","sourcesContent":["import copyMap from './copy_map.mjs';\nimport { detectType } from './detector.mjs';\n\n/**\n * no operation\n */\nfunction noop() {}\n\n/**\n * copy value\n *\n * @param {*} value\n * @param {string} [type=null]\n * @param {Function} [customizer=noop]\n * @return {*}\n */\nexport function copy(value, type = null, customizer = noop) {\n  if (arguments.length === 2 && typeof type === 'function') {\n    customizer = type;\n    type = null;\n  }\n\n  const valueType = type || detectType(value);\n  const copyFunction = copyMap.get(valueType);\n\n  if (valueType === 'Object') {\n    const result = customizer(value, valueType);\n\n    if (result !== undefined) {\n      return result;\n    }\n  }\n\n  // NOTE: TypedArray needs pass type to argument\n  return copyFunction ? copyFunction(value, valueType) : value;\n}\n"],"file":"copier.js"}