{"version":3,"file":"checkParamNames.js","names":["validateParameterNames","targetTagName","allowExtraTrailingParamDocs","checkDestructured","checkRestProperty","checkTypesRegex","disableExtraPropertyReporting","enableFixer","functionParameterNames","jsdoc","utils","report","paramTags","Object","entries","tags","filter","tag","paramTagsNonNested","name","includes","dotted","thisOffset","some","index","tagsIndex","dupeTagInfo","find","tgsIndex","tg","idx","reportJSDoc","removeTag","functionParameterName","trim","Array","isArray","type","search","parameterName","names","properties","hasPropertyRest","rests","annotationParamName","undefined","tagName","expectedNames","map","actualNames","paramTag","actualTypes","missingProperties","notCheckingNames","notCheckingName","startsWith","actualNameIdx","findIndex","actualName","comparePaths","missingIndex","pathDoesNotBeginWith","line","source","number","length","push","tagPlacement","hasMissing","missingProperty","extraProperties","match","prop","split","extraProperty","funcParamName","item","join","validateParameterNamesDeep","_allowExtraTrailingParamDocs","jsdocParameterNames","lastRealParameter","jsdocParameterName","isPropertyPath","pathRootNodeName","slice","indexOf","endsWith","iterateJsdoc","context","checkTypesPattern","useDefaultObjectProperties","options","getRegexFromString","jsdocParameterNamesDeep","getJsdocTagsDeep","getFunctionParameterNames","getPreferredTagName","isError","meta","docs","description","url","fixable","schema","additionalProperties"],"sources":["../../src/rules/checkParamNames.js"],"sourcesContent":["import iterateJsdoc from '../iterateJsdoc';\n\n/**\n * @param {string} targetTagName\n * @param {boolean} allowExtraTrailingParamDocs\n * @param {boolean} checkDestructured\n * @param {boolean} checkRestProperty\n * @param {RegExp} checkTypesRegex\n * @param {boolean} disableExtraPropertyReporting\n * @param {boolean} enableFixer\n * @param {Array<string>} functionParameterNames\n * @param jsdoc\n * @param utils\n * @param report\n * @returns {boolean}\n */\nconst validateParameterNames = (\n  targetTagName,\n  allowExtraTrailingParamDocs,\n  checkDestructured,\n  checkRestProperty,\n  checkTypesRegex,\n  disableExtraPropertyReporting,\n  enableFixer,\n  functionParameterNames, jsdoc, utils, report,\n) => {\n  const paramTags = Object.entries(jsdoc.tags).filter(([\n    , tag,\n  ]) => {\n    return tag.tag === targetTagName;\n  });\n  const paramTagsNonNested = paramTags.filter(([\n    , tag,\n  ]) => {\n    return !tag.name.includes('.');\n  });\n\n  let dotted = 0;\n  let thisOffset = 0;\n\n  // eslint-disable-next-line complexity\n  return paramTags.some(([\n    , tag,\n  ], index) => {\n    let tagsIndex;\n    const dupeTagInfo = paramTags.find(([\n      tgsIndex,\n      tg,\n    ], idx) => {\n      tagsIndex = tgsIndex;\n\n      return tg.name === tag.name && idx !== index;\n    });\n    if (dupeTagInfo) {\n      utils.reportJSDoc(`Duplicate @${targetTagName} \"${tag.name}\"`, dupeTagInfo[1], enableFixer ? () => {\n        utils.removeTag(tagsIndex);\n      } : null);\n\n      return true;\n    }\n\n    if (tag.name.includes('.')) {\n      dotted++;\n\n      return false;\n    }\n\n    let functionParameterName = functionParameterNames[index - dotted + thisOffset];\n    if (functionParameterName === 'this' && tag.name.trim() !== 'this') {\n      ++thisOffset;\n      functionParameterName = functionParameterNames[index - dotted + thisOffset];\n    }\n\n    if (!functionParameterName) {\n      if (allowExtraTrailingParamDocs) {\n        return false;\n      }\n\n      report(\n        `@${targetTagName} \"${tag.name}\" does not match an existing function parameter.`,\n        null,\n        tag,\n      );\n\n      return true;\n    }\n\n    if (Array.isArray(functionParameterName)) {\n      if (!checkDestructured) {\n        return false;\n      }\n\n      if (tag.type && tag.type.search(checkTypesRegex) === -1) {\n        return false;\n      }\n\n      const [\n        parameterName,\n        {\n          names: properties,\n          hasPropertyRest,\n          rests,\n          annotationParamName,\n        },\n      ] = functionParameterName;\n      if (annotationParamName !== undefined) {\n        const name = tag.name.trim();\n        if (name !== annotationParamName) {\n          report(`@${targetTagName} \"${name}\" does not match parameter name \"${annotationParamName}\"`, null, tag);\n        }\n      }\n\n      const tagName = parameterName === undefined ? tag.name.trim() : parameterName;\n      const expectedNames = properties.map((name) => {\n        return `${tagName}.${name}`;\n      });\n      const actualNames = paramTags.map(([\n        , paramTag,\n      ]) => {\n        return paramTag.name.trim();\n      });\n      const actualTypes = paramTags.map(([\n        , paramTag,\n      ]) => {\n        return paramTag.type;\n      });\n\n      const missingProperties = [];\n      const notCheckingNames = [];\n\n      for (const [\n        idx,\n        name,\n      ] of expectedNames.entries()) {\n        if (notCheckingNames.some((notCheckingName) => {\n          return name.startsWith(notCheckingName);\n        })) {\n          continue;\n        }\n\n        const actualNameIdx = actualNames.findIndex((actualName) => {\n          return utils.comparePaths(name)(actualName);\n        });\n        if (actualNameIdx === -1) {\n          if (!checkRestProperty && rests[idx]) {\n            continue;\n          }\n\n          const missingIndex = actualNames.findIndex((actualName) => {\n            return utils.pathDoesNotBeginWith(name, actualName);\n          });\n          const line = tag.source[0].number - 1 + (missingIndex > -1 ? missingIndex : actualNames.length);\n          missingProperties.push({\n            name,\n            tagPlacement: {\n              line: line === 0 ? 1 : line,\n            },\n          });\n        } else if (actualTypes[actualNameIdx].search(checkTypesRegex) === -1 && actualTypes[actualNameIdx] !== '') {\n          notCheckingNames.push(name);\n        }\n      }\n\n      const hasMissing = missingProperties.length;\n      if (hasMissing) {\n        for (const {\n          tagPlacement,\n          name: missingProperty,\n        } of missingProperties) {\n          report(`Missing @${targetTagName} \"${missingProperty}\"`, null, tagPlacement);\n        }\n      }\n\n      if (!hasPropertyRest || checkRestProperty) {\n        const extraProperties = [];\n        for (const [\n          idx,\n          name,\n        ] of actualNames.entries()) {\n          const match = name.startsWith(tag.name.trim() + '.');\n          if (\n            match && !expectedNames.some(\n              utils.comparePaths(name),\n            ) && !utils.comparePaths(name)(tag.name) &&\n            (!disableExtraPropertyReporting || properties.some((prop) => {\n              return prop.split('.').length >= name.split('.').length - 1;\n            }))\n          ) {\n            extraProperties.push([\n              name, paramTags[idx][1],\n            ]);\n          }\n        }\n\n        if (extraProperties.length) {\n          for (const [\n            extraProperty,\n            tg,\n          ] of extraProperties) {\n            report(`@${targetTagName} \"${extraProperty}\" does not exist on ${tag.name}`, null, tg);\n          }\n\n          return true;\n        }\n      }\n\n      return hasMissing;\n    }\n\n    let funcParamName;\n    if (typeof functionParameterName === 'object') {\n      const {\n        name,\n      } = functionParameterName;\n      funcParamName = name;\n    } else {\n      funcParamName = functionParameterName;\n    }\n\n    if (funcParamName !== tag.name.trim()) {\n      // Todo: Improve for array or object child items\n      const actualNames = paramTagsNonNested.map(([\n        , {\n          name,\n        },\n      ]) => {\n        return name.trim();\n      });\n      const expectedNames = functionParameterNames.map((item, idx) => {\n        if (item?.[1]?.names) {\n          return actualNames[idx];\n        }\n\n        return item;\n      }).filter((item) => {\n        return item !== 'this';\n      }).join(', ');\n\n      report(\n        `Expected @${targetTagName} names to be \"${expectedNames}\". Got \"${actualNames.join(', ')}\".`,\n        null,\n        tag,\n      );\n\n      return true;\n    }\n\n    return false;\n  });\n};\n\n/**\n * @param {string} targetTagName\n * @param {boolean} _allowExtraTrailingParamDocs\n * @param {Array<string>} jsdocParameterNames\n * @param jsdoc\n * @param {Function} report\n * @returns {boolean}\n */\nconst validateParameterNamesDeep = (\n  targetTagName, _allowExtraTrailingParamDocs,\n  jsdocParameterNames, jsdoc, report,\n) => {\n  let lastRealParameter;\n\n  return jsdocParameterNames.some(({\n    name: jsdocParameterName,\n    idx,\n  }) => {\n    const isPropertyPath = jsdocParameterName.includes('.');\n\n    if (isPropertyPath) {\n      if (!lastRealParameter) {\n        report(`@${targetTagName} path declaration (\"${jsdocParameterName}\") appears before any real parameter.`, null, jsdoc.tags[idx]);\n\n        return true;\n      }\n\n      let pathRootNodeName = jsdocParameterName.slice(0, jsdocParameterName.indexOf('.'));\n\n      if (pathRootNodeName.endsWith('[]')) {\n        pathRootNodeName = pathRootNodeName.slice(0, -2);\n      }\n\n      if (pathRootNodeName !== lastRealParameter) {\n        report(\n          `@${targetTagName} path declaration (\"${jsdocParameterName}\") root node name (\"${pathRootNodeName}\") ` +\n          `does not match previous real parameter name (\"${lastRealParameter}\").`,\n          null,\n          jsdoc.tags[idx],\n        );\n\n        return true;\n      }\n    } else {\n      lastRealParameter = jsdocParameterName;\n    }\n\n    return false;\n  });\n};\n\nexport default iterateJsdoc(({\n  context,\n  jsdoc,\n  report,\n  utils,\n}) => {\n  const {\n    allowExtraTrailingParamDocs,\n    checkDestructured = true,\n    checkRestProperty = false,\n    checkTypesPattern = '/^(?:[oO]bject|[aA]rray|PlainObject|Generic(?:Object|Array))$/',\n    enableFixer = false,\n    useDefaultObjectProperties = false,\n    disableExtraPropertyReporting = false,\n  } = context.options[0] || {};\n\n  const checkTypesRegex = utils.getRegexFromString(checkTypesPattern);\n\n  const jsdocParameterNamesDeep = utils.getJsdocTagsDeep('param');\n  if (!jsdocParameterNamesDeep.length) {\n    return;\n  }\n\n  const functionParameterNames = utils.getFunctionParameterNames(useDefaultObjectProperties);\n  const targetTagName = utils.getPreferredTagName({\n    tagName: 'param',\n  });\n  const isError = validateParameterNames(\n    targetTagName,\n    allowExtraTrailingParamDocs,\n    checkDestructured,\n    checkRestProperty,\n    checkTypesRegex,\n    disableExtraPropertyReporting,\n    enableFixer,\n    functionParameterNames,\n    jsdoc,\n    utils,\n    report,\n  );\n\n  if (isError || !checkDestructured) {\n    return;\n  }\n\n  validateParameterNamesDeep(\n    targetTagName, allowExtraTrailingParamDocs, jsdocParameterNamesDeep, jsdoc, report,\n  );\n}, {\n  meta: {\n    docs: {\n      description: 'Ensures that parameter names in JSDoc match those in the function declaration.',\n      url: 'https://github.com/gajus/eslint-plugin-jsdoc#eslint-plugin-jsdoc-rules-check-param-names',\n    },\n    fixable: 'code',\n    schema: [\n      {\n        additionalProperties: false,\n        properties: {\n          allowExtraTrailingParamDocs: {\n            type: 'boolean',\n          },\n          checkDestructured: {\n            type: 'boolean',\n          },\n          checkRestProperty: {\n            type: 'boolean',\n          },\n          checkTypesPattern: {\n            type: 'string',\n          },\n          disableExtraPropertyReporting: {\n            type: 'boolean',\n          },\n          enableFixer: {\n            type: 'boolean',\n          },\n          useDefaultObjectProperties: {\n            type: 'boolean',\n          },\n        },\n        type: 'object',\n      },\n    ],\n    type: 'suggestion',\n  },\n});\n"],"mappings":"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"}