/**
 * This is a helper class that is used specifically to work
 * with domains restrictions.
 *
 * There are two options how you can add a domain restriction:
 * * `$domain` modifier: https://kb.adguard.com/en/general/how-to-create-your-own-ad-filters#domain-modifier
 * * domains list for the cosmetic rules
 *
 * The only difference between them is that in one case we use `|` as a separator,
 * and in the other case - `,`.
 *
 * Examples:
 * * `||example.org^$domain=example.com|~sub.example.com` -- network rule
 * * `example.com,~sub.example.com##banner` -- cosmetic rule
 */
export declare class DomainModifier {
    /**
     * List of permitted domains or null.
     */
    readonly permittedDomains: string[] | null;
    /**
     * List of restricted domains or null.
     */
    readonly restrictedDomains: string[] | null;
    /**
     * Parses the `domains` string and initializes the object.
     *
     * @param domainsStr Domains string.
     * @param separator Separator â€” `,` or `|`.
     *
     * @throws An error if the domains string is empty or invalid
     */
    constructor(domainsStr: string, separator: string);
    /**
     * isDomainOrSubdomainOfAny checks if `domain` is the same or a subdomain
     * of any of `domains`.
     *
     * @param domain - domain to check
     * @param domains - domains list to check against
     */
    static isDomainOrSubdomainOfAny(domain: string, domains: string[]): boolean;
    /**
     * Checks if domain ends with wildcard
     *
     * @param domain
     */
    static isWildcardDomain(domain: string): boolean;
    /**
     * Checks if wildcard matches domain
     *
     * @param wildcard
     * @param domainNameToCheck
     */
    private static matchAsWildcard;
    /**
     * Generates from domain tld wildcard e.g. google.com -> google.* ; youtube.co.uk -> youtube.*
     *
     * @param {string} domainName
     * @returns {string} string is empty if tld for provided domain name doesn't exists
     */
    private static genTldWildcard;
}
/**
 * Comma separator
 */
export declare const COMMA_SEPARATOR = ",";
/**
 * Pipe separator
 */
export declare const PIPE_SEPARATOR = "|";
