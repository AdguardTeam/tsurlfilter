{"version":3,"file":"tokenize.mjs","sources":["../src/lib/code-points.ts","../src/lib/is.ts","../src/lib/token-types.ts","../src/lib/consume.ts","../src/tokenize.ts"],"sourcesContent":["/**\n * Unicode Character Codes (0x0000 - 0x0080)\n * @see https://www.unicode.org/Public/UCD/latest/ucd/NamesList.txt\n * @see https://unicode.org/charts/nameslist/n_0000.html\n *//** */\n\n/**\n * C0 controls\n * ===================================================================== *//***/\n\n/** ␀ */ export const NULL                        = 0x0000\n/** ␁ */ export const START_OF_HEADING            = 0x0001\n/** ␂ */ export const START_OF_TEXT               = 0x0002\n/** ␃ */ export const END_OF_TEXT                 = 0x0003\n/** ␄ */ export const END_OF_TRANSMISSION         = 0x0004\n/** ␅ */ export const ENQUIRY                     = 0x0005\n/** ␆ */ export const ACKNOWLEDGE                 = 0x0006\n/** ␇ */ export const BELL                        = 0x0007\n/** ␈ */ export const BACKSPACE                   = 0x0008\n/** ␉ */ export const CHARACTER_TABULATION        = 0x0009\n/** ␊ */ export const LINE_FEED                   = 0x000A\n/** ␋ */ export const LINE_TABULATION             = 0x000B\n/** ␌ */ export const FORM_FEED                   = 0x000C\n/** ␍ */ export const CARRIAGE_RETURN             = 0x000D\n/** ␎ */ export const SHIFT_OUT                   = 0x000E\n/** ␏ */ export const SHIFT_IN                    = 0x000F\n/** ␐ */ export const DATA_LINK_ESCAPE            = 0x0010\n/** ␑ */ export const DEVICE_CONTROL_ONE          = 0x0011\n/** ␒ */ export const DEVICE_CONTROL_TWO          = 0x0012\n/** ␓ */ export const DEVICE_CONTROL_THREE        = 0x0013\n/** ␔ */ export const DEVICE_CONTROL_FOUR         = 0x0014\n/** ␕ */ export const NEGATIVE_ACKNOWLEDGE        = 0x0015\n/** ␖ */ export const SYNCHRONOUS_IDLE            = 0x0016\n/** ␗ */ export const END_OF_TRANSMISSION_BLOCK   = 0x0017\n/** ␘ */ export const CANCEL                      = 0x0018\n/** ␙ */ export const END_OF_MEDIUM               = 0x0019\n/** ␚ */ export const SUBSTITUTE                  = 0x001A\n/** ␛ */ export const ESCAPE                      = 0x001B\n/** ␜ */ export const INFORMATION_SEPARATOR_FOUR  = 0x001C\n/** ␝ */ export const INFORMATION_SEPARATOR_THREE = 0x001D\n/** ␞ */ export const INFORMATION_SEPARATOR_TWO   = 0x001E\n/** ␟ */ export const INFORMATION_SEPARATOR_ONE   = 0x001F\n\n/**\n * ASCII punctuation and symbols\n * ===================================================================== *//***/\n\n/** ␠ */ export const SPACE                       = 0x0020\n/** ! */ export const EXCLAMATION_MARK            = 0x0021\n/** \" */ export const QUOTATION_MARK              = 0x0022\n/** # */ export const NUMBER_SIGN                 = 0x0023\n/** $ */ export const DOLLAR_SIGN                 = 0x0024\n/** % */ export const PERCENT_SIGN                = 0x0025\n/** & */ export const AMPERSAND                   = 0x0026\n/** ' */ export const APOSTROPHE                  = 0x0027\n/** ( */ export const LEFT_PARENTHESIS            = 0x0028\n/** ) */ export const RIGHT_PARENTHESIS           = 0x0029\n/** * */ export const ASTERISK                    = 0x002A\n/** + */ export const PLUS_SIGN                   = 0x002B\n/** , */ export const COMMA                       = 0x002C\n/** - */ export const HYPHEN_MINUS                = 0x002D\n/** . */ export const FULL_STOP                   = 0x002E\n/** / */ export const SOLIDUS                     = 0x002F\n\n/*\n * ASCII digits\n * ========================================================================== */\n\n/** 0 */ export const DIGIT_ZERO                  = 0x0030\n/** 1 */ export const DIGIT_ONE                   = 0x0031\n/** 2 */ export const DIGIT_TWO                   = 0x0032\n/** 3 */ export const DIGIT_THREE                 = 0x0033\n/** 4 */ export const DIGIT_FOUR                  = 0x0034\n/** 5 */ export const DIGIT_FIVE                  = 0x0035\n/** 6 */ export const DIGIT_SIX                   = 0x0036\n/** 7 */ export const DIGIT_SEVEN                 = 0x0037\n/** 8 */ export const DIGIT_EIGHT                 = 0x0038\n/** 9 */ export const DIGIT_NINE                  = 0x0039\n\n/**\n * ASCII punctuation and symbols\n * ===================================================================== *//***/\n\n/** : */ export const COLON                       = 0x003A\n/** ; */ export const SEMICOLON                   = 0x003B\n/** < */ export const LESS_THAN_SIGN              = 0x003C\n/** = */ export const EQUALS_SIGN                 = 0x003D\n/** > */ export const GREATER_THAN_SIGN           = 0x003E\n/** ? */ export const QUESTION_MARK               = 0x003F\n/** @ */ export const COMMERCIAL_AT               = 0x0040\n\n/**\n * Uppercase Latin alphabet\n * ===================================================================== *//***/\n\n/** A */ export const LATIN_CAPITAL_LETTER_A      = 0x0041\n/** B */ export const LATIN_CAPITAL_LETTER_B      = 0x0042\n/** C */ export const LATIN_CAPITAL_LETTER_C      = 0x0043\n/** D */ export const LATIN_CAPITAL_LETTER_D      = 0x0044\n/** E */ export const LATIN_CAPITAL_LETTER_E      = 0x0045\n/** F */ export const LATIN_CAPITAL_LETTER_F      = 0x0046\n/** G */ export const LATIN_CAPITAL_LETTER_G      = 0x0047\n/** H */ export const LATIN_CAPITAL_LETTER_H      = 0x0048\n/** I */ export const LATIN_CAPITAL_LETTER_I      = 0x0049\n/** J */ export const LATIN_CAPITAL_LETTER_J      = 0x004A\n/** K */ export const LATIN_CAPITAL_LETTER_K      = 0x004B\n/** L */ export const LATIN_CAPITAL_LETTER_L      = 0x004C\n/** M */ export const LATIN_CAPITAL_LETTER_M      = 0x004D\n/** N */ export const LATIN_CAPITAL_LETTER_N      = 0x004E\n/** O */ export const LATIN_CAPITAL_LETTER_O      = 0x004F\n/** P */ export const LATIN_CAPITAL_LETTER_P      = 0x0050\n/** Q */ export const LATIN_CAPITAL_LETTER_Q      = 0x0051\n/** R */ export const LATIN_CAPITAL_LETTER_R      = 0x0052\n/** S */ export const LATIN_CAPITAL_LETTER_S      = 0x0053\n/** T */ export const LATIN_CAPITAL_LETTER_T      = 0x0054\n/** U */ export const LATIN_CAPITAL_LETTER_U      = 0x0055\n/** V */ export const LATIN_CAPITAL_LETTER_V      = 0x0056\n/** W */ export const LATIN_CAPITAL_LETTER_W      = 0x0057\n/** X */ export const LATIN_CAPITAL_LETTER_X      = 0x0058\n/** Y */ export const LATIN_CAPITAL_LETTER_Y      = 0x0059\n/** Z */ export const LATIN_CAPITAL_LETTER_Z      = 0x005A\n\n/**\n * ASCII punctuation and symbols\n * ===================================================================== *//***/\n\n/** [ */ export const LEFT_SQUARE_BRACKET         = 0x005B\n/** \\ */ export const REVERSE_SOLIDUS             = 0x005C\n/** ] */ export const RIGHT_SQUARE_BRACKET        = 0x005D\n/** ^ */ export const CIRCUMFLEX_ACCENT           = 0x005E\n/** _ */ export const LOW_LINE                    = 0x005F\n/** ` */ export const GRAVE_ACCENT                = 0x0060\n\n/*\n * Lowercase Latin alphabet\n * ========================================================================== */\n\n/** a */ export const LATIN_SMALL_LETTER_A        = 0x0061\n/** b */ export const LATIN_SMALL_LETTER_B        = 0x0062\n/** c */ export const LATIN_SMALL_LETTER_C        = 0x0063\n/** d */ export const LATIN_SMALL_LETTER_D        = 0x0064\n/** e */ export const LATIN_SMALL_LETTER_E        = 0x0065\n/** f */ export const LATIN_SMALL_LETTER_F        = 0x0066\n/** g */ export const LATIN_SMALL_LETTER_G        = 0x0067\n/** h */ export const LATIN_SMALL_LETTER_H        = 0x0068\n/** i */ export const LATIN_SMALL_LETTER_I        = 0x0069\n/** j */ export const LATIN_SMALL_LETTER_J        = 0x006A\n/** k */ export const LATIN_SMALL_LETTER_K        = 0x006B\n/** l */ export const LATIN_SMALL_LETTER_L        = 0x006C\n/** m */ export const LATIN_SMALL_LETTER_M        = 0x006D\n/** n */ export const LATIN_SMALL_LETTER_N        = 0x006E\n/** o */ export const LATIN_SMALL_LETTER_O        = 0x006F\n/** p */ export const LATIN_SMALL_LETTER_P        = 0x0070\n/** q */ export const LATIN_SMALL_LETTER_Q        = 0x0071\n/** r */ export const LATIN_SMALL_LETTER_R        = 0x0072\n/** s */ export const LATIN_SMALL_LETTER_S        = 0x0073\n/** t */ export const LATIN_SMALL_LETTER_T        = 0x0074\n/** u */ export const LATIN_SMALL_LETTER_U        = 0x0075\n/** v */ export const LATIN_SMALL_LETTER_V        = 0x0076\n/** w */ export const LATIN_SMALL_LETTER_W        = 0x0077\n/** x */ export const LATIN_SMALL_LETTER_X        = 0x0078\n/** y */ export const LATIN_SMALL_LETTER_Y        = 0x0079\n/** z */ export const LATIN_SMALL_LETTER_Z        = 0x007A\n\n/**\n * ASCII punctuation and symbols\n * ===================================================================== *//***/\n\n/** { */ export const LEFT_CURLY_BRACKET          = 0x007B\n/** | */ export const VERTICAL_LINE               = 0x007C\n/** } */ export const RIGHT_CURLY_BRACKET         = 0x007D\n/** ~ */ export const TILDE                       = 0x007E\n\n/**\n * Control character\n * ===================================================================== *//***/\n\n/** ␡ */ export const DELETE                      = 0x007F\n\n/**\n * Non-ASCII\n * ===================================================================== *//***/\n\n/** � */ export const NON_ASCII                   = 0x0080\n\n/**\n * EOF\n * ===================================================================== *//***/\n\n/** ⏏ */ export const EOF                         = -0x0001\n","import * as cp from './code-points.js'\n\n/** Returns whether the unicode value is a digit. [↗](https://drafts.csswg.org/css-syntax/#digit) */\nexport const digit = (code: number) => code >= cp.DIGIT_ZERO && code <= cp.DIGIT_NINE\n\n/** Returns whether the unicode value is an identifier. [↗](https://drafts.csswg.org/css-syntax/#identifier-code-point) */\nexport const identifier = (code: number) => (\n\tidentifierStart(code) ||\n\t(code >= cp.DIGIT_ZERO && code <= cp.DIGIT_NINE) ||\n\t(code === cp.HYPHEN_MINUS)\n)\n\n/** Returns whether the unicode value is an identifier-start. [↗](https://drafts.csswg.org/css-syntax/#identifier-start-code-point) */\nexport const identifierStart = (code: number) => (\n\t(code === cp.LOW_LINE) ||\n\t(code >= cp.NON_ASCII) ||\n\t(code >= cp.LATIN_CAPITAL_LETTER_A && code <= cp.LATIN_CAPITAL_LETTER_Z) ||\n\t(code >= cp.LATIN_SMALL_LETTER_A && code <= cp.LATIN_SMALL_LETTER_Z)\n)\n\n/** Returns whether the unicode value is a space. [↗](https://drafts.csswg.org/css-syntax/#whitespace) */\nexport const space = (code: number) => (\n\tcode === cp.CHARACTER_TABULATION\n\t|| code === cp.LINE_FEED\n\t|| code === cp.FORM_FEED\n\t|| code === cp.CARRIAGE_RETURN\n\t|| code === cp.SPACE\n)\n\n/** Returns whether the unicode values are a valid escape. [↗](https://drafts.csswg.org/css-syntax/#starts-with-a-valid-escape) */\nexport const validEscape = (code1of2: number, code2of2: number) => (\n\tcode1of2 === cp.REVERSE_SOLIDUS\n\t&& !space(code2of2)\n)\n","/** [`<symbol-token>`](https://drafts.csswg.org/css-syntax/#typedef-delim-token) */\nexport const SYMBOL                      = 0x0001\n\n/** [`<comment-token>`](https://drafts.csswg.org/css-syntax/#comment-diagram) */\nexport const COMMENT                     = 0x0002\n\n/** [`<space-token>`](https://drafts.csswg.org/css-syntax/#whitespace-token-diagram) */\nexport const SPACE                       = 0x0003\n\n/** [`<word-token>`](https://drafts.csswg.org/css-syntax/#ident-token-diagram) */\nexport const WORD                        = 0x0004\n\n/** [`<action-token>`](https://drafts.csswg.org/css-syntax/#function-token-diagram) */\nexport const ACTION                      = 0x0005\n\n/** [`<atword-token>`](https://drafts.csswg.org/css-syntax/#at-keyword-token-diagram) */\nexport const ATWORD                      = 0x0006\n\n/** [`<hash-token>`](https://drafts.csswg.org/css-syntax/#hash-token-diagram) */\nexport const HASH                        = 0x0007\n\n/** [`<string-token>`](https://drafts.csswg.org/css-syntax/#string-token-diagram) */\nexport const STRING                      = 0x0008\n\n/** [`<number-token>`](https://drafts.csswg.org/css-syntax/#consume-numeric-token) */\nexport const NUMBER                      = 0x0009\n","import { CSSState, CSSToken } from '../types/global/global.js'\n\nimport * as cp from './code-points.js'\nimport * as is from './is.js'\nimport * as tt from './token-types.js'\n\nconst { fromCharCode } = String\n\n/** Consumes and returns a token. [↗](https://drafts.csswg.org/css-syntax/#consume-token) */\nexport const consume = (\n\t/** Condition of the current tokenizer. */\n\tstate: CSSState\n) => {\n\tswitch (true) {\n\t\t/* <comment-token>\n\t\t/* https://drafts.csswg.org/css-syntax/#consume-comment */\n\t\tcase state.codeAt0 === cp.SOLIDUS:\n\t\t\tif (state.codeAt1 === cp.ASTERISK) return consumeCommentToken(state)\n\t\t\tbreak\n\t\t/* <space-token>\n\t\t/* https://drafts.csswg.org/css-syntax/#whitespace-token-diagram */\n\t\tcase is.space(state.codeAt0):\n\t\t\treturn consumeSpaceToken(state)\n\t\t/* <string-token>\n\t\t/* https://drafts.csswg.org/css-syntax/#string-token-diagram */\n\t\tcase state.codeAt0 === cp.QUOTATION_MARK:\n\t\tcase state.codeAt0 === cp.APOSTROPHE:\n\t\t\t// \"\" || ''\n\t\t\treturn consumeStringToken(state)\n\t\t/* <hash-token>\n\t\t/* https://drafts.csswg.org/css-syntax/#hash-token-diagram */\n\t\tcase state.codeAt0 === cp.NUMBER_SIGN:\n\t\t\t// #W\n\t\t\tif (is.identifier(state.codeAt1)) return {\n\t\t\t\ttick: state.tick,\n\t\t\t\ttype: tt.HASH,\n\t\t\t\tcode: -1,\n\t\t\t\tlead: consumeAnyValue(state),\n\t\t\t\tdata: consumeAnyValue(state) + consumeIdentifierValue(state),\n\t\t\t\ttail: '',\n\t\t\t} as CSSToken\n\t\t\t// #\\:\n\t\t\tif (is.validEscape(state.codeAt1, state.codeAt2)) return {\n\t\t\t\ttick: state.tick,\n\t\t\t\ttype: tt.HASH,\n\t\t\t\tcode: -1,\n\t\t\t\tlead: consumeAnyValue(state),\n\t\t\t\tdata: consumeAnyValue(state) + consumeAnyValue(state) + consumeIdentifierValue(state),\n\t\t\t\ttail: '',\n\t\t\t} as CSSToken\n\t\t\tbreak\n\t\t/* <ident-token> */\n\t\t/* https://drafts.csswg.org/css-syntax/#ident-token-diagram */\n\t\tcase state.codeAt0 === cp.REVERSE_SOLIDUS:\n\t\t\tif (is.validEscape(state.codeAt0, state.codeAt1)) return consumeIdentifierLikeToken(state, {\n\t\t\t\ttick: state.tick,\n\t\t\t\ttype: tt.WORD,\n\t\t\t\tcode: -1,\n\t\t\t\tlead: '',\n\t\t\t\tdata: consumeAnyValue(state) + consumeAnyValue(state) + consumeAnyValue(state) + consumeIdentifierValue(state),\n\t\t\t\ttail: '',\n\t\t\t})\n\t\t\tbreak\n\t\tcase is.identifierStart(state.codeAt0):\n\t\t\t// W\n\t\t\treturn consumeIdentifierLikeToken(state, {\n\t\t\t\ttick: state.tick,\n\t\t\t\ttype: tt.WORD,\n\t\t\t\tcode: -1,\n\t\t\t\tlead: '',\n\t\t\t\tdata: consumeAnyValue(state) + consumeIdentifierValue(state),\n\t\t\t\ttail: '',\n\t\t\t})\n\t\tcase state.codeAt0 === cp.HYPHEN_MINUS:\n\t\t\t// -W\n\t\t\tif (state.codeAt1 === cp.HYPHEN_MINUS || is.identifierStart(state.codeAt1)) return consumeIdentifierLikeToken(state, {\n\t\t\t\ttick: state.tick,\n\t\t\t\ttype: tt.WORD,\n\t\t\t\tcode: -1,\n\t\t\t\tlead: '',\n\t\t\t\tdata: consumeAnyValue(state) + consumeAnyValue(state) + consumeIdentifierValue(state),\n\t\t\t\ttail: '',\n\t\t\t})\n\t\t\t// -\\:\n\t\t\tif (is.validEscape(state.codeAt1, state.codeAt2)) return consumeIdentifierLikeToken(state, {\n\t\t\t\ttick: state.tick,\n\t\t\t\ttype: tt.WORD,\n\t\t\t\tcode: -1,\n\t\t\t\tlead: '',\n\t\t\t\tdata: consumeAnyValue(state) + consumeAnyValue(state) + consumeAnyValue(state) + consumeIdentifierValue(state),\n\t\t\t\ttail: '',\n\t\t\t})\n\t\t/* <number-token> */\n\t\t/* https://drafts.csswg.org/css-syntax/#number-token-diagram */\n\t\t\t// -8\n\t\t\tif (is.digit(state.codeAt1)) return {\n\t\t\t\ttick: state.tick,\n\t\t\t\ttype: tt.NUMBER,\n\t\t\t\tcode: -1,\n\t\t\t\tlead: '',\n\t\t\t\tdata: consumeAnyValue(state) + consumeAnyValue(state) + consumeNumberSansAdditiveValue(state),\n\t\t\t\ttail: consumeNumericUnitValue(state),\n\t\t\t} as CSSToken\n\t\t\t// -.8\n\t\t\tif (state.codeAt1 === cp.FULL_STOP && is.digit(state.codeAt2)) return {\n\t\t\t\ttick: state.tick,\n\t\t\t\ttype: tt.NUMBER,\n\t\t\t\tcode: -1,\n\t\t\t\tlead: '',\n\t\t\t\tdata: consumeAnyValue(state) + consumeAnyValue(state) + consumeAnyValue(state) + consumeNumberSansDecimalValue(state),\n\t\t\t\ttail: consumeNumericUnitValue(state),\n\t\t\t} as CSSToken\n\t\tcase state.codeAt0 === cp.FULL_STOP:\n\t\t\t// .8\n\t\t\tif (is.digit(state.codeAt1)) return {\n\t\t\t\ttick: state.tick,\n\t\t\t\ttype: tt.NUMBER,\n\t\t\t\tcode: -1,\n\t\t\t\tlead: '',\n\t\t\t\tdata: consumeAnyValue(state) + consumeAnyValue(state) + consumeNumberSansDecimalValue(state),\n\t\t\t\ttail: consumeNumericUnitValue(state),\n\t\t\t} as CSSToken\n\t\t\tbreak\n\t\tcase state.codeAt0 === cp.PLUS_SIGN:\n\t\t\t// +8\n\t\t\tif (is.digit(state.codeAt1)) return {\n\t\t\t\ttick: state.tick,\n\t\t\t\ttype: tt.NUMBER,\n\t\t\t\tcode: -1,\n\t\t\t\tlead: '',\n\t\t\t\tdata: consumeAnyValue(state) + consumeAnyValue(state) + consumeNumberSansAdditiveValue(state),\n\t\t\t\ttail: consumeNumericUnitValue(state),\n\t\t\t} as CSSToken\n\t\t\t// +.8\n\t\t\tif (state.codeAt1 === cp.FULL_STOP && is.digit(state.codeAt2)) return {\n\t\t\t\ttick: state.tick,\n\t\t\t\ttype: tt.NUMBER,\n\t\t\t\tcode: -1,\n\t\t\t\tlead: '',\n\t\t\t\tdata: consumeAnyValue(state) + consumeAnyValue(state) + consumeAnyValue(state) + consumeNumberSansDecimalValue(state),\n\t\t\t\ttail: consumeNumericUnitValue(state),\n\t\t\t} as CSSToken\n\t\t\tbreak\n\t\tcase is.digit(state.codeAt0):\n\t\t\t// 8\n\t\t\treturn {\n\t\t\t\ttick: state.tick,\n\t\t\t\ttype: tt.NUMBER,\n\t\t\t\tcode: -1,\n\t\t\t\tlead: '',\n\t\t\t\tdata: consumeAnyValue(state) + consumeNumberSansAdditiveValue(state),\n\t\t\t\ttail: consumeNumericUnitValue(state),\n\t\t\t} as CSSToken\n\t\t/* <atident-token> */\n\t\t/* https://drafts.csswg.org/css-syntax/#at-keyword-token-diagram */\n\t\tcase state.codeAt0 === cp.COMMERCIAL_AT:\n\t\t\tif (state.codeAt1 === cp.HYPHEN_MINUS) {\n\t\t\t\t// @--\n\t\t\t\tif (state.codeAt2 === cp.HYPHEN_MINUS) return {\n\t\t\t\t\ttick: state.tick,\n\t\t\t\t\ttype: tt.ATWORD,\n\t\t\t\t\tcode: -1,\n\t\t\t\t\tlead: consumeAnyValue(state),\n\t\t\t\t\tdata: consumeAnyValue(state) + consumeAnyValue(state) + consumeIdentifierValue(state),\n\t\t\t\t\ttail: '',\n\t\t\t\t} as CSSToken\n\t\t\t\t// @-W\n\t\t\t\tif (is.identifierStart(state.codeAt2)) return {\n\t\t\t\t\ttick: state.tick,\n\t\t\t\t\ttype: tt.ATWORD,\n\t\t\t\t\tcode: -1,\n\t\t\t\t\tlead: consumeAnyValue(state),\n\t\t\t\t\tdata: consumeAnyValue(state) + consumeAnyValue(state) + consumeIdentifierValue(state),\n\t\t\t\t\ttail: '',\n\t\t\t\t} as CSSToken\n\t\t\t\t// @-\\:\n\t\t\t\tif (is.validEscape(state.codeAt2, state.codeAt3)) return {\n\t\t\t\t\ttick: state.tick,\n\t\t\t\t\ttype: tt.ATWORD,\n\t\t\t\t\tcode: -1,\n\t\t\t\t\tlead: consumeAnyValue(state),\n\t\t\t\t\tdata: consumeAnyValue(state) + consumeAnyValue(state) + consumeAnyValue(state) + consumeIdentifierValue(state),\n\t\t\t\t\ttail: '',\n\t\t\t\t} as CSSToken\n\t\t\t}\n\t\t\t// @W\n\t\t\tif (is.identifierStart(state.codeAt1)) return {\n\t\t\t\ttick: state.tick,\n\t\t\t\ttype: tt.ATWORD,\n\t\t\t\tcode: -1,\n\t\t\t\tlead: consumeAnyValue(state),\n\t\t\t\tdata: consumeAnyValue(state) + consumeIdentifierValue(state),\n\t\t\t\ttail: '',\n\t\t\t} as CSSToken\n\t\t\t// @\\:\n\t\t\tif (is.validEscape(state.codeAt1, state.codeAt2)) return {\n\t\t\t\ttick: state.tick,\n\t\t\t\ttype: tt.ATWORD,\n\t\t\t\tcode: -1,\n\t\t\t\tlead: consumeAnyValue(state),\n\t\t\t\tdata: consumeAnyValue(state) + consumeAnyValue(state) + consumeIdentifierValue(state),\n\t\t\t\ttail: '',\n\t\t\t} as CSSToken\n\t\t\tbreak\n\t}\n\t/* <delim-token> */\n\t/* https://drafts.csswg.org/css-syntax/#typedef-delim-token */\n\treturn {\n\t\ttick: state.tick,\n\t\ttype: tt.SYMBOL,\n\t\tcode: state.codeAt0,\n\t\tlead: '',\n\t\tdata: consumeAnyValue(state),\n\t\ttail: '',\n\t} as CSSToken\n}\n\n/** Consume and return a value. [↗](https://drafts.csswg.org/css-syntax/#consume-token) */\nconst consumeAnyValue = (state: CSSState) => {\n\tconst result = fromCharCode(state.codeAt0)\n\tstate.next()\n\treturn result\n}\n\n/** Consume and return an identifier value. [↗](https://drafts.csswg.org/css-syntax/#consume-an-identifier) */\nconst consumeIdentifierValue = (state: CSSState) => {\n\tlet result = ''\n\twhile (true) {\n\t\tswitch (true) {\n\t\t\tcase is.validEscape(state.codeAt0, state.codeAt1):\n\t\t\t\tresult += fromCharCode(state.codeAt0)\n\t\t\t\tstate.next()\n\t\t\tcase is.identifier(state.codeAt0):\n\t\t\t\tresult += fromCharCode(state.codeAt0)\n\t\t\t\tstate.next()\n\t\t\t\tcontinue\n\t\t}\n\t\tbreak\n\t}\n\treturn result\n}\n\n/** Consume and return an identifier or function token. [↗](https://drafts.csswg.org/css-syntax/#consume-an-identifier) */\nconst consumeIdentifierLikeToken = (state: CSSState, token: CSSToken) => {\n\tif (state.codeAt0 === cp.LEFT_PARENTHESIS) {\n\t\ttoken.type = tt.ACTION\n\t\ttoken.tail = '('\n\t\tstate.next()\n\t}\n\treturn token\n}\n\n/** Consume and return a comment token. [↗](https://drafts.csswg.org/css-syntax/#consume-comment) */\nconst consumeCommentToken = (state: CSSState) => {\n\tconst token: CSSToken = {\n\t\ttick: state.tick,\n\t\ttype: tt.COMMENT,\n\t\tcode: -1,\n\t\tlead: '/*',\n\t\tdata: '',\n\t\ttail: '',\n\t}\n\tstate.next()\n\tstate.next()\n\twhile (state.tick < state.size) {\n\t\t// @ts-ignore\n\t\tif (state.codeAt0 === cp.ASTERISK && state.codeAt1 === cp.SOLIDUS) {\n\t\t\ttoken.tail = '*/'\n\t\t\tstate.next()\n\t\t\tstate.next()\n\t\t\tbreak\n\t\t}\n\t\ttoken.data += consumeAnyValue(state)\n\t}\n\treturn token\n}\n\n/** Consumes and returns a space token. [↗](https://drafts.csswg.org/css-syntax/#whitespace-token-diagram) */\nconst consumeSpaceToken = (state: CSSState) => {\n\tconst token: CSSToken = {\n\t\ttick: state.tick,\n\t\ttype: tt.SPACE,\n\t\tcode: -1,\n\t\tlead: '',\n\t\tdata: consumeAnyValue(state),\n\t\ttail: '',\n\t}\n\twhile (state.tick < state.size) {\n\t\tif (!is.space(state.codeAt0)) break\n\t\ttoken.data += consumeAnyValue(state)\n\t}\n\treturn token\n}\n\n/** Consumes and returns a string token. [↗](https://drafts.csswg.org/css-syntax/#string-token-diagram) */\nconst consumeStringToken = (state: CSSState) => {\n\tconst { codeAt0 } = state\n\tconst token: CSSToken = {\n\t\ttick: state.tick,\n\t\ttype: tt.STRING,\n\t\tcode: -1,\n\t\tlead: '',\n\t\tdata: consumeAnyValue(state),\n\t\ttail: '',\n\t}\n\twhile (state.tick < state.size) {\n\t\tswitch (true) {\n\t\t\tcase is.validEscape(state.codeAt0, state.codeAt1):\n\t\t\t\ttoken.data += consumeAnyValue(state)\n\t\t\tdefault:\n\t\t\t\ttoken.data += consumeAnyValue(state)\n\t\t\t\tcontinue\n\t\t\tcase state.codeAt0 === codeAt0:\n\t\t\t\ttoken.tail = consumeAnyValue(state)\n\t\t}\n\t\tbreak\n\t}\n\treturn token\n}\n\n/** Consumes and returns a number value after an additive symbol. [↗](https://drafts.csswg.org/css-syntax/#consume-a-number) */\nexport const consumeNumberSansAdditiveValue = (state: CSSState) => {\n\tlet result = ''\n\tresult += consumeDigitValue(state)\n\tif (state.codeAt0 === cp.FULL_STOP && is.digit(state.codeAt1)) result += consumeAnyValue(state) + consumeAnyValue(state) + consumeDigitValue(state)\n\treturn result + consumeNumberSansDecimalValue(state)\n}\n\n/** Consumes and returns a number value after a decimal place. [↗](https://drafts.csswg.org/css-syntax/#consume-a-number) */\nconst consumeNumberSansDecimalValue = (state: CSSState) => {\n\tlet result = ''\n\tresult += consumeDigitValue(state)\n\tif (state.codeAt0 === cp.LATIN_CAPITAL_LETTER_E || state.codeAt0 === cp.LATIN_SMALL_LETTER_E) {\n\t\tswitch (true) {\n\t\t\tcase (state.codeAt1 === cp.PLUS_SIGN || state.codeAt1 === cp.HYPHEN_MINUS):\n\t\t\t\tif (!is.digit(state.codeAt2)) break\n\t\t\t\tresult += consumeAnyValue(state)\n\t\t\tcase is.digit(state.codeAt1):\n\t\t\t\tresult += consumeAnyValue(state) + consumeAnyValue(state) + consumeDigitValue(state)\n\t\t}\n\t}\n\treturn result\n}\n\n/** Consumes and returns a digit value. [↗](https://drafts.csswg.org/css-syntax/#consume-a-number) */\nconst consumeDigitValue = (state: CSSState) => {\n\tlet result = ''\n\twhile (state.tick < state.size) {\n\t\tif (!is.digit(state.codeAt0)) break\n\t\tresult += consumeAnyValue(state)\n\t}\n\treturn result\n}\n\n/** Consumes and returns a numeric unit value. [↗](https://drafts.csswg.org/css-syntax/#consume-an-identifier) */\nconst consumeNumericUnitValue = (state: CSSState) => (\n\tstate.codeAt0 === cp.HYPHEN_MINUS\n\t\t? state.codeAt1 === cp.HYPHEN_MINUS\n\t\t\t? consumeAnyValue(state) + consumeAnyValue(state) + consumeIdentifierValue(state)\n\t\t: is.identifierStart(state.codeAt1)\n\t\t\t? consumeAnyValue(state) + consumeAnyValue(state) + consumeIdentifierValue(state)\n\t\t: is.validEscape(state.codeAt1, state.codeAt2)\n\t\t\t? consumeAnyValue(state) + consumeAnyValue(state) + consumeAnyValue(state) + consumeIdentifierValue(state)\n\t\t: ''\n\t: is.identifierStart(state.codeAt0)\n\t\t? consumeAnyValue(state) + consumeIdentifierValue(state)\n\t: is.validEscape(state.codeAt0, state.codeAt1)\n\t\t? consumeAnyValue(state) + consumeAnyValue(state) + consumeIdentifierValue(state)\n\t: ''\n)\n","import { CSSState, CSSIterator, CSSIteration } from './types/global/global.js'\nimport { consume } from './lib/consume.js'\n\n/** Returns a CSS iterator to yield tokens from the given CSS data. */\nexport const tokenize = (/** CSS data. */ data: string) => {\n\tlet size = data.length\n\tlet tick = 0\n\n\t/** Condition of the current tokenizer. */\n\tlet state: CSSState = {\n\t\tdata,\n\t\tsize,\n\t\ttick,\n\t\tcodeAt0: tick + 0 < size ? data.charCodeAt(tick + 0) : -1,\n\t\tcodeAt1: tick + 1 < size ? data.charCodeAt(tick + 1) : -1,\n\t\tcodeAt2: tick + 2 < size ? data.charCodeAt(tick + 2) : -1,\n\t\tcodeAt3: tick + 3 < size ? data.charCodeAt(tick + 3) : -1,\n\t\t/** Advances the unicode characters being read from the CSS data by one position. */\n\t\tnext() {\n\t\t\tstate.tick = ++tick\n\t\t\tstate.codeAt0 = state.codeAt1\n\t\t\tstate.codeAt1 = state.codeAt2\n\t\t\tstate.codeAt2 = state.codeAt3\n\t\t\tstate.codeAt3 = tick + 3 < size ? data.charCodeAt(tick + 3) : -1\n\t\t\treturn tick >= size\n\t\t}\n\t}\n\n\t/** Returns the most recent state and token yielded from the CSS iterator. */\n\tconst iterator: CSSIterator = ((): CSSIteration => (\n\t\tstate.tick >= state.size\n\t\t\t? {\n\t\t\t\tdone: true,\n\t\t\t\tvalue: { tick: state.tick, type: 0, code: -2, lead: '', data: '', tail: '' }\n\t\t\t}\n\t\t: {\n\t\t\tdone: false,\n\t\t\tvalue: consume(state),\n\t\t}\n\t)) as CSSIterator\n\n\titerator[Symbol.iterator] = () => ({ next: iterator })\n\n\treturn iterator\n}\n"],"names":["CHARACTER_TABULATION","LINE_FEED","FORM_FEED","CARRIAGE_RETURN","SPACE","QUOTATION_MARK","NUMBER_SIGN","APOSTROPHE","LEFT_PARENTHESIS","ASTERISK","PLUS_SIGN","HYPHEN_MINUS","FULL_STOP","SOLIDUS","DIGIT_ZERO","DIGIT_NINE","COMMERCIAL_AT","LATIN_CAPITAL_LETTER_A","LATIN_CAPITAL_LETTER_E","LATIN_CAPITAL_LETTER_Z","REVERSE_SOLIDUS","LOW_LINE","LATIN_SMALL_LETTER_A","LATIN_SMALL_LETTER_E","LATIN_SMALL_LETTER_Z","NON_ASCII","digit","code","cp","identifier","identifierStart","space","validEscape","code1of2","code2of2","SYMBOL","COMMENT","WORD","ACTION","ATWORD","HASH","STRING","NUMBER","fromCharCode","String","consume","state","codeAt0","codeAt1","consumeCommentToken","is","consumeSpaceToken","consumeStringToken","tick","type","tt","lead","consumeAnyValue","data","consumeIdentifierValue","tail","codeAt2","consumeIdentifierLikeToken","consumeNumberSansAdditiveValue","consumeNumericUnitValue","consumeNumberSansDecimalValue","codeAt3","result","next","token","size","consumeDigitValue","tokenize","length","charCodeAt","iterator","done","value","Symbol"],"mappings":"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"}