/**
 * Enumeration with the cosmetic rules markers.
 *
 * All cosmetic rules have similar structure:
 * ```
 * rule = [domains] "marker" content
 * domains = [domain0, domain1[, ...[, domainN]]]
 * ```
 *
 * For instance, element hiding rules look like:
 * `example.org##.banner`
 *
 * In this case:
 * * `[domains]` is `example.org` (comma-separated list of domains)
 * * `marker` is `##` (marker of element hiding rules)
 * * `content` is `.banner` (CSS selector)
 */
export declare enum CosmeticRuleMarker {
    /** https://kb.adguard.com/en/general/how-to-create-your-own-ad-filters#cosmetic-elemhide-rules */
    ElementHiding = "##",
    /** https://kb.adguard.com/en/general/how-to-create-your-own-ad-filters#element-hiding-rules-exceptions */
    ElementHidingException = "#@#",
    /** https://kb.adguard.com/en/general/how-to-create-your-own-ad-filters#extended-css-selectors */
    ElementHidingExtCSS = "#?#",
    /** Basically the same as {@link CosmeticRuleMarker.ElementHidingException} */
    ElementHidingExtCSSException = "#@?#",
    /** https://kb.adguard.com/en/general/how-to-create-your-own-ad-filters#cosmetic-css-rules */
    Css = "#$#",
    /** https://kb.adguard.com/en/general/how-to-create-your-own-ad-filters#cosmetic-css-rules-exceptions */
    CssException = "#@$#",
    /**
     * CSS rules that use extended CSS selectors:
     * https://kb.adguard.com/en/general/how-to-create-your-own-ad-filters#extended-css-selectors
     */
    CssExtCSS = "#$?#",
    /** Basically the same as {@link CosmeticRuleMarker.CssException} */
    CssExtCSSException = "#@$?#",
    /** https://kb.adguard.com/en/general/how-to-create-your-own-ad-filters#javascript-rules */
    Js = "#%#",
    /** https://kb.adguard.com/en/general/how-to-create-your-own-ad-filters#javascript-rules-exceptions-1 */
    JsException = "#@%#",
    /** https://kb.adguard.com/en/general/how-to-create-your-own-ad-filters#html-filtering-rules */
    Html = "$$",
    /** https://kb.adguard.com/en/general/how-to-create-your-own-ad-filters#html-filtering-rules-exceptions-1 */
    HtmlException = "$@$"
}
/**
 * findCosmeticRuleMarker looks for a cosmetic rule marker in the rule text
 * and returns the start index of the marker and the marker found.
 * If nothing found, it returns -1 and null.
 *
 * @privateRemarks
 *
 * The idea is to search for the rule marker as quickly as possible.
 * If we were simply using `Array.includes` we had to call it a dozen of times (for every marker),
 * and that'd have been much slower.
 *
 * @param ruleText - rule text to scan.
 */
export declare function findCosmeticRuleMarker(ruleText: string): [number, CosmeticRuleMarker | null];
/**
 * Detects is the rule is extended css rule
 * @param marker - string to check
 */
export declare function isExtCssMarker(marker: string): boolean;
/**
 * AdGuard scriptlet rule mask
 */
export declare const ADG_SCRIPTLET_MASK = "//scriptlet";
