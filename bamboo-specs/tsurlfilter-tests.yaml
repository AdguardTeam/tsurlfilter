---
version: 2
plan:
  project-key: AJL
  key: TSURLFILTERTEST
  name: tsurlfilter - tests
variables:
  dockerContainer: adguard/node-ssh:22.17--0
  testTimeout: 600s

# Some packages are independent of each other so we can run them in parallel (different jobs on same stage)
# other packages depend on each other so they should be run one after another (different stages),
# e.g. CSSTokenizer and Logger are totally independent,
# but DNR-Ruleset depends on TSUrlFilter, so even if it does not depend on TSWebExtension,
# they should run on different stages, this way bamboo cache is used ("[local cache]" in logs).
#
# Dependencies are described in the README.md file ("Dependency Tree" section).

# Stage 1:
# - Logger test run;
# - CSS Tokenizer test run.
#
# Stage 2:
# - AGTree test run.
#
# Stage 3:
# - TSUrlFilter test run;
#
# Stage 4:
# - TSWebExtension test run.
#
# Stage 5:
# - DNR-Rulesets test run;
#
# Stage 6:
# - Example APIs and TSWebExtensions for MV2 and MV3.
#
# Stage 7:
# - Update TSUrlFilter Docs MV3.
#
# Final state:
# - Cleanup.

# Experiment:
# Only jobs from Stage 1 use requires clean checkout.
# Since later jobs rely on previous jobs, let's try this approach.
# And default value for 'force-clean-build' is false.

stages:
  - Stage 1: &stage
      manual: false
      final: false
      jobs:
        - Test Logger
        - Test CSSTokenizer
  - Stage 2:
      <<: *stage
      jobs:
        - Test AGTree
  - Stage 3:
      <<: *stage
      jobs:
        - Test TSUrlFilter
  - Stage 4:
      <<: *stage
      jobs:
        - Test TSWebExtension
  - Stage 5:
      <<: *stage
      jobs:
        - Test DNR-Rulesets
  - Stage 6:
      <<: *stage
      jobs:
        - Test Examples - APIs and TSWebExtensions
  - Stage 7:
      <<: *stage
      jobs:
        - Update TSUrlFilter Docs MV3

# NOTE: Each script is separate because, otherwise, Bamboo does not fail in the case of an error.

Test Logger:
  key: TESTLOGGER
  docker: &docker
    image: "${bamboo.dockerContainer}"
    volumes:
       ${system.PNPM_DIR}: "${bamboo.cachePnpm}"
  tasks:
    - checkout:
        force-clean-build: true
    - script: &setup-script
        interpreter: SHELL
        scripts:
          - |-
            set -ex

            ls -alt

            # Fix mixed logs
            exec 2>&1

            # Set cache directory
            pnpm config set store-dir ${bamboo.cachePnpm}
    - script:
        interpreter: SHELL
        scripts:
          - "./bamboo-specs/scripts/timeout-wrapper.sh ${bamboo.testTimeout} ./bamboo-specs/scripts/logger-tests.sh"
    # IMPORTANT: run clean after each stage
    # since each stage is run in a separate directory and we want to clean up after each stage
  final-tasks:
    - script: &cleanup-script
        interpreter: SHELL
        scripts:
          - "./bamboo-specs/scripts/cleanup.sh"
  requirements: &requirements
    - adg-docker: 'true'
    - extension: 'true'

Test CSSTokenizer:
  key: TESTCSSTOKENIZER
  docker: *docker
  tasks:
    - checkout:
        force-clean-build: true
    - script: *setup-script
    - script:
        interpreter: SHELL
        scripts:
          - "./bamboo-specs/scripts/timeout-wrapper.sh ${bamboo.testTimeout} ./bamboo-specs/scripts/css-tokenizer-tests.sh"
  final-tasks:
    - script:
        interpreter: SHELL
        scripts:
          - "./bamboo-specs/scripts/cleanup.sh"
  requirements: *requirements

Test AGTree:
  key: TESTAGTREE
  docker: *docker
  tasks:
    - checkout:
        force-clean-build: true
    - script: *setup-script
    - script:
        interpreter: SHELL
        scripts:
          - "./bamboo-specs/scripts/timeout-wrapper.sh ${bamboo.testTimeout} ./bamboo-specs/scripts/agtree-tests.sh"
  final-tasks:
    - script: *cleanup-script
  requirements: *requirements

Test TSUrlFilter:
  key: TESTTSURLFILTER
  docker: *docker
  tasks:
    - checkout
    - script: *setup-script
    - script:
        interpreter: SHELL
        scripts:
          - "./bamboo-specs/scripts/timeout-wrapper.sh ${bamboo.testTimeout} ./bamboo-specs/scripts/tsurlfilter-tests.sh"
  final-tasks:
    - script: *cleanup-script
  requirements: *requirements

Test TSWebExtension:
  key: TESTTSWEBEXTENSION
  docker: *docker
  tasks:
    - checkout:
        force-clean-build: true
    - script: *setup-script
    - script:
        interpreter: SHELL
        scripts:
          - "./bamboo-specs/scripts/timeout-wrapper.sh ${bamboo.testTimeout} ./bamboo-specs/scripts/tswebextension-tests.sh"
  final-tasks:
    - script: *cleanup-script
  requirements: *requirements

Test DNR-Rulesets:
  key: TESTDNRRULESETS
  docker: *docker
  tasks:
    - checkout:
        force-clean-build: true
    - script: *setup-script
    - script:
        interpreter: SHELL
        scripts:
          - "./bamboo-specs/scripts/timeout-wrapper.sh ${bamboo.testTimeout} ./bamboo-specs/scripts/dnr-rulesets-tests.sh"
  final-tasks:
    - script: *cleanup-script
  requirements: *requirements

Test Examples - APIs and TSWebExtensions:
  key: TESTEXAMPLES
  docker: *docker
  tasks:
    - checkout:
        force-clean-build: true
    - script: *setup-script
    - script:
        interpreter: SHELL
        scripts:
          - "./bamboo-specs/scripts/timeout-wrapper.sh ${bamboo.testTimeout} ./bamboo-specs/scripts/examples-tswebextension-mv2-tests.sh"
    - script:
        interpreter: SHELL
        scripts:
          - "./bamboo-specs/scripts/timeout-wrapper.sh ${bamboo.testTimeout} ./bamboo-specs/scripts/examples-tswebextension-mv3-tests.sh"
    - script:
        interpreter: SHELL
        scripts:
          - "./bamboo-specs/scripts/timeout-wrapper.sh ${bamboo.testTimeout} ./bamboo-specs/scripts/examples-adguard-api-tests.sh"
    - script:
        interpreter: SHELL
        scripts:
          - "./bamboo-specs/scripts/timeout-wrapper.sh ${bamboo.testTimeout} ./bamboo-specs/scripts/examples-adguard-api-mv3-tests.sh"
  final-tasks:
    - script:
        interpreter: SHELL
        scripts:
          - "./bamboo-specs/scripts/cleanup.sh packages/examples/adguard-api/build/extension.zip,packages/examples/adguard-api-mv3/build/extension.zip"
  artifacts:
    - name: examples-adguard-api-extension.zip
      location: packages/examples/adguard-api/build
      pattern: extension.zip
      shared: false
      required: false
    - name: examples-adguard-api-mv3-extension.zip
      location: packages/examples/adguard-api-mv3/build
      pattern: extension.zip
      shared: false
      required: false
  requirements: *requirements

Update TSUrlFilter Docs MV3:
  key: UPDTSURLFILTERDOCSMV3
  docker: *docker
  tasks:
    - checkout:
        force-clean-build: true
    - script: *setup-script
    - script:
        interpreter: SHELL
        scripts:
          - "./bamboo-specs/scripts/timeout-wrapper.sh ${bamboo.testTimeout} ./bamboo-specs/scripts/tsurlfilter-update-docs-mv3.sh"
    - any-task:
        plugin-key: com.atlassian.bamboo.plugins.vcs:task.vcs.commit
        configuration:
          commitMessage: 'skipci: Automatic update tsurlfilter MV3 docs'
          selectedRepository: defaultRepository
  final-tasks:
    - script: *cleanup-script
  requirements: *requirements

branches:
  create: for-pull-request
  delete:
    after-deleted-days: '1'
    after-inactive-days: '5'
  link-to-jira: true

notifications:
  - events:
      - plan-status-changed
    recipients:
      - webhook:
          name: Build webhook
          url: http://prod.jirahub.service.eu.consul/v1/webhook/bamboo

labels: [ ]

other:
  concurrent-build-plugin: system-default
