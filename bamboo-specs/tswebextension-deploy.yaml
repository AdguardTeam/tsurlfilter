---
version: 2
deployment:
  name: tswebextension - deploy
  source-plan: AJL-TSWEBEXTENSIONBUILD
release-naming: ${bamboo.inject.version}
environments:
  - npmjs

npmjs:
  docker:
    image: adguard/node-ssh:14.18--0
    volumes:
      ${system.YARN_DIR}: "${bamboo.cacheYarn}"
  triggers: [ ]
  tasks:
    - checkout:
        force-clean-build: 'true'
    - script:
        interpreter: SHELL
        scripts:
          - |-
            set -e
            set -x

            # TODO: Remove after merge to master
            # Needs to get tswebextension from its development branch
            git checkout epic/tswebextension

            ls -alt

            yarn install ${bamboo.varsYarn}

            npx lerna bootstrap
            # For link dependencies
            npx lerna run --scope @adguard/tsurlfilter build
            npx lerna exec --scope @adguard/tswebextension yarn install -- ${bamboo.varsYarn}
            npx lerna run --scope @adguard/tswebextension build

            cd ./packages/tswebextension
            ls -alt

            export NPM_TOKEN=${bamboo.npmSecretToken}
            echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > .npmrc
            npm publish --access public

            # cleanup parent
            cd ../..
            rm -rf node_modules
            # cleanup child packages
            npx lerna exec -- rm -rf node_modules
  requirements:
    - adg-docker: 'true'
  notifications:
    - events:
        - deployment-started-and-finished
      recipients:
        - webhook:
            name: Deploy webhook
            url: http://prod.jirahub.service.eu.consul/v1/webhook/bamboo
