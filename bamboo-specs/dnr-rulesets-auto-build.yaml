---
version: 2
plan:
  project-key: AJL
  key: DNRRULESETSAUTOBUILD
  name: DNR Rulesets - auto build
variables:
  dockerContainer: adguard/node-ssh:18.19--0

stages:
  - Build:
      manual: false
      final: false
      jobs:
        - Build

Build:
  key: BUILD
  other:
    clean-working-dir: true
  docker:
    image: "${bamboo.dockerContainer}"
    volumes:
       ${system.PNPM_DIR}: "${bamboo.cachePnpm}"
  tasks:
    - checkout:
        force-clean-build: 'true'
    - script:
        interpreter: SHELL
        scripts:
          - |-
            set -e
            set -x

            # Fix mixed logs
            exec 2>&1

            ls -alt

            BRANCH="${bamboo.planRepository.branchName}"

            # Deploy package from "stable/dnr-rulesets" branch only
            # TODO: replace "stable/dnr-rulesets" to "master" branch after merge
            if [ $BRANCH != "stable/dnr-rulesets" ]
            then
              echo "deployment is not supported on branch ${BRANCH}, skipping"
              exit 0;
            fi

            # Set cache directory
            pnpm config set store-dir ${bamboo.cachePnpm}

            # Install dependencies
            pnpm install

            # Test dnr rulesets
            npx lerna run test --scope @adguard/dnr-rulesets

            # Set date to package version
            npx lerna run increment:autodeploy --scope @adguard/dnr-rulesets

            # Build dnr rulesets
            # since updated tgz file should not be committed
            npx lerna run build --scope @adguard/dnr-rulesets --include-dependencies

            # Move to package folder
            cd packages/dnr-rulesets

            # Create artifacts
            pnpm pack && mv adguard-dnr-rulesets-*.tgz dnr-rulesets.tgz
    - inject-variables:
        file: packages/dnr-rulesets/dist/build.txt
        scope: RESULT
        namespace: inject
    - any-task:
        plugin-key: com.atlassian.bamboo.plugins.vcs:task.vcs.commit
        configuration:
          commitMessage: 'skipci: Automatic increment build number during auto build'
          selectedRepository: defaultRepository
    - any-task:
        plugin-key: com.atlassian.bamboo.plugins.vcs:task.vcs.tagging
        configuration:
          selectedRepository: defaultRepository
          tagName: dnr-rulesets-v${bamboo.inject.version}
  final-tasks:
    - script:
        interpreter: SHELL
        scripts:
          - |-
            set -x
            set -e

            # Fix mixed logs
            exec 2>&1

            ls -la

            # TODO: remove the checking after release/v3.1 is merged into master
            BRANCH="${bamboo.planRepository.branchName}"
            if [ $BRANCH != "stable/dnr-rulesets" ]
            then
              echo "nothing to clean on branch ${BRANCH}, skipping"
              exit 0;
            fi

            echo "Size before cleanup:" && du -h | tail -n 1

            pnpm --filter @adguard/dnr-rulesets clear

            pnpm clean

            echo "Size after cleanup:" && du -h | tail -n 1
  artifacts:
    - name: dnr-rulesets.tgz
      location: packages/dnr-rulesets/
      pattern: dnr-rulesets.tgz
      shared: true
      required: true
  requirements:
    - adg-docker: 'true'

# runs plan every 3 hours
triggers:
  - cron:
      expression: 0 0 */3 * * ?

branches:
  create: manually
  delete: never
  link-to-jira: 'true'

notifications:
  - events:
      - plan-status-changed
    recipients:
      - webhook:
          name: Build webhook
          url: http://prod.jirahub.service.eu.consul/v1/webhook/bamboo

labels: []

other:
  concurrent-build-plugin: system-default

# TODO: remove the branch-overrides after release/v3.1 is merged into master
branch-overrides:
  -
    ^(stable\/dnr-rulesets.+|(?!stable\/dnr-rulesets).*)$:
      # for branches other than 'stable/dnr-rulesets' no build should be run
      stages:
        - Build:
            - SkipBuild
      SkipBuild:
        key: SKIPBUILD
        tasks:
          - script:
            - echo 'No build for this branch, skipping'
        requirements:
          - adg-docker: 'true'
          - extension: 'true'
